<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux基本使用</title>
      <link href="/2024/03/18/Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/03/18/Linux%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux基础使用"><a href="#Linux基础使用" class="headerlink" title="Linux基础使用"></a>Linux基础使用</h2><h3 id="Ubuntu软件下载"><a href="#Ubuntu软件下载" class="headerlink" title="Ubuntu软件下载"></a>Ubuntu软件下载</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#下载插件</span><br><span class="line">bd@clem:~$ sudo apt install oneko</span><br><span class="line">#卸载插件</span><br><span class="line">bd@clem:~$ sudo apt remove oneko</span><br></pre></td></tr></tbody></table></figure><h3 id="Python第三库-模块-下载"><a href="#Python第三库-模块-下载" class="headerlink" title="Python第三库(模块)下载"></a>Python第三库(模块)下载</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#切换当前环境</span><br><span class="line">bd@clem:~$ workon py3env</span><br><span class="line">#下载python第三库</span><br><span class="line">(py3env) bd@clem:~$ pip install requests</span><br><span class="line">#换源下载</span><br><span class="line">(py3env) bd@clem:~$ pip install requests -i https://pypi.douban.com/simple</span><br><span class="line">#卸载第三库</span><br><span class="line">(py3env) bd@clem:~$ pip uninstall requests</span><br><span class="line">#查看已经下载安装的模块</span><br><span class="line">(py3env) bd@clem:~$ pip list</span><br><span class="line">#退出当前环境</span><br><span class="line">(py3env) bd@clem:~$ deactivate</span><br></pre></td></tr></tbody></table></figure><h3 id="Windows系统跟Linux系统文件互传"><a href="#Windows系统跟Linux系统文件互传" class="headerlink" title="Windows系统跟Linux系统文件互传"></a>Windows系统跟Linux系统文件互传</h3><ol><li>可以通过pycharm的deployment的上传下载进行文件互传</li><li>可以通过mobaxterm软件左边的目录，通过鼠标的选中文件拖动到Windows系统，或者把桌面或文件夹里面的文件拖到目录栏即可</li></ol><h3 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#切换管理员</span><br><span class="line">bd@clem:~$ su root</span><br><span class="line">Password:</span><br><span class="line">su: Authentication failure</span><br><span class="line">#给管理员设置密码</span><br><span class="line">bd@clem:~$ sudo passwd</span><br><span class="line">[sudo] password for bd:#普通用户bd的密码</span><br><span class="line">New password:#设置的新密码</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">bd@clem:~$ su root#切换超级管理员</span><br><span class="line">Password:</span><br><span class="line"></span><br><span class="line">#创建新用户</span><br><span class="line">root@clem:/home/bd# useradd -m lili</span><br><span class="line">root@clem:/home/bd# cd ..</span><br><span class="line">#查看新用户已经创建成功</span><br><span class="line">root@clem:/home# ls</span><br><span class="line">bd  lili</span><br><span class="line">#给新用户设置登录密码</span><br><span class="line">root@clem:/home# passwd lili</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">root@clem:/etc# su lili</span><br><span class="line">#切换后如果没有修改配置文件，前面的文字会乱码</span><br><span class="line">\[\e]0;\u@\h: \w\a\]\u@\h:\w$ su bd</span><br><span class="line">#进入到配置文件的文件夹</span><br><span class="line">bd@clem:/home$ cd /etc</span><br><span class="line">bd@clem:/etc$ ls -a</span><br><span class="line">#切换管理员用户修改配置文件</span><br><span class="line">bd@clem:/etc$ su root</span><br><span class="line">Password:</span><br><span class="line">#通过vim编辑器修改配置文件</span><br><span class="line">root@clem:/etc# vim passwd</span><br><span class="line">#进入配置文件后，</span><br><span class="line">#</span><br><span class="line">#最下面两行有提示一个command and enter</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>如果分屏的情况输入：q回车，就会只显示一个屏</p><p>出现报错提示按ctrl+enter</p><p>按i进入到修改模式</p><p>修改完之后按esc退出修改模式，输入：wq保存并退出</p><p>添加用户组</p><p>主组和附属组，用户在那个组，那个组就是他的主组</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@clem:/etc# groupadd python</span><br><span class="line">root@clem:/etc# su lili</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@clem:/etc# usermod -g lili -G python,java lili</span><br><span class="line"></span><br><span class="line">lili@clem:~$ groups</span><br><span class="line">lili python java</span><br><span class="line"></span><br><span class="line">lili@clem:~$ newgrp python</span><br><span class="line"></span><br><span class="line">lili@clem:~$ touch aaa.py</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>删除用户</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#没有加上-r的参数，用户就会删除不彻底</span><br><span class="line">bd@clem:~$ sudo userdel lili</span><br><span class="line">#丽丽用户组还会存在，直接当做文件夹删除即可</span><br><span class="line">root@clem:/home# rm -rf lili</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>删除用户组</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bd@clem:~$ sudo groupdel python</span><br><span class="line">bd@clem:~$ sudo groupdel java</span><br></pre></td></tr></tbody></table></figure><p>修改用户的文件权限</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bd@clem:~/test$ chmod u-w demo.py</span><br></pre></td></tr></tbody></table></figure><p>修改文件的所属组</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bd@clem:~/test$ sudo chgrp root demo.py</span><br></pre></td></tr></tbody></table></figure><p>修改文件所属的用户和用户组</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bd@clem:~/test$ sudo chown -R root:bd demo.py</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop基本概念与生态介绍</title>
      <link href="/2024/03/16/Hadoop%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%94%9F%E6%80%81%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/03/16/Hadoop%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%94%9F%E6%80%81%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="大数据概述"><a href="#大数据概述" class="headerlink" title="大数据概述"></a>大数据概述</h2><p>大数据（big data），指的是在一定时间范围内不能以常规软件工具处理（存储和计算）的大而复杂的数据集。说白了大数据就是使用单台计算机没法在规定时间内处理完，或者压根就没法处理的数据集。</p><h3 id="大数据的特性"><a href="#大数据的特性" class="headerlink" title="大数据的特性"></a>大数据的特性</h3><ul><li><p><code>大量 (Volume)</code></p></li><li><ul><li>大数据的“大”首先体现在数据量上。这意味着您需要处理海量、低密度的非结构化数据。这些数据的价值可能是未知的，例如 Twitter 数据流、网页或移动应用点击流，以及设备传感器所捕获的数据等等。在实际应用中，大数据的数据量通常高达数十 TB，甚至数百 PB。</li></ul></li><li><p><code>高速 (Velocity)</code></p></li><li><ul><li>大数据的“高速”指高速接收乃至处理数据 — 数据通常直接流入内存而非写入磁盘。在实际应用中，某些联网的智能产品需要实时或近乎实时地运行，要求基于数据实时评估和操作，而大数据只有具备“高速”特性才能满足这些要求。</li></ul></li><li><p><code>多样化 (Variety)</code></p></li><li><ul><li>多样化是指数据类型众多。通常来说，传统数据属于结构化数据，能够整齐地纳入关系数据库。随着大数据的兴起，各种新的非结构化数据类型不断涌现，例如文本、音频和视频等等，它们需要经过额外的预处理操作才能真正提供洞察和支持性元数据。</li></ul></li></ul><p>Hadoop 是用于处理大数据的工具之一。Hadoop 和其他软件产品通过特定的专有算法和方法来解释或解析大数据搜索的结果。</p><p><img src="/../images/hadoop/image-20240316204701930.png" alt="image-20240316204701930"></p><p>在大数据处理上，Hadoop并非是唯一的分布式处理架构，但是对于大部分的企业来说，<strong>基于Hadoop已经能够满足绝大部分的数据需</strong>求，因此才会成为现在的主流选择。</p><h2 id="Hadoop-概述"><a href="#Hadoop-概述" class="headerlink" title="Hadoop 概述"></a>Hadoop 概述</h2><p>Hadoop 是 Apache软件基金会下一个开源分布式计算平台，以 HDFS（Hadoop Distributed File System）、MapReduce（Hadoop2.0加入了YARN，Yarn是资源调度框架，能够细粒度的管理和调度任务，还能够支持其他的计算框架，比如spark）为核心的 Hadoop 为用户提供了系统底层细节透明的分布式基础架构。hdfs的高容错性、高伸缩性、高效性等优点让用户可以将Hadoop部署在低廉的硬件上，形成分布式系统。</p><p>是一个由 Apache 基金会所开发的分布式系统基础架构，主要解决海量数据的储存和海量数据的分析计算问题。广义上说，Hadoop 是一个更广泛的概念，Hadoop 生态圈。</p><h2 id="Hadoop-发行版本"><a href="#Hadoop-发行版本" class="headerlink" title="Hadoop 发行版本"></a>Hadoop 发行版本</h2><h4 id="Apache-Hadoop发行版"><a href="#Apache-Hadoop发行版" class="headerlink" title="Apache Hadoop发行版"></a>Apache Hadoop发行版</h4><ul><li>官方地址：<a href="https://hadoop.apache.org/">https://hadoop.apache.org</a></li></ul><p>Apache版本最原始（最基础）的版本，对于入门学习最好。</p><p><img src="/../images/hadoop/image-20240316204850323.png" alt="image-20240316204850323"></p><h4 id="DKhadoop发行版"><a href="#DKhadoop发行版" class="headerlink" title="DKhadoop发行版"></a>DKhadoop发行版</h4><ul><li>Github地址：<a href="https://github.com/dkhadoop/dk-fitting">https://github.com/dkhadoop/dk-fitting</a></li></ul><p>有效的集成了整个HADOOP生态系统的全部组件，并深度优化，重新编译为一个完整的更高性能的大数据通用计算平台，实现了各部件的有机协调。因此DKH相比开源的大数据平台，在计算性能上有了高达5倍（最大）的性能提升。DKhadoop将复杂的大数据集群配置简化至三种节点（主节点、管理节点、计算节点），极大的简化了集群的管理运维，增强了集群的高可用性、高可维护性、高稳定性。</p><p><img src="/../images/hadoop/image-20240316204921753.png" alt="image-20240316204921753"></p><h4 id="Cloudera发行版"><a href="#Cloudera发行版" class="headerlink" title="Cloudera发行版"></a>Cloudera发行版</h4><ul><li>官方地址：<a href="https://www.cloudera.com/products/open-source/apache-hadoop.html">https://www.cloudera.com/products/open-source/apache-hadoop.html</a></li></ul><p>CDH是Cloudera的hadoop发行版，完全开源，比Apache hadoop在兼容性，安全性，稳定性上有增强。</p><p><img src="/../images/hadoop/image-20240316205114191.png" alt="image-20240316205114191"></p><h4 id="Hortonworks发行版"><a href="#Hortonworks发行版" class="headerlink" title="Hortonworks发行版"></a>Hortonworks发行版</h4><ul><li>官方地址：<a href="https://www.cloudera.com/products/hdp.html">https://www.cloudera.com/products/hdp.html</a></li></ul><p>Hortonworks 的主打产品是Hortonworks Data Platform (HDP)，也同样是100%开源的产品，其版本特点：HDP包括稳定版本的Apache Hadoop的所有关键组件;安装方便，HDP包括一个现代化的，直观的用户界面的安装和配置工具。</p><p><img src="/../images/hadoop/image-20240316205236938.png" alt="image-20240316205236938"></p><h4 id="华为hadoop发行版"><a href="#华为hadoop发行版" class="headerlink" title="华为hadoop发行版"></a>华为hadoop发行版</h4><p>华为FusionInsight大数据平台是集Hadoop生态发行版、大规模并行处理数据库、大数据云服务于一体的融合数据处理与服务平台，拥有端到端全生命周期的解决方案能力。除了提供包括批处理、内存计算、流计算和MPPDB在内的全方位数据处理能力外，还提供数据分析挖掘平台、数据服务平台，帮助用户实现从数据到知识，从知识到智慧的转换，进而帮助用户从海量数据中挖掘数据价值。</p><p><img src="/../images/hadoop/image-20240316205258712.png" alt="image-20240316205258712"></p><h2 id="版本之间的区别"><a href="#版本之间的区别" class="headerlink" title="版本之间的区别"></a>版本之间的区别</h2><h4 id="Hadoop1-x-Hadoop2-x的演变"><a href="#Hadoop1-x-Hadoop2-x的演变" class="headerlink" title="Hadoop1.x - Hadoop2.x的演变"></a>Hadoop1.x - Hadoop2.x的演变</h4><p><img src="/../images/hadoop/image-20240316205321093.png" alt="image-20240316205321093"></p><h4 id="Hadoop-1-X、2-X、3-X区别"><a href="#Hadoop-1-X、2-X、3-X区别" class="headerlink" title="Hadoop 1.X、2.X、3.X区别"></a>Hadoop 1.X、2.X、3.X区别</h4><ul><li><p>1.X</p></li><li><ul><li>MapReduce（计算+资源调度）</li><li>HDFS（数据存储）</li><li>Common（辅助工具）</li></ul></li><li><p>2.X</p></li><li><ul><li>MapReduce（计算）</li><li>Yarn（资源调度）</li><li>HDFS（数据存储）</li><li>Common（辅助工具）</li></ul></li><li><p>3.X：组成上没有变化</p></li></ul><h4 id="Hadoop2-x与Hadoop3-x区别对比"><a href="#Hadoop2-x与Hadoop3-x区别对比" class="headerlink" title="Hadoop2.x与Hadoop3.x区别对比"></a>Hadoop2.x与Hadoop3.x区别对比</h4><h6 id="License"><a href="#License" class="headerlink" title="License"></a>License</h6><ul><li>Hadoop 2.x - Apache 2.0，开源</li><li>Hadoop 3.x - Apache 2.0，开源</li></ul><h6 id="支持的最低Java版本"><a href="#支持的最低Java版本" class="headerlink" title="支持的最低Java版本"></a>支持的最低Java版本</h6><ul><li>Hadoop 2.x - java的最低支持版本是java 7</li><li>Hadoop 3.x - java的最低支持版本是java 8</li></ul><h6 id="容错"><a href="#容错" class="headerlink" title="容错"></a>容错</h6><ul><li>Hadoop 2.x - 可以通过复制（浪费空间）来处理容错。</li><li>Hadoop 3.x - 可以通过Erasure编码处理容错。</li></ul><h6 id="数据平衡"><a href="#数据平衡" class="headerlink" title="数据平衡"></a>数据平衡</h6><ul><li>Hadoop 2.x - 对于数据，平衡使用HDFS平衡器。</li><li>Hadoop 3.x - 对于数据，平衡使用Intra-data节点平衡器，该平衡器通过HDFS磁盘平衡器CLI调用。</li></ul><h6 id="存储Scheme"><a href="#存储Scheme" class="headerlink" title="存储Scheme"></a>存储Scheme</h6><ul><li>Hadoop 2.x - 使用3X副本Scheme。</li><li>Hadoop 3.x - 支持HDFS中的擦除编码。</li></ul><h6 id="存储开销"><a href="#存储开销" class="headerlink" title="存储开销"></a>存储开销</h6><ul><li><p>Hadoop 2.x - HDFS在存储空间中有200％的开销。</p></li><li><p>Hadoop 3.x - 存储开销仅为50％。</p></li><li><p>存储开销示例</p></li><li><ul><li>Hadoop 2.x - 如果有6个块，那么由于副本方案（Scheme），将有18个块占用空间。</li><li>Hadoop 3.x - 如果有6个块，那么将有9个块占用6块空间，3个用于奇偶校验。</li></ul></li></ul><h6 id="YARN时间线服务"><a href="#YARN时间线服务" class="headerlink" title="YARN时间线服务"></a>YARN时间线服务</h6><ul><li>Hadoop 2.x - 使用具有可伸缩性问题的旧时间轴服务。</li><li>Hadoop 3.x - 改进时间线服务v2并提高时间线服务的可扩展性和可靠性。</li></ul><h6 id="默认端口范围"><a href="#默认端口范围" class="headerlink" title="默认端口范围"></a>默认端口范围</h6><ul><li>Hadoop 2.x - 在Hadoop 2.0中，一些默认端口是Linux临时端口范围。所以在启动时，他们将无法绑定。</li><li>Hadoop 3.x - 但是在Hadoop 3.0中，这些端口已经移出了短暂的范围。</li></ul><h6 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h6><ul><li>Hadoop 2.x - 使用Hive，pig，Tez，Hama，Giraph和其他Hadoop工具。</li><li>Hadoop 3.x - 可以使用Hive，pig，Tez，Hama，Giraph和其他Hadoop工具。</li></ul><h6 id="兼容的文件系统"><a href="#兼容的文件系统" class="headerlink" title="兼容的文件系统"></a>兼容的文件系统</h6><ul><li>Hadoop 2.x - HDFS（默认FS），FTP文件系统：它将所有数据存储在可远程访问的FTP服务器上。Amazon S3（简单存储服务）文件系统Windows Azure存储Blob（WASB）文件系统。</li><li>Hadoop 3.x - 它支持所有前面以及Microsoft Azure Data Lake文件系统。</li></ul><h6 id="Datanode资源"><a href="#Datanode资源" class="headerlink" title="Datanode资源"></a>Datanode资源</h6><ul><li>Hadoop 2.x - Datanode资源不专用于MapReduce，我们可以将它用于其他应用程序。</li><li>Hadoop 3.x - 此处数据节点资源也可用于其他应用程序。</li></ul><h6 id="MR-API兼容性"><a href="#MR-API兼容性" class="headerlink" title="MR API兼容性"></a>MR API兼容性</h6><ul><li>Hadoop 2.x - 与Hadoop 1.x程序兼容的MR API，可在Hadoop 2.X上执行。</li><li>Hadoop 3.x - 此处，MR API与运行Hadoop 1.x程序兼容，以便在Hadoop 3.X上执行。</li></ul><h6 id="支持Microsoft-Windows"><a href="#支持Microsoft-Windows" class="headerlink" title="支持Microsoft Windows"></a>支持Microsoft Windows</h6><ul><li>Hadoop 2.x - 它可以部署在Windows上。</li><li>Hadoop 3.x - 它也支持Microsoft Windows。</li></ul><h6 id="插槽-容器"><a href="#插槽-容器" class="headerlink" title="插槽/容器"></a>插槽/容器</h6><ul><li>Hadoop 2.x - Hadoop 1适用于插槽的概念，但Hadoop 2.X适用于容器的概念。通过容器，我们可以运行通用任务。</li><li>Hadoop 3.x - 它也适用于容器的概念。</li></ul><h6 id="单点故障"><a href="#单点故障" class="headerlink" title="单点故障"></a>单点故障</h6><ul><li>Hadoop 2.x - 具有SPOF的功能，因此只要Namenode失败，它就会自动恢复。</li><li>Hadoop 3.x - 具有SPOF的功能，因此只要Namenode失败，它就会自动恢复，无需人工干预就可以克服它。</li></ul><h6 id="HDFS联盟"><a href="#HDFS联盟" class="headerlink" title="HDFS联盟"></a>HDFS联盟</h6><ul><li>Hadoop 2.x - 在Hadoop 1.0中，只有一个NameNode来管理所有Namespace，但在Hadoop 2.0中，多个NameNode用于多个Namespace。</li><li>Hadoop 3.x - Hadoop 3.x还有多个名称空间用于多个名称空间。</li></ul><h6 id="可扩展性"><a href="#可扩展性" class="headerlink" title="可扩展性"></a>可扩展性</h6><ul><li>Hadoop 2.x - 我们可以扩展到每个群集10,000个节点。</li><li>Hadoop 3.x - 更好的可扩展性。我们可以为每个群集扩展超过10,000个节点。</li></ul><h6 id="访问数据"><a href="#访问数据" class="headerlink" title="访问数据"></a>访问数据</h6><ul><li>Hadoop 2.x - 由于数据节点缓存，我们可以快速访问数据。</li><li>Hadoop 3.x - 这里也通过Datanode缓存我们可以快速访问数据。</li></ul><h6 id="HDFS快照"><a href="#HDFS快照" class="headerlink" title="HDFS快照"></a>HDFS快照</h6><ul><li>Hadoop 2.x - Hadoop 2增加了对快照的支持。它为用户错误提供灾难恢复和保护。</li><li>Hadoop 3.x - Hadoop 2也支持快照功能。</li></ul><h6 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h6><ul><li>Hadoop 2.x - 可以作为各种数据分析的平台，可以运行事件处理，流媒体和实时操作。</li><li>Hadoop 3.x - 这里也可以在YARN的顶部运行事件处理，流媒体和实时操作。</li></ul><h6 id="群集资源管理"><a href="#群集资源管理" class="headerlink" title="群集资源管理"></a>群集资源管理</h6><ul><li>Hadoop 2.x - 对于群集资源管理，它使用YARN。它提高了可扩展性，高可用性，多租户。</li><li>Hadoop 3.x - 对于集群，资源管理使用具有所有功能的YARN。</li></ul><h2 id="Hadoop-生态系统"><a href="#Hadoop-生态系统" class="headerlink" title="Hadoop 生态系统"></a>Hadoop 生态系统</h2><p><img src="/../images/hadoop/image-20240316205548785.png" alt="image-20240316205548785"></p><p><img src="/../images/hadoop/image-20240316205558454.png" alt="image-20240316205558454"></p><h4 id="HDFS（Hadoop-Distributed-File-System）"><a href="#HDFS（Hadoop-Distributed-File-System）" class="headerlink" title="HDFS（Hadoop Distributed File System）"></a>HDFS（Hadoop Distributed File System）</h4><h6 id="产生背景"><a href="#产生背景" class="headerlink" title="产生背景"></a>产生背景</h6><ul><li>是分布式文件管理系统中的一种</li><li>通过目录树来定位文件</li><li><strong>适合一次写入，多次读出</strong>。一个文件经过创建、写入和关闭之后就不需要改变</li></ul><h6 id="架构概述"><a href="#架构概述" class="headerlink" title="架构概述"></a>架构概述</h6><ul><li><strong>NameNode</strong>（nn）：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、文件权限），以及每个文件的块列表和块所在的DataNode等；配置副本策略；处理的客户端的读写请求</li><li><strong>DataNode</strong>（dn）：在本地文件系统存储文件块数据，以及块数据的校验和；执行数据块的读/写操作</li><li><strong>Secondary NameNode</strong>（2nn）：每隔一段时间对NameNode元数据备份；并非热备，当NameNode挂掉的时候，并不能马上替换NameNode并提供服务；紧急情况，可辅助恢复NameNode</li><li><strong>Client</strong>：将上传到HDFS的文件切分成块（128M / 256M）；与NameNode交互，获取文件位置信息；与DataNode交互，读取写入数据；管理HDFS，例如NameNode格式化，对HDFS增删改查</li></ul><h6 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h6><ul><li><p><strong>优点</strong></p></li><li><ul><li><strong>数据规模</strong> 能够达到GB、TB、PB级别</li><li><strong>文件规模</strong> 能够处理百万规模以上的文件数量</li><li>高容错性：数据自动保存多个副本，某一个副本丢失之后，可以自动恢复</li><li>适合处理大数据：</li><li>可构建在廉价的机器上：通过多副本机制，提高可靠性</li></ul></li><li><p><strong>缺点</strong></p></li><li><ul><li>不适合<strong>低延时</strong>数据访问：毫秒级的存储数据</li><li>无法高效的对大量<strong>小文件</strong>进行存储：存储大量小文件的话，会占用NameNode 大量的内存来存储文件目录和块信息，NameNode的内存总是有限的；小文件的存储的寻址时间会超过读取时间，违反了HDFS的设计目标</li><li>不支持并发写入、文件随机修改：一个文件只能有一个写，不允许多个线程同时写；<strong>仅支持数据追加</strong>，不支持文件的随机修改</li></ul></li></ul><h6 id="写数据流程"><a href="#写数据流程" class="headerlink" title="写数据流程"></a>写数据流程</h6><p><img src="/../images/hadoop/image-20240316205725307.png" alt="image-20240316205725307"></p><p><strong>最近距离计算</strong>：在HDFS写数据的过程中，NameNode会选择距离待上传数据最近距离的DataNode接受数据；节点距离（<strong>两个节点到达最近的共同祖先的距离总和</strong>）</p><p><strong>读数据流程</strong></p><p><img src="/../images/hadoop/image-20240316205816364.png" alt="image-20240316205816364"></p><p><strong>NameNode 工作机制</strong></p><p><img src="/../images/hadoop/image-20240316205831301.png" alt="image-20240316205831301"></p><ul><li>Fsimage 文件：HDFS 文件系统源数据的一个永久性的检查点，其中包含 HDFS 文件系统的所有目录和文件inode的序列化信息</li><li>Edits 文件：存放 HDFS 文件系统的所有更新操作的路径，文件系统客户端执行的所有写操作首先会被记录到 Edits 文件中</li><li>默认 1 小时检查执行一次，1 分钟检查一次操作次数，当操作次数达到 100 w 时，SecondaryNameNode 执行一次</li></ul><p><strong>DataNode 工作机制</strong></p><p><img src="/../images/hadoop/image-20240316205921002.png" alt="image-20240316205921002"></p><h4 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h4><h6 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h6><ul><li>MapReduce 是一个<strong>分布式运算程序</strong>的编程框架，是用户开发“基于 Hadoop 的数据分析应用”的核心框架</li><li>MapReduce 核心功能是将<strong>用户编写的业务逻辑代码</strong>和<strong>自带默认组件</strong>整合成一个完整的<strong>分布式运算程序</strong>，并发运行在一个 Hadoop 集群上</li></ul><h6 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h6><ul><li><p><strong>优点</strong></p></li><li><ul><li>易于编程：用户只需要关心业务逻辑，实现框架的接口</li><li>良好的扩展性：可以动态增加服务器，解决计算资源不够的问题</li><li>高容错性：任何一台机器挂掉，可以将任务转移到其他节点</li><li>适合海量数据计算（TB/PB） ：几千台服务器共同计算</li></ul></li><li><p><strong>缺点</strong></p></li><li><ul><li>不擅长实时计算（Mysql）</li><li>不擅长流式计算（SparkStreaming / Flink）</li><li>不擅长DAG有向无环图（计算出来的结果作为下一次计算的参数，迭代计算）计算（Spark）</li></ul></li></ul><h6 id="架构概述-1"><a href="#架构概述-1" class="headerlink" title="架构概述"></a>架构概述</h6><ul><li>Map 阶段并行处理输入数据</li><li>Reduce 阶段对 Map 结果进行汇总</li></ul><h6 id="MapReduce核心思想"><a href="#MapReduce核心思想" class="headerlink" title="MapReduce核心思想"></a>MapReduce核心思想</h6><p><img src="/../images/hadoop/image-20240316205952926.png" alt="image-20240316205952926"></p><h6 id="MapReduce-进程"><a href="#MapReduce-进程" class="headerlink" title="MapReduce 进程"></a>MapReduce 进程</h6><p>一个完整的 MapReduce 程序在分布式运行时有三类实例进程：</p><ul><li><strong>MrAppMaster</strong>：负责珍格格程序的过程调度及状态协调</li><li><strong>MapTask</strong>：负责 Map 阶段的整个数据处理流程</li><li><strong>ReduceTask</strong>：负责 Reduce 阶段的整个数据处理流程</li></ul><h6 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h6><p><strong>定义</strong></p><ul><li>序列化：把内存中的对象，转换成字节序列（或其他数据传输协议）以便于存储到磁盘（持久化）和网络传输</li><li>反序列化：将收到字节序列（或其他数据传输协议）或者是磁盘的持久化数据，转换成内存中的对象</li></ul><h6 id="InputFormat-数据输入"><a href="#InputFormat-数据输入" class="headerlink" title="InputFormat 数据输入"></a>InputFormat 数据输入</h6><p><strong>数据块和与数据切片</strong></p><ul><li>数据块：Block 是HDFS 物理上把数据分成一块一块，数据块是HDFS存储数据单位</li><li>数据切片：数据切片只是在逻辑上对输入进行分片，并不会在磁盘上将其切分成片进行存储。数据切片是MapReduce 程序计算输入数据的单位，一个切片会对应启动一个MapTask</li></ul><p><strong>切片机制</strong></p><ul><li>一个 Job 的 Map 阶段并行度由客户端再提交 Job 时的切片数决定</li><li>每个 Split 切片分配一个 MapTask 并行实例处理</li><li>默认情况下，切片大小 = BlockSize</li><li>切片时不考虑数据集整体，而是逐个针对每一个文件单独切片</li></ul><h6 id="Shuffle-机制"><a href="#Shuffle-机制" class="headerlink" title="Shuffle 机制"></a>Shuffle 机制</h6><p><strong>定义</strong>：Map 方法之后，Reduce 方法之前的数据处理过程称之为 Shuffle （打乱顺序，洗牌）</p><p><img src="/../images/hadoop/image-20240316210013981.png" alt="image-20240316210013981"></p><p><strong>分区排序</strong>：按照<strong>字典</strong>顺序对 <strong>Key</strong> 的索引使用<strong>快速排序</strong></p><p><strong>MapTask 工作机制</strong></p><p><img src="/../images/hadoop/image-20240316210031536.png" alt="image-20240316210031536"></p><p><strong>ReduceTask 工作机制</strong></p><p><img src="/../images/hadoop/image-20240316210056874.png" alt="image-20240316210056874"></p><p><strong>数据清洗-ETL（Extract-Tramsform-Load）</strong></p><p><strong>定义</strong></p><ul><li>用来描述将数据从来源端经过抽取（Extract）、转换（Transform）、加载（Load）至目的端的过程。ETL 一词较常用在数据仓库，但其对象并不限于数据仓库</li><li>在运行核心业务 MapReduce 程序之前，往往要先对数据进行清洗，清理掉不符合用户要求的数据。<strong>清理过程往往只需要 Mapper 程序，不需要运行 Reduce 程序</strong></li></ul><h4 id="YARN"><a href="#YARN" class="headerlink" title="YARN"></a>YARN</h4><p>Yarn 是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统平台，而 MapReduce 等运算程序则相当于运行于操作系统之上的应用程序</p><h6 id="架构概述-2"><a href="#架构概述-2" class="headerlink" title="架构概述"></a>架构概述</h6><p><img src="/../images/hadoop/image-20240316210229364.png" alt="image-20240316210229364"></p><ul><li><p><strong>ResourceManager</strong>（RM）：整个集群资源（内存、CPU等）的管理者</p></li><li><p><strong>NodeManager</strong>（NM）：单个节点服务器的管理者</p></li><li><p><strong>ApplicationMaster</strong>（AM）：单个任务运行的负责人</p></li><li><p><strong>Container</strong>：容器，相当于一台独立的服务器，里面封装了任务运行所需要的资源（内存、CPU、磁盘、网络）</p></li><li><p>注意</p></li><li><ul><li>客户端可以有多个</li><li>集群上可以运行多个 ApplicationMaster</li><li>每个 NodeManager 上可以有多个 Container</li></ul></li></ul><h6 id="YARN-工作机制"><a href="#YARN-工作机制" class="headerlink" title="YARN 工作机制"></a>YARN 工作机制</h6><p><img src="/../images/hadoop/image-20240316210244493.png" alt="image-20240316210244493"></p><p><strong>HDFS、YARN、MapReduce 三者关系</strong></p><p><img src="/../images/hadoop/image-20240316210256567.png" alt="image-20240316210256567"></p><h6 id="YARN-调度器"><a href="#YARN-调度器" class="headerlink" title="YARN 调度器"></a>YARN 调度器</h6><p>Hadoop 作业调度器主要有三种：FIFO、容量、公平调度器。Hadoop 3.1.3 默认的资源调度器是容量调度器</p><p><strong>FIFO调度器</strong></p><ul><li>单队列，根据提交作业的先后顺序，先来先服务</li></ul><p><strong>容量调度器</strong></p><ul><li><p>是Yahoo开发的多用户调度器</p></li><li><p>多队列：每个队列可配置一定的资源量</p></li><li><p>容量保证：管理员可为每个队列设置资源最低保证和资源使用上限</p></li><li><p>灵活性：如果一个队列中的资源有剩余，可以暂时共享给那些需要资源的队列，而一旦该队列有新的应用和程序提交，则其他队列借调的资源会归还给该队列</p></li><li><p>多租户：支持多用户共享集群和多应用程序同时运行。为了防止同一个用户的作业独占队列中的资源，该调度器会对同一用户提交的作业所占资源量进行限定</p></li><li><p><strong>分配算法</strong></p></li><li><ul><li>队列资源分配：从root 开始，使用深度优先算法，<strong>优先选择资源占用率最低</strong>的队列分配资源</li><li>作业资源分配：默认按照提交作业的优先级和提交时间顺序分配资源</li><li>容器资源分配：按照容器的优先级分配资源，如果优先级相同，按照数据本地性原则</li></ul></li></ul><p><strong>公平调度器</strong></p><ul><li><p>是 Facebook 开发的多用户调度器</p></li><li><p>具有与容量调度器的相同特点</p></li><li><p>不同点为</p></li><li><ul><li>缺额：某一个时刻一个作业应获得资源和实际获取资源的差距叫“缺额”</li><li>核心调度策略不同（容量调度器优先选择<strong>资源利用率低</strong>的队列；公平调度器优先选择对资源的<strong>缺额</strong>比例大的队列）</li><li>每个队列可以单独设置资源分配方式（容量调度器：FIFO、DRF；公平调度器：FIFO、FAIR、DRF）</li></ul></li><li><p>更多关于大数据 Hadoop系列的学习文章，请参阅：<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI0MDQ4MTM5NQ==&amp;action=getalbum&amp;album_id=2957050176765198340&amp;token=737685287&amp;lang=zh_CN#wechat_redirect">进击大数据</a>，本系列持续更新中。</p></li></ul><h4 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h4><p>Spark是加州大学伯克利分校AMP实验室（Algorithms, Machines, and People Lab）开发的通用内存并行<strong>计算框架</strong>，借鉴了MapReduce之上发展而来的，继承了其分布式并行计算的优点并改进了MapReduce明显的缺陷。使用场景如下：</p><ul><li><strong>复杂的批量处理（Batch Data Processing）</strong>，偏重点在于处理海量数据的能力，至于处理速度可忍受，通常的时间可能是在数十分钟到数小时；</li><li><strong>基于历史数据的交互式查询（Interactive Query）</strong>，通常的时间在数十秒到数十分钟之间</li><li><strong>基于实时数据流的数据处理（Streaming Data Processing）</strong>，通常在数百毫秒到数秒之间</li></ul><h4 id="Storm"><a href="#Storm" class="headerlink" title="Storm"></a>Storm</h4><p>Storm用于“连续计算”，对数据流做连续查询，在计算时就将结果以流的形式输出给用户。<strong>如今已被Flink替代</strong>。</p><h4 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h4><p>Apache Flink是一个<strong>面向数据流处理和批量数据处理</strong>的可分布式的开源<strong>计算框架</strong>，它基于同一个Flink流式执行模型（streaming execution model），能够支持流处理和批处理两种应用类型。由于流处理和批处理所提供的SLA(服务等级协议)是完全不相同， 流处理一般需要支持低延迟、Exactly-once保证，而批处理需要支持高吞吐、高效处理，所以在实现的时候通常是分别给出两套实现方法，或者通过一个独立的开源框架来实现其中每一种处理方案。</p><h4 id="Flume"><a href="#Flume" class="headerlink" title="Flume"></a>Flume</h4><p>一个可用的、可靠的、分布式的海量<strong>日志采集、聚合和传输系统</strong>。</p><h4 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h4><p>是为提供简单的数据操作而设计的<strong>分布式数据仓库</strong>，它提供了简单的类似SQL语法的HiveQL语言进行数据查询。</p><p><img src="/../images/hadoop/image-20240316210337881.png" alt="image-20240316210337881"></p><p><strong>Hive 架构原理</strong></p><p><img src="/../images/hadoop/image-20240316210355791.png" alt="image-20240316210355791"></p><ul><li><p><strong>用户接口（Client）</strong>：CLI（hive shell）、JDBC / ODBC（java 访问 hive）、WEBUI（浏览器访问 hive）</p></li><li><p><strong>元数据（Metastore）</strong>：元数据包括表名、表所属的数据库（默认是default）、表的拥有者、列 / 分区字段、表的类型（是否是外部表）、表的数据所在目录等；<strong>默认存储在自带的 derby 数据库中，推荐使用 MySQL 存储 Metastore</strong></p></li><li><p><strong>Hadoop</strong>：使用 HDFS 进行存储，使用 MapReduce 进行计算</p></li><li><p><strong>驱动器（Driver）</strong>：</p></li><li><ul><li>解析器（SQL Parser） ：将 SQL 字符串转换成抽象语法树 AST，这一步一般都用第三方工具库完成，比如 antlr；对 AST 进行语法分析，比如表是否存在、字段是否存在、SQL 语义是否有误</li><li>编译器（Physical Plan）：将 AST 编译生成逻辑执行计划</li><li>优化器（Query Optimizer）：对逻辑执行计划进行优化</li><li>执行器（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于 Hive 来说，就是 MR/Spark</li></ul></li></ul><h6 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h6><p><img src="/../images/hadoop/image-20240316210414062.png" alt="image-20240316210414062"></p><p>Hive 通过给用户提供的一系列交互接口，接收到用户的指令（SQL），使用自己的 Driver，结合元数据（MetaStore），将这些指令翻译成 MapReduce，提交到 Hadoop 中执行，最后，将执行返回的结果输出到用户交互接口。</p><h4 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h4><p>分布式协调系统，Google Chubby的Java开源实现，是高可用的和可靠的分布式协同（coordination）系统，提供分布式锁之类的基本服务，用于构建分布式应用。</p><h4 id="Hbase"><a href="#Hbase" class="headerlink" title="Hbase"></a>Hbase</h4><p>基于Hadoop的<strong>分布式数据库</strong>，Google BigTable的开源实现 是一个有序、稀疏、多维度的映射表，有良好的伸缩性和高可用性，用来将数据存储到各个计算节点上。</p><h6 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h6><p>逻辑上，HBase 的数据模型同关系型数据库很类似，数据存储在一张表中，有行有列。但从底层物理存储结构（K-V）来看，HBase 更像是一个 multi-dimensional-map（多维 map）。</p><ul><li><p><strong>逻辑结构</strong></p><p><img src="/../images/hadoop/image-20240316210435008.png" alt="image-20240316210435008"></p></li><li><p><strong>物理存储结构</strong></p></li></ul><p><img src="/../images/hadoop/image-20240316210534259.png" alt="image-20240316210534259"></p><ul><li><p><strong>名词解释</strong></p></li><li><ul><li><strong>Name Space</strong>：命名空间，类似于关系型数据库的 database 概念，每个命名空间下有多个表。HBase 有两个自带的命名空间，分别是 <strong>hbase</strong> 和 <strong>default</strong>，hbase 中存放的是 HBase 内置的表，default 表是用户默认使用的命名空间</li><li><strong>Region</strong>：类似于关系型数据库的表概念。不同的是，HBase 定义代表时只需要声明<strong>列族</strong>即可，不需要声明具体的列。这意味着，往 HBase 写入数据时，字段可以动态、按需指定。因此，和关系型数据库相比，HBase 能够轻松应对字段变更的场景</li><li><strong>Row</strong>：HBase 表中的每行数据都由一个 RowKey 和多个 Column 组成，数据是按照 RowKey 的<strong>字典顺序存储</strong>的，并且查询数据时只能根据 RowKey 进行检索，所有 RowKey 的设计十分重要</li><li><strong>Column</strong>：HBase 中的每个列都由 <strong>Column Family 列族</strong> 和 <strong>Column Qualifier 列限定符</strong> 进行限定，例如info:name，info:age。建表时，只需指明列族，而列限定符无需预先定义</li><li><strong>Time Stamp</strong>：用于标识数据的不同版本，每条数据写入时，如果不指定时间戳，系统会自动为其加上该字段，其值为写入 HBase 的时间</li><li><strong>Cell</strong>：由 {rowkey,column Family:column Qualifier,time Stamp} 唯一确定的单元。cell中的数据是没有类型的，全部是<strong>字节码形式</strong>存储</li></ul></li></ul><h6 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h6><p><img src="/../images/hadoop/image-20240316210557038.png" alt="image-20240316210557038"></p><p><strong>Zookeeper的作用</strong>：HBase 通过 Zookeeper 来做 master 的高可用、RegionServer 的监控、元数据的入口以及集群配置的维护等工作。</p><p><strong>写数据流程</strong></p><p><img src="/../images/hadoop/image-20240316210638331.png" alt="image-20240316210638331"></p><p><strong>读数据流程</strong></p><p><img src="/../images/hadoop/image-20240316210647802.png" alt="image-20240316210647802"></p><h6 id="HBase-VS-Hive"><a href="#HBase-VS-Hive" class="headerlink" title="HBase VS Hive"></a>HBase VS Hive</h6><ul><li><p>Hive</p></li><li><ul><li>数据仓库：Hive 的本质其实就是相当于将 HDFS 中已经存储的文件在 Mysql 中做了一个双射关系，以方便使用 HQL 去管理查询。</li><li>用于数据分析、清晰：Hive 适用于离线的数据分析和清洗，延迟较高。</li><li>基于 HDFS、MapReduce：Hive 存储的数据依旧在 DataNode 上，编写 HQL 语句终将是转换为 MapReduce 代码执行。</li></ul></li><li><p>HBase</p></li><li><ul><li>数据库：是一种<strong>面向列族存储</strong>的非关系型数据库。</li><li>用于存储结构化和非结构化的数据：适用于单表非关系型数据的存储，不适合做关联查询，类似于JOIN等操作。</li><li>基于 HDFS：数据持久化存储的体现形式是 HFile，存放在 DataNode 中，被 RegionServer 以 region 的形式进行管理。</li><li>延迟较低，接入在线业务使用：面对大量的企业数据，HBase 可以直线单表大量数据的存储，同时提供了高效的数据访问速度。</li></ul></li><li><p>更多关于大数据 Hadoop系列的学习文章，请参阅：<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI0MDQ4MTM5NQ==&amp;action=getalbum&amp;album_id=2957050176765198340&amp;token=737685287&amp;lang=zh_CN#wechat_redirect">进击大数据</a>，本系列持续更新中。</p></li></ul><h4 id="Cloudbase"><a href="#Cloudbase" class="headerlink" title="Cloudbase"></a>Cloudbase</h4><p>基于Hadoop的<strong>数据仓库</strong>，支持标准的SQL语法进行数据查询。</p><h4 id="Pig"><a href="#Pig" class="headerlink" title="Pig"></a>Pig</h4><p>大数据<strong>流处理系统</strong>，建立于Hadoop之上为并行计算环境提供了一套数据工作流语言和执行框架。</p><h4 id="Mahout"><a href="#Mahout" class="headerlink" title="Mahout"></a>Mahout</h4><p>基于HadoopMapReduce的大规模<strong>数据挖掘与机器学习算法库</strong>。</p><h4 id="Oozie"><a href="#Oozie" class="headerlink" title="Oozie"></a>Oozie</h4><p>MapReduce工作流管理系统。</p><h4 id="Sqoop"><a href="#Sqoop" class="headerlink" title="Sqoop"></a>Sqoop</h4><p>数据转移系统，是一个用来将Hadoop和关系型数据库中的数据相互转  移的工具，可以将一个关系型数据库中的数据导入Hadoop的HDFS中，也可以将HDFS 的数据导入关系型数据库中。</p><h4 id="Scribe"><a href="#Scribe" class="headerlink" title="Scribe"></a>Scribe</h4><p>Facebook开源的<strong>日志收集聚合框架系统</strong>。</p><p>这里只是列举了一部分Hadoop生态里的组件，稍微介绍了一下。</p><blockquote><p><em>参考来源如下：<a href="https://blog.csdn.net/weixin_43842853/article/">https://blog.csdn.net/weixin_43842853/article/</a></em></p><p><em>details/124316032 <a href="https://blog.csdn.net/weixin_43842853/article/">https://blog.csdn.net/weixin_43842853/article/</a></em></p><p><em>details/123007306 <a href="https://cnblogs.com/liugp/p/16100092.html">https://cnblogs.com/liugp/p/16100092.html</a></em></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据 Hadoop 系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2024/03/16/Linux/"/>
      <url>/2024/03/16/Linux/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-简介"><a href="#Linux-简介" class="headerlink" title="Linux 简介"></a>Linux 简介</h2><h3 id="基本常用命令"><a href="#基本常用命令" class="headerlink" title="基本常用命令"></a>基本常用命令</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#查看当前Linux系统登录的用户、使用的终端和登录时间</span><br><span class="line">bd@clem:~$ who</span><br><span class="line">bd       tty1#Ubuntu本机         2024-03-15 20:19</span><br><span class="line">bd       pts/0#远程连接工具        2024-03-15 20:05 (10.0.2.2)</span><br><span class="line"></span><br><span class="line">#查看当前在那个文件夹里面（查看路径）</span><br><span class="line">bd@clem:~/py_case$ pwd</span><br><span class="line">/home/bd/py_case</span><br><span class="line">#查看当前文件夹里面的所有文件和文件夹</span><br><span class="line">bd@clem:~/py_case$ ls</span><br><span class="line">bank     mongodb  redis  test.py</span><br><span class="line">main.py  mysql    test   正则</span><br><span class="line">#查看所有的文件包含隐藏文件（配置文件）</span><br><span class="line">bd@clem:~$ ls -a</span><br><span class="line">.               .profile</span><br><span class="line">..              py_case</span><br><span class="line">.bash_history   .pycharm_helpers</span><br><span class="line">.bash_logout    .rediscli_history</span><br><span class="line">.bashrc         .SpaceVim</span><br><span class="line">.cache          .SpaceVim.d</span><br><span class="line">.config         .ssh</span><br><span class="line">.dbshell        .sudo_as_admin_successful</span><br><span class="line">django_test     .vim</span><br><span class="line">environment     .viminfo</span><br><span class="line">.local          .virtualenvs</span><br><span class="line">.mongorc.js     .Xauthority</span><br><span class="line">.mysql_history</span><br><span class="line">#查看所有的文件并且以列表的形式展示</span><br><span class="line">bd@clem:~$ ls -l</span><br><span class="line">total 12</span><br><span class="line">drwxrwxr-x 3 bd bd 4096 Feb 27 15:39 django_test</span><br><span class="line">drwxrwxr-x 4 bd bd 4096 Feb  3 20:19 environment</span><br><span class="line">drwxrwxr-x 8 bd bd 4096 Mar 13 21:00 py_case</span><br><span class="line">#以文件修改时间从后往前排序</span><br><span class="line">bd@clem:~$ ls -t</span><br><span class="line">py_case  django_test  environment</span><br><span class="line">#以文件名进行排序</span><br><span class="line">bd@clem:~$ ls -r</span><br><span class="line">py_case  environment  django_test</span><br><span class="line">#以文件大小 从小到大进行排序</span><br><span class="line">bd@clem:~$ ls -k</span><br><span class="line">django_test  environment  py_case</span><br><span class="line">bd@clem:~$</span><br><span class="line">#帮助文档 查看完之后按q退出</span><br><span class="line">bd@clem:~$ man ls</span><br><span class="line">#简单版本的帮助文档</span><br><span class="line">bd@clem:~$ ls --help</span><br><span class="line">#回到用户文件夹</span><br><span class="line">bd@clem:~/py_case/test$ cd</span><br><span class="line">#打开文件夹 到指定的文件夹</span><br><span class="line">bd@clem:~$ cd /home/bd/py_case/test</span><br><span class="line">#跳转到根目录文件夹</span><br><span class="line">bd@clem:~$ cd /</span><br><span class="line">#在当前目录不做任何操作</span><br><span class="line">bd@clem:~/py_case/test$ cd .</span><br><span class="line">#回到上级目录</span><br><span class="line">bd@clem:~/py_case/test$ cd ..</span><br><span class="line">#回到上次目录</span><br><span class="line">bd@clem:~/py_case$ cd -</span><br><span class="line">/home/bd/py_case/test</span><br></pre></td></tr></tbody></table></figure><h3 id="基本文件操作命令"><a href="#基本文件操作命令" class="headerlink" title="基本文件操作命令"></a>基本文件操作命令</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#创建文件夹</span><br><span class="line">bd@clem:~$ mkdir test</span><br><span class="line">bd@clem:~$ ls</span><br><span class="line">django_test  environment  py_case  test</span><br><span class="line">#删除文件夹 只能删除空文件夹</span><br><span class="line">bd@clem:~$ rmdir test</span><br><span class="line">bd@clem:~$ ls</span><br><span class="line">django_test  environment  py_case</span><br><span class="line">#创建文件</span><br><span class="line">bd@clem:~/test$ touch demo.py</span><br><span class="line">bd@clem:~/test$ ls</span><br><span class="line">demo.py</span><br><span class="line">#删除文件</span><br><span class="line">bd@clem:~/test$ rm demo.py</span><br><span class="line">bd@clem:~/test$ ls</span><br><span class="line">#强制删除文件夹或者文件</span><br><span class="line">bd@clem:~$ rm -rf test</span><br><span class="line">bd@clem:~$</span><br><span class="line">#复制文件到指定文件夹里面，不存在文件会自动创建，文件存在内容会被覆盖</span><br><span class="line">bd@clem:~/py_case$ cp test.py /home/bd/test/demo.py</span><br><span class="line">#移动文件到指定文件夹里面</span><br><span class="line">bd@clem:~/py_case$ mv test.py /home/bd/test</span><br><span class="line">#文件重命名 </span><br><span class="line">bd@clem:~/test$ mv test.py aaa.py</span><br></pre></td></tr></tbody></table></figure><h3 id="有趣的命令"><a href="#有趣的命令" class="headerlink" title="有趣的命令"></a>有趣的命令</h3><p><a href="https://cloud.tencent.com/developer/article/1462866">https://cloud.tencent.com/developer/article/1462866</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo|指令</title>
      <link href="/2024/03/10/Hexo-%E6%8C%87%E4%BB%A4/"/>
      <url>/2024/03/10/Hexo-%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></tbody></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><p>本命令相当于执行了以下几步：</p><ol><li>Git clone <a href="https://github.com/hexojs/hexo-starter">hexo-starter</a> 和 <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> 主题到当前目录或指定目录。</li><li>使用 <a href="https://classic.yarnpkg.com/lang/en/">Yarn 1</a>、<a href="https://pnpm.io/zh/">pnpm</a> 或 <a href="https://docs.npmjs.com/cli/install">npm</a> 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 <a href="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85-Node-js">Node.js</a> 安装。</li></ol><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></tbody></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new "post title with whitespace"</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--path</code></td><td align="left">自定义新文章的路径</td></tr><tr><td align="left"><code>-r</code>, <code>--replace</code></td><td align="left">如果存在同名文章，将其替换</td></tr><tr><td align="left"><code>-s</code>, <code>--slug</code></td><td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about/me "About me"</span><br></pre></td></tr></tbody></table></figure><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>"About me"</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about/me</span><br></pre></td></tr></tbody></table></figure><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>"page"</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>生成静态文件。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>, <code>--deploy</code></td><td align="left">文件生成后立即部署网站</td></tr><tr><td align="left"><code>-w</code>, <code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>, <code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>, <code>--force</code></td><td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="left"><code>-c</code>, <code>--concurrency</code></td><td align="left">最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></tbody></table></figure><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></tbody></table></figure><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>, <code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>, <code>--log</code></td><td align="left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>部署网站。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>, <code>--generate</code></td><td align="left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></tbody></table></figure><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></tbody></table></figure><p>渲染文件。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-o</code>, <code>--output</code></td><td align="left">设置输出路径</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></tbody></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></tbody></table></figure><p>列出网站数据。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></tbody></table></figure><p>显示 Hexo 版本。</p><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo config [key] [value]</span><br></pre></td></tr></tbody></table></figure><p>列出网站的配置（<code>_config.yml</code>）。如果指定了 <code>key</code>，则只展示配置中对应 <code>key</code> 的值；如果同时指定了 <code>key</code> 和 <code>value</code>，则将配置中对应的 <code>key</code> 的值修改为 <code>value</code>。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></tbody></table></figure><p>在安全模式下，不会加载插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></tbody></table></figure><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new?assignees=&amp;labels=&amp;projects=&amp;template=bug_report.yml">提交调试信息到 GitHub</a>。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></tbody></table></figure><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></tbody></table></figure><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></tbody></table></figure><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></tbody></table></figure><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></tbody></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础</title>
      <link href="/2024/03/05/mysql%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/03/05/mysql%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL学习笔记【基础篇】"><a href="#MySQL学习笔记【基础篇】" class="headerlink" title="MySQL学习笔记【基础篇】"></a>MySQL学习笔记【基础篇】</h1><blockquote><p>从前曾经学过一下<code>mysql</code>的基础内容，不过由于当时没有认真学导致会的东西太少，现根据一个<a href="https://www.bilibili.com/video/BV12b411K7Zu">教程视频</a>的学习【此内容对应基础篇的<code>P1-P178</code>】，完成了这个笔记，主要涉及<code>mysql</code>的基础知识。</p></blockquote><h2 id="一、数据库相关概念"><a href="#一、数据库相关概念" class="headerlink" title="一、数据库相关概念"></a><strong>一、数据库相关概念</strong></h2><p>1、<code>DB</code>：数据库，保存一组有组织的数据的容器<br>        2、<code>DBMS</code>：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据<br>        3、<code>SQL</code>:结构化查询语言，用于和DBMS通信的语言</p><h2 id="二、数据库的好处"><a href="#二、数据库的好处" class="headerlink" title="二、数据库的好处"></a><strong>二、数据库的好处</strong></h2><p>1.持久化数据到本地</p><p>2.可以实现结构化查询，方便管理</p><h2 id="三、数据库存储数据的特点"><a href="#三、数据库存储数据的特点" class="headerlink" title="三、数据库存储数据的特点"></a><strong>三、数据库存储数据的特点</strong></h2><p>1、将数据放到表中，表再放到库中<br>        2、一个数据库中可以有多个表，每个表都有一个的名字，用来标识自己。表名具有唯一性。<br>        3、表具有一些特性，这些特性定义了数据在表中如何存储，类似java中 “类”的设计。<br>        4、表由列组成，我们也称为字段。所有表都是由一个或多个列组成的，每一列类似java 中的”属性”<br>        5、表中的数据是按行存储的，每一行类似于java中的“对象”。</p><h2 id="四、MySQL服务的启动和停止"><a href="#四、MySQL服务的启动和停止" class="headerlink" title="四、MySQL服务的启动和停止"></a><strong>四、MySQL服务的启动和停止</strong></h2><p>方式一：计算机——右击管理——服务<br>        方式二：通过管理员身份运行，输入</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net <span class="keyword">start</span> 服务名（启动服务）</span><br><span class="line">net stop 服务名（停止服务）</span><br></pre></td></tr></tbody></table></figure><p>服务名是根据你当初的设定决定的，如果你忘了，可以参考这个<a href="https://jingyan.baidu.com/article/17bd8e52f2b7d8c4aa2bb87e.html">链接</a>。</p><p>你的服务名是<code>MySQL57</code></p><h2 id="五、mysql服务的登录和退出"><a href="#五、mysql服务的登录和退出" class="headerlink" title="五、mysql服务的登录和退出"></a><strong>五、mysql服务的登录和退出</strong></h2><p>方式一：通过mysql自带的客户端<br>        只限于root用户</p><p>方式二：通过windows自带的客户端<br>        登录：<br>        <code>mysql 【-h主机名 -P端口号 】-u用户名 -p密码</code></p><p>退出：<br>        <code>exit或ctrl+C</code></p><h2 id="六、MySQL的常用命令"><a href="#六、MySQL的常用命令" class="headerlink" title="六、MySQL的常用命令"></a><strong>六、MySQL的常用命令</strong></h2><p>1.查看当前所有的数据库<br>        <code>show databases;</code><br>        2.打开指定的库<br>        <code>use 库名</code><br>        3.查看当前库的所有表<br>        <code>show tables;</code><br>        4.查看其它库的所有表<br>        <code>show tables from 库名;</code><br>        5.创建表</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line"></span><br><span class="line">列名 列类型,</span><br><span class="line">列名 列类型，</span><br><span class="line">。。。</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>6.查看表结构<br>        <code>desc 表名;</code></p><p>7.查看服务器的版本<br>        方式一：登录到mysql服务端<br>        <code>select version();</code><br>        方式二：没有登录到mysql服务端（在cmd控制台上输入）<br>        <code>mysql --version</code><br>        或<br>        <code>mysql --V</code></p><h2 id="七、MySQL的语法规范"><a href="#七、MySQL的语法规范" class="headerlink" title="七、MySQL的语法规范"></a><strong>七、MySQL的语法规范</strong></h2><p>1.不区分大小写,但建议关键字大写，表名、列名小写<br>        2.每条命令最好用分号结尾<br>        3.每条命令根据需要，可以进行缩进或换行<br>        4.注释</p><pre><code>单行注释：`#注释文字`单行注释：`-- 注释文字`多行注释：`/* 注释文字  */`</code></pre><h2 id="八、SQL的语言分类"><a href="#八、SQL的语言分类" class="headerlink" title="八、SQL的语言分类"></a><strong>八、SQL的语言分类</strong></h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DQL（Data Query Language）：数据查询语言</span><br><span class="line">select </span><br><span class="line">DML(Data Manipulate Language):数据操作语言</span><br><span class="line">insert 、update、delete</span><br><span class="line">DDL（Data Define Languge）：数据定义语言</span><br><span class="line">create、drop、alter</span><br><span class="line">TCL（Transaction Control Language）：事务控制语言</span><br><span class="line">commit、rollback</span><br></pre></td></tr></tbody></table></figure><h2 id="九、DQL语言的学习"><a href="#九、DQL语言的学习" class="headerlink" title="九、DQL语言的学习"></a><strong>九、DQL语言的学习</strong></h2><h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a><strong>基础查询</strong></h3><p><strong>语法：</strong></p><p><code>SELECT 查询列表 FROM 表名;</code></p><p><strong>注意：</strong></p><ul><li>查询列表可以是：表中的字段、常量值、表达式、函数。</li><li>查询的结果是一个虚拟的表格。</li><li>常量值可以用<strong>单引号双引号</strong>引上，<strong>字段值</strong>可以用(键盘上数字1左边那个键的符号引上)，注意二者区别。一般情况下可以不用引，当字段与关键字重名或者是特殊符号时引上比较好。</li></ul><p><strong>举例：</strong></p><p><strong>1.查询表中的单个字段</strong></p><p><code>SELECT last_name FROM employees;</code></p><p><strong>2.查询表中的多个字段</strong></p><p><code>SELECT last_name, salary, email FROM employees;</code></p><p><strong>3.查询表中的所有字段</strong></p><p><code>SELECT * FROM employees;</code></p><p><strong>4.查询常量值</strong></p><p><code>SELECT 100;</code></p><p><code>SELECT 'john';</code></p><p><strong>5.查询表达式</strong></p><p><code>SELECT 100%98;</code></p><p><strong>6.查询函数</strong></p><p><code>SELECT VERSION();</code></p><p><strong>7.起别名</strong></p><p><strong>方式一：</strong></p><p><code>SELECT 100%98 as 结果;</code></p><p><code>SELECT last_name AS 姓,first_name AS 名 FROM employees;</code></p><p><strong>起别名好处：</strong></p><ul><li>便于理解。</li><li>如果要查询的字段有重名的情况，可以使用别名区别开来。</li></ul><p><strong>方式二：</strong></p><p><code>SELECT last_name 姓,first_name 名 FROM employees;</code></p><p><strong>8.去重</strong></p><p>案例：查询员工表中涉及到的所有部门编号。</p><p><code>SELECT DISTINCT department_id FROM employees;</code></p><p><strong>9.+号的作用</strong></p><p>注意mysql中+号只有一个功能，充当运算符，不能连接字符串。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select 100+90;如果两个操作数均为数值型，则做加法运算。</span><br><span class="line">select '123' + 90;若其中一方为字符型，则试图将字符型数值转化成数值型</span><br><span class="line">如果转换成功，则继续做加法运算；</span><br><span class="line">否则，则将字符型转换成0</span><br><span class="line">//select '123'+90的结果为213</span><br><span class="line">select 'john'+90;//结果为90</span><br><span class="line"></span><br><span class="line">select null+10;只要其中一方为null，则结果肯定为null</span><br></pre></td></tr></tbody></table></figure><p><strong>案例：查询员工<code>名</code>和<code>姓</code>连接成一个字段，并显示为 <code>姓名</code>。</strong></p><p>既然+号不能起到连接字段的作用，我们可以利用<code>concat</code>函数：</p><p><code>SELECT CONCAT(last_name,first_name) AS 姓名 FROM employees;</code></p><p>括号内的参数可以为多个。</p><p><strong>10.concat函数</strong></p><p>功能：拼接字符</p><p><code>select concat(字符1，字符2，字符3，...);</code></p><p><strong>11.ifnull函数</strong></p><p>功能：判断某字段是否为null，如果为null返回指定的值，否则返回原来的值。</p><p><code>select ifnull(commission_pct,0) from employees;</code></p><p><strong>12.isnull函数</strong></p><p>功能：判断该字段或表达式的值是否为null，是返回1，否则返回0</p><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><p><strong>语法：</strong></p><p><code>select 查询列表 from 表名 where 条件;</code></p><p><strong>条件的分类：</strong></p><ul><li>条件表达式<ul><li>示例：<code>salary&gt;10000</code></li><li>条件运算符：<code>&gt; &lt;  &gt;=  &lt;=  =  !=</code></li></ul></li><li>逻辑表达式<ul><li>示例：salary&gt;10000 &amp;&amp; salary&lt;20000</li><li>逻辑运算符：<ul><li>and（&amp;&amp;）:两个条件如果同时成立，结果为true，否则为false；</li><li>or(||)：两个条件只要有一个成立，结果为true，否则为false；</li><li>not(!)：如果条件成立，则not后为false，否则为true；</li></ul></li></ul></li><li>模糊查询<ul><li>运算符<ul><li>like<ul><li>一般和通配符搭配使用。</li><li>通配符有：<ul><li><code>%</code>  表示任意多个字符，包含0个字符</li><li><code>_</code>      表示任意单个字符</li></ul></li></ul></li><li>between and <ul><li>注意它包含临界值</li><li>两个临界值不要随意调换顺序</li></ul></li><li>in<ul><li>用于判断某字段的值是否属于in列表中的某一项</li><li>in列表的值类型必须统一或兼容,比如’123’可以转换成123</li><li>不支持通配符</li></ul></li><li>is null<ul><li><code>=</code>或者<code>&lt;&gt;</code>不能用于判断null值</li><li>is null或is not null可以判断null值</li></ul></li></ul></li><li><strong>实例：</strong><ul><li>查询员工名中包含字符a的员工信息<ul><li><code>SELECT * FROM employees WHERE last_name LIKE '%a%';</code></li></ul></li><li>查询员工名中第三个字符为e,第五个字符为a的员工名和工资(第几个就在前面画几个下划线，注意不要忘记末尾要加个百分号，表示后面还有0个或多个字符)<ul><li><code>SELECT last_name, salary FROM employees WHERE last_name LIKE '__n_l%';</code></li></ul></li><li>查询员工名中第二个字符为<code>_</code>的员工名(由于通配符中有下划线，这就需要用到转义字符或者用escape说明，比如下面那个说明<code>$</code>符后面的下划线不作为通配符)<ul><li><code>SELECT * FROM employees WHERE last_name LIKE '_\_%';</code></li><li><code>SELECT * FROM employees WHERE last_name LIKE '_$_%' ESCAPE '$';</code>   <strong>（推荐使用第二种方法）</strong></li></ul></li><li>查询员工编号在100到120之间的员工信息<ul><li><code>SELECT * FROM employees WHERE employee_id BETWEEN 100 AND 120</code></li></ul></li><li>查询员工的工种编号是<code>IT_PROG、AD_VP、AD_PRES</code>中的员工名和工种编号<ul><li><code>SELECT last_name, job_id FROM employees WHERE job_id IN ('IT_PROG','AD_VP','AD_PRES');</code></li></ul></li><li>查询没有奖金的员工名和奖金率<ul><li><code>SELECT last_name, commission_pct FROM employees WHERE commission_pct IS NULL;</code></li></ul></li><li>查询有奖金的员工名和奖金率<ul><li><code>SELECT last_name, commission_pct FROM employees WHERE commission_pct IS NOT NULL;</code></li></ul></li></ul></li></ul></li></ul><p><strong>安全等于</strong>  <code>&lt;=&gt;</code></p><ul><li>比如<ul><li><code>SELECT last_name, commission_pct FROM employees WHERE commission_pct &lt;=&gt; NULL;</code></li><li><code>SELECT last_name, commission_pct FROM employees WHERE salary &lt;=&gt; 12000;</code></li></ul></li><li>不过它用的较少，可读性差</li></ul><p><code>is null</code> <strong>与</strong> <code>&lt;=&gt;</code><strong>的比较：</strong></p><ul><li><code>is null</code>:仅仅可以判断NULL值。可读性较高。</li><li><code>&lt;=&gt;</code>    :该可以判断NULL值，又可以判断普通的数值。可读性较低</li></ul><p><strong>阶段测试：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询员工号为176的员工的姓名和部门号和年薪：</span><br><span class="line">SELECT last_name,department_id,salary*12*(1+IFNULL(commission_pct, 0)) AS 年薪 FROM employees;</span><br></pre></td></tr></tbody></table></figure><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><p><strong>语法：</strong></p><ul><li><code>select 查询列表 from 表名 【where 筛选条件】 order by 排序列表 【asc | desc】;</code></li><li>注意上面的asc表示升序，desc表示降序。如果不写，默认是升序，不过前提是你写了 <code>order by</code>。</li><li>order by子句中可以支持单个字段、多个字段、表达式、函数、别名。</li><li>order by子句一般放在查询语句的最后面，不过limit子句除外。</li></ul><p><strong>案例：</strong></p><p><strong>1.查询员工信息，要求工资从高到低排序。</strong></p><p><code>SELECT * FROM employees ORDER BY salary DESC;</code></p><p><strong>2.查询部门编号&gt;=90的员工信息，要求按入职时间的先后进行排序。</strong></p><p><code>SELECT * FROM employees WHERE department_id &gt;= 90 ORDER BY hiredate ASC;</code></p><p><strong>3.【按表达式排序】按年薪的高低显示员工的信息和年薪。</strong></p><p><code>SELECT *,salary*12*(1+IFNULL(commission_pct,0)) 年薪 FROM employees ORDER BY salary*12*(1+IFNULL(commission_pct,0)) DESC;</code></p><p><strong>4.【按别名排序】按年薪的高低显示员工的信息和年薪。</strong></p><p><code>SELECT *,salary*12*(1+IFNULL(commission_pct,0)) 年薪 FROM employees ORDER BY 年薪 DESC;</code></p><p><strong>5.按姓名的长度显示员工的员工和工资【按函数排序】</strong></p><p><code>SELECT LENGTH(last_name)字节长度,last_name,salary FROM employees ORDER BY 字节长度 DESC;</code></p><p><strong>6.查询员工信息，要求先按工资升序排序，如果一样的话再按员工编号降序排序【按多个字段排序】</strong></p><p><code>SELECT * FROM employees ORDER BY salary ASC,employee_id DESC;</code></p><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><h4 id="单行函数"><a href="#单行函数" class="headerlink" title="单行函数"></a>单行函数</h4><h5 id="1-字符函数"><a href="#1-字符函数" class="headerlink" title="1.字符函数"></a>1.字符函数</h5><p><strong>(1)length</strong>：获取参数值的字节个数</p><p><code>SELECT LENGTH('john');</code></p><p><strong>(2)concat</strong>：拼接字符串</p><p><code>SELECT CONCAT(last_name,'_',first_name) FROM employees;</code></p><p><strong>(3)upper、lower</strong></p><p>小案例：将表中姓大写，名小写，然后拼接。</p><p><code>SELECT CONCAT(UPPER(last_name),LOWER(first_name)) 姓名 FROM employees;</code></p><p><strong>(4)substr、substring</strong></p><p><strong>注意：索引从1开始。</strong></p><p><strong>截取从指定索引处后面的所有字符：</strong></p><p><code>SELECT SUBSTR('李莫愁爱上了陆展元',7) out_put;</code></p><p><strong>截取从指定索引处指定字符长度的字符：</strong></p><p><code>SELECT SUBSTR('李莫愁爱上了陆展元',1,3) out_put;</code></p><p>小案例：</p><p>将姓名中首字符大写，其他字符小写然后用_拼接，显示出来。</p><p><code>SELECT CONCAT(UPPER(SUBSTR(last_name,1,1)),'_',LOWER(SUBSTR(last_name,2))) out_put FROM employees;</code></p><p><strong>(5)instr：返回子串第一次出现的索引，如果找不到则返回0</strong></p><p><code>SELECT INSTR('杨不悔爱上了殷六侠','殷八侠') AS out_put ;</code></p><p><strong>(6)trim</strong></p><p><code>SELECT LENGTH(TRIM('      张存山         ')) AS out_put;</code></p><p><code>SELECT TRIM('a' FROM 'aaa张aaaaaa翠aaaaaaaa山') out_put;</code></p><p><strong>(7)lpad</strong> ：用指定的字符实现左填充指定长度</p><p><code>SELECT LPAD('因素是',10,'*') AS out_put;</code></p><p><strong>(8)rpad</strong>：用指定的字符实现右填充指定长度</p><p><code>SELECT RPAD('订单',12,'abb') AS out_put;</code></p><p><strong>(9)replace</strong></p><p><code>SELECT REPLACE('张无忌爱上了周芷若周芷若周芷若周芷若','周芷若','赵敏')AS out_put;</code></p><h5 id="2-数学函数"><a href="#2-数学函数" class="headerlink" title="2.数学函数"></a>2.数学函数</h5><p><strong>(1)round</strong>：四舍五入</p><p><code>SELECT ROUND(1.65);</code></p><p><code>SELECT ROUND(1.567,2);</code></p><p><strong>(2)ceil</strong>：向上取整</p><p><code>SELECT CEIL(1.52);</code></p><p><strong>(3)floor</strong>：向下取整</p><p><code>SELECT FLOOR(9.99);</code></p><p><strong>(4)truncate</strong>：截断</p><p><code>SELECT TRUNCATE(1.69,1);</code></p><p><strong>(5)mod</strong>：取余</p><p><code>SELECT MOD(-10,-3);</code></p><h5 id="3-日期函数"><a href="#3-日期函数" class="headerlink" title="3.日期函数"></a>3.日期函数</h5><p><strong>(1)now</strong>：返回当前系统日期</p><p><code>SELECT NOW();</code></p><p><strong>(2)curdate</strong>：返回当前系统日期，不包含时间</p><p><code>SELECT CURDATE();</code></p><p><strong>(3)curtime</strong>：返回当前时间，不包含日期</p><p><code>SELECT CURTIME();</code></p><p>(4)获取指定的部分，年、月、日、小时、分钟、秒。</p><p><code>SELECT YEAR(NOW()) 年;</code></p><p><code>SELECT MONTH(NOW()) 月;</code></p><p><code>SELECT MONTHNAME(NOW()) 月;</code></p><p>举个例子：获取employees表中的时间中的年。</p><p><code>SELECT YEAR(hiredate) 年 FROM employees;</code></p><p><strong>(5)str_to_date</strong>：将字符通过指定的格式转换成日期。</p><p><strong>语法：</strong></p><p>前一个为日期字符串，后一个为日期格式，日期格式可以从下列表中挑选。</p><p>举个例子：</p><p><code>SELECT STR_TO_DATE('1998-3-2','%Y-%c-%d') AS out_put;</code></p><p>小案例:查询入职日期为<code>4-3 1992</code>的员工信息</p><p><code>SELECT * FROM employees WHERE hiredate = STR_TO_DATE('4-3 1992', '%c-%d %Y');</code></p><p><strong>(6)date_format</strong>：将日期转换成字符</p><p><code>SELECT DATE_FORMAT(NOW(),'%y年%m月%d日') AS out_put;</code></p><p>小案例：查询有奖金的员工名和入职日期(xx月/xx日   xx年)</p><p><code>SELECT last_name,DATE_FORMAT(hiredate,'%m月/%d日 %y年') FROM employees WHERE commission_pct IS NOT NULL;</code> </p><h5 id="4-流程控制函数"><a href="#4-流程控制函数" class="headerlink" title="4.流程控制函数"></a>4.流程控制函数</h5><p><strong>(1)if函数</strong>：if else的效果</p><p><code>SELECT IF(10&gt;5, '大', '小');</code></p><p><code>SELECT last_name, commission_pct,IF(commission_pct IS NULL, '没奖金','有奖金') 备注 FROM employees;</code></p><p><strong>(2)case函数的使用一</strong>：switch case的效果</p><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case 要判断的字段或表达式</span><br><span class="line">when 常量1 then 要显示的值1或语句1//注意：如果要显示语句，则需要在语句后面加分号</span><br><span class="line">when 常量2 then 要显示的值2或语句2</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或语句n</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p><strong>案例:</strong></p><p>查询员工的工资，要求</p><p>部门号=30，显示的工资为1.1倍；</p><p>部门号=40，显示的工资为1.2倍；</p><p>部门号=50，显示的工资为1.3倍；</p><p>其他部门，显示的工资为原工资。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT salary 原始工资,department_id, </span><br><span class="line">CASE department_id</span><br><span class="line">WHEN 30 THEN salary*1.1</span><br><span class="line">WHEN 40 THEN salary*1.2</span><br><span class="line">WHEN 50 THEN salary*1.3</span><br><span class="line">ELSE salary</span><br><span class="line">END AS 新工资</span><br><span class="line">FROM employees;</span><br></pre></td></tr></tbody></table></figure><p><strong>(3)case函数的使用二</strong>：类似 多重if</p><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case</span><br><span class="line">when 条件1 then 显示的值1或语句1//注意：如果要显示语句，则需要在语句后面加分号</span><br><span class="line">when 条件2 then 要显示的值2或语句2</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或语句n</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p><strong>案例：</strong></p><p>查询员工的工资的情况，</p><p>如果工资&gt;20000，显示A级别；</p><p>如果工资&gt;15000，显示B级别;</p><p>如果工资&gt;10000，显示C级别;</p><p>否则，显示D级别;</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT salary,</span><br><span class="line">CASE</span><br><span class="line">WHEN salary &gt; 20000 THEN 'A'</span><br><span class="line">WHEN salary &gt; 15000 THEN 'B'</span><br><span class="line">WHEN salary &gt; 10000 THEN 'C'</span><br><span class="line">ELSE 'D'</span><br><span class="line">END AS 工资级别</span><br><span class="line">FROM employees;</span><br></pre></td></tr></tbody></table></figure><h4 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h4><p><strong>功能</strong>：用作统计使用，又称为聚合函数或统计函数或组函数。</p><p><strong>分类</strong>：</p><ul><li>sum求和</li><li>avg平均值</li><li>max最大值</li><li>min最小值</li><li>count计算个数。</li></ul><p><strong>简单使用：</strong></p><p><code>SELECT SUM(salary) FROM employees;</code></p><p><code>SELECT AVG(salary) FROM employees;</code></p><p><code>SELECT COUNT(salary) FROM employees;</code></p><p><code>SELECT SUM(salary)和,AVG(salary)平均,MAX(salary)最高,MIN(salary)最低,COUNT(salary)个数 FROM employees;</code></p><p><strong>特点：</strong></p><ul><li>sum和avg一般用于处理数值型</li><li>max、min、count可以处理任何数据类型</li><li>count的参数可以支持：字段、<code>*</code>、【常量值，一般放1】，不过建议使用<code>count(*)</code><ul><li><code>SELECT COUNT(*) FROM employees;</code></li><li>查询部门编号为90的员工个数<ul><li><code>SELECT COUNT(*) FROM employees WHERE department_id = 90;</code></li></ul></li></ul></li><li>它们都忽略null值</li><li>可以和distinct搭配实现去重的运算<ul><li><code>SELECT SUM(DISTINCT salary),SUM(salary) FROM employees;</code></li><li><code>SELECT COUNT(DISTINCT salary), COUNT(salary) FROM employees;</code></li></ul></li><li>和分组函数一同查询的字段要求是group by后的字段。</li></ul><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p><strong>语法：</strong></p><p><code>select 分组函数,列(要求出现在group by的后面) from 表 【where 筛选条件】group by 分组的列表 【order by子句】</code></p><p><strong>注意：</strong></p><p>查询列表必须特殊，要求是分组函数和group by后出现的字段</p><p><strong>简单的分组查询：</strong></p><ul><li>案例1：查询每个工种的最高工资。<ul><li><code>SELECT MAX(salary),job_id FROM employees GROUP BY job_id;</code></li></ul></li><li>案例2：查询每个位置上的部门个数。<ul><li><code>SELECT COUNT(*),location_id FROM departments GROUP BY location_id;</code></li></ul></li></ul><p><strong>【进阶】添加分组前的筛选条件：</strong></p><ul><li>案例1：查询邮箱中包含a字符的，每个部门的平均工资。<ul><li><code>SELECT AVG(salary),department_id FROM employees WHERE email LIKE '%a%' GROUP BY department_id;</code></li></ul></li><li>案例2：查询有奖金的每个领导手下员工的最高工资。<ul><li><code>SELECT MAX(salary),manager_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY manager_id;</code></li></ul></li></ul><p><strong>【再进阶】添加分组后的筛选条件(用到了HAVING)</strong></p><ul><li><p>案例1：查询哪个部门的员工个数<code>&gt;2</code>。</p><ul><li><code>SELECT COUNT(*),department_id FROM employees GROUP BY department_id HAVING COUNT(*)&gt;2;</code></li></ul></li><li><p>案例2：查询每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资。</p><ul><li>思路<ul><li>①查询每个工种有奖金的的员工的最高工资；</li><li>②根据①的结果继续筛选，最高工资&gt;12000</li></ul></li><li><code>SELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY job_id HAVING MAX(salary)&gt;12000;</code></li></ul></li><li><p>案例3：查询领导编号&gt;102的每个领导手下的最低工资&gt;5000的领导编号是哪个，以及其最低工资。</p><ul><li><pre><code class="mysql">SELECT MIN(salary),manager_idFROM employees WHERE manager_id &gt; 102GROUP BY manager_idHAVING MIN(salary)&gt;5000;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**按表达式或函数分组**</span><br><span class="line"></span><br><span class="line">- 案例：按员工姓名的长度分组，查询每一组的员工个数，筛选员工个数&gt;5的有哪些。</span><br><span class="line"></span><br><span class="line">  - ①查询每个长度的员工个数</span><br><span class="line"></span><br><span class="line">    - ```mysql</span><br><span class="line">      SELECT COUNT(*),LENGTH(last_name) len_name</span><br><span class="line">      FROM employees</span><br><span class="line">      GROUP BY LENGTH(last_name);</span><br></pre></td></tr></tbody></table></figure></code></pre></li><li><p>②添加筛选条件</p><ul><li><pre><code class="mysql">SELECT COUNT(*),LENGTH(last_name) len_nameFROM employeesGROUP BY LENGTH(last_name)HAVING COUNT(*)&gt;5;-- 或者这样写：SELECT COUNT(*) cnt,LENGTH(last_name) len_nameFROM employeesGROUP BY len_nameHAVING cnt&gt;5;-- 发现group by支持别名,按where不支持<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**按多个字段进行分组**</span><br><span class="line"></span><br><span class="line">- 案例：查询每个部门每个工种的员工的平均工资。</span><br><span class="line"></span><br><span class="line">  - ```mysql</span><br><span class="line">    SELECT AVG(salary),department_id,job_id</span><br><span class="line">    FROM employees</span><br><span class="line">    GROUP BY department_id, job_id;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul></li></ul><p><strong>添加排序</strong></p><ul><li><p>案例：查询每个部门每个工种的员工的平均工资，并且按平均工资的高低显示。</p><ul><li><pre><code class="mysql">SELECT AVG(salary),department_id,job_idFROM employeesGROUP BY department_id, job_idORDER BY AVG(salary) DESC;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**特点：**</span><br><span class="line"></span><br><span class="line">- 分组查询中的筛选条件分为两类</span><br><span class="line">  - 分组前筛选：其筛选源是原始表，放在group  by子句的前面，用到了where关键字。</span><br><span class="line">  - 分组后筛选：其筛选表是分组后的结果集合，放在group by子句的后面，用到了having关键字。</span><br><span class="line">- 分组函数做条件时肯定是放在having子句后面</span><br><span class="line">- 能用分组前筛选的，就优先考虑分组前筛选</span><br><span class="line">- group by子句支持单个字段分组，多个字段分组（多个字段之间用逗号隔开，没有顺序要求)</span><br><span class="line">- 也可以添加排序(排序放在整个分组查询的最后)</span><br><span class="line"></span><br><span class="line">### 连接查询</span><br><span class="line"></span><br><span class="line">**含义：**</span><br><span class="line"></span><br><span class="line">又成为多表查询，当查询的字段来自多个表时，就会用到连接查询。</span><br><span class="line"></span><br><span class="line">**分类【按年代分类】：**</span><br><span class="line"></span><br><span class="line">- sql92标准：仅仅支持内连接</span><br><span class="line">- sql99标准：支持内连接+外连接(左外和右外)+交叉连接</span><br><span class="line"></span><br><span class="line">**分类【按功能分类】：**</span><br><span class="line"></span><br><span class="line">- 内连接</span><br><span class="line">  - 等值连接</span><br><span class="line">  - 非等值连接</span><br><span class="line">  - 自连接</span><br><span class="line">- 外连接</span><br><span class="line">  - 左外连接</span><br><span class="line">  - 右外连接</span><br><span class="line">  - 全外连接</span><br><span class="line">- 交叉连接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### sql92标准</span><br><span class="line"></span><br><span class="line">##### 1.等值连接</span><br><span class="line"></span><br><span class="line">**案例1**：查询女神名和对应的男神名。</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">SELECT NAME,boyName </span><br><span class="line">FROM boys, beauty</span><br><span class="line">WHERE beauty.`boyfriend_id`=boys.id;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><p><strong>案例2</strong>：查询员工名和对应的部门名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name, department_name</span><br><span class="line"><span class="keyword">FROM</span> employees, departments</span><br><span class="line"><span class="keyword">WHERE</span> employees.`department_id`<span class="operator">=</span>departments.`department_id`;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3：</strong>查询员工名、工种号、工种名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 当emplyees,jobs表中都有job_id字段时，需要指明它来自哪个表，否则会执行错误。</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name, employees.job_id, job_title</span><br><span class="line"><span class="keyword">FROM</span> employees,jobs</span><br><span class="line"><span class="keyword">WHERE</span> employees.`job_id`<span class="operator">=</span>jobs.`job_id`;</span><br></pre></td></tr></tbody></table></figure><p>我们也可以给表起别名，用不用as都可以，如下：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- as可省略</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name, e.job_id, job_title</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="keyword">AS</span> e,jobs <span class="keyword">AS</span> j</span><br><span class="line"><span class="keyword">WHERE</span> e.`job_id`<span class="operator">=</span>j.`job_id`;</span><br></pre></td></tr></tbody></table></figure><p><strong>注意</strong>：==如果为表起了别名，则查询的字段不能使用原来的表名去限定。==</p><p><strong>案例4</strong>：查询有奖金的员工名、部门名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,commission_pct</span><br><span class="line"><span class="keyword">FROM</span> employees e,departments d</span><br><span class="line"><span class="keyword">WHERE</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">AND</span> e.`commission_pct` <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例5</strong>：查询城市中第二个字符为o的部门名和城市名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations l</span><br><span class="line"><span class="keyword">WHERE</span> d.`location_id`<span class="operator">=</span>l.`location_id`</span><br><span class="line"><span class="keyword">AND</span> l.`city` <span class="keyword">LIKE</span> <span class="string">'_o%'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例6</strong>：查询每个城市的部门个数。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> city,<span class="built_in">COUNT</span>(<span class="operator">*</span>) 个数</span><br><span class="line"><span class="keyword">FROM</span> locations l, departments d</span><br><span class="line"><span class="keyword">WHERE</span> l.`location_id`<span class="operator">=</span>d.`location_id`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city;</span><br></pre></td></tr></tbody></table></figure><p>**==案例7==**：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name,e.manager_id,<span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees e, departments d</span><br><span class="line"><span class="keyword">WHERE</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">AND</span> e.`commission_pct` <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> d.`department_name`, d.`manager_id`;</span><br></pre></td></tr></tbody></table></figure><p>**==案例8==**：查询每个工种的工种名和员工的个数，并且按员工个数降序。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> job_title,<span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> employees e, jobs j</span><br><span class="line"><span class="keyword">WHERE</span> e.`job_id`<span class="operator">=</span>j.`job_id`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> j.`job_title`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例9</strong>：查询员工名、部门名和所在的城市。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,city</span><br><span class="line"><span class="keyword">FROM</span> employees e, departments d, locations l</span><br><span class="line"><span class="keyword">WHERE</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">AND</span> d.`location_id`<span class="operator">=</span>l.`location_id`;</span><br></pre></td></tr></tbody></table></figure><p><strong>==总结一下等值连接的特点：==</strong></p><ul><li>多表等值连接的结果为多表的交集部分；</li><li>n表连接，至少需要n-1个连接条件；</li><li>多表的顺序没有要求；</li><li>一般需要为表起别名；</li><li>可以搭配前面介绍的所有子句，比如排序、分组、筛选。</li></ul><h5 id="2-非等值连接"><a href="#2-非等值连接" class="headerlink" title="2.非等值连接"></a>2.非等值连接</h5><p><strong>案例</strong>：查询员工的工资和工资级别。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e, job_grades g</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> g.`lowest_sal` <span class="keyword">AND</span> g.`highest_sal`;</span><br></pre></td></tr></tbody></table></figure><h5 id="3-自连接"><a href="#3-自连接" class="headerlink" title="3.自连接"></a>3.自连接</h5><p><strong>案例</strong>：查询员工名和上级的名字。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 可以把employees看成两个表e, m，e是员工表，m是上级表。</span></span><br><span class="line"><span class="keyword">SELECT</span> e.employee_id ,e.last_name,m.employee_id,m.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees e, employees m</span><br><span class="line"><span class="keyword">WHERE</span> e.manager_id <span class="operator">=</span> m.employee_id;</span><br></pre></td></tr></tbody></table></figure><h4 id="sql99标准"><a href="#sql99标准" class="headerlink" title="sql99标准"></a>sql99标准</h4><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select 字段，...</span><br><span class="line">from 表1 别名</span><br><span class="line">【inner|left outer|right outer|cross】join 表2 别名 on  连接条件</span><br><span class="line">【inner|left outer|right outer|cross】join 表3 on  连接条件</span><br><span class="line">【where 筛选条件】</span><br><span class="line">【group by 分组字段】</span><br><span class="line">【having 分组后的筛选条件】</span><br><span class="line">【order by 排序的字段或表达式】</span><br></pre></td></tr></tbody></table></figure><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><ul><li>内连接：inner<ul><li>等值连接</li><li>非等值连接</li><li>自连接</li></ul></li><li>外连接<ul><li>左外：left 【outer】</li><li>右外：right【outer】</li><li>全外：full【outer】</li></ul></li><li>交叉连接：cross</li></ul><h5 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h5><h6 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h6><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 查询列表</span><br><span class="line">from 表1 别名</span><br><span class="line">inner join 表2 别名</span><br><span class="line">on 连接条件;</span><br></pre></td></tr></tbody></table></figure><h6 id="1-等值连接"><a href="#1-等值连接" class="headerlink" title="1.等值连接"></a>1.等值连接</h6><p><strong>特点</strong>：</p><ul><li>可以添加排序、分组、筛选；</li><li>inner可以省略；</li><li>筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读；</li><li>inner join连接和sql92语法中的等值连接效果是一样的，都是查询多表的交集。</li></ul><p><strong>案例1</strong>：查询员工名、部门名</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询员工名和对应的部门名。（筛选）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j</span><br><span class="line"><span class="keyword">ON</span> e.`job_id`<span class="operator">=</span>j.`job_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.`last_name` <span class="keyword">LIKE</span> <span class="string">'%e%'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3：</strong>查询部门个数&gt;3的城市名和部门个数。（添加分组+筛选）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 根据要求，查询部门个数&gt;3的城市名和部门个数，也就是说先按照城市名进行分组，然后再用部门个数&gt;3这个条件进行筛选（这就用到了having）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> city,<span class="built_in">COUNT</span>(<span class="operator">*</span>) 部门个数</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> d.`location_id`<span class="operator">=</span>l.`location_id`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">3</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4</strong>：查询部门的员工个数&gt;3的部门名和员工个数，并按个数降序。（添加排序）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ①查询每个部门的员工个数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),department_name</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> department_name</span><br><span class="line"><span class="comment">-- ②在①的结果上选员工数&gt;3的记录，并排序</span></span><br><span class="line"><span class="keyword">SELECT</span> department_name 部门名,<span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> d.`department_id`</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">3</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例5</strong>：查询员工名、部门名、工种名，并按部门名降序。（三表连接）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> e.`job_id`<span class="operator">=</span>j.`job_id`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><h6 id="2-非等值连接-1"><a href="#2-非等值连接-1" class="headerlink" title="2.非等值连接"></a>2.非等值连接</h6><p><strong>案例1</strong>：查询员工的工资级别。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> e.`salary` <span class="keyword">BETWEEN</span> g.`lowest_sal` <span class="keyword">AND</span> g.`highest_sal`;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询每个工资级别的个数&gt;20的，并且按工资级别降序排序。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) 个数,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> e.`salary` <span class="keyword">BETWEEN</span> g.`lowest_sal` <span class="keyword">AND</span> g.`highest_sal`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grade_level</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">20</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> grade_level <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><h6 id="3-自连接-1"><a href="#3-自连接-1" class="headerlink" title="3.自连接"></a>3.自连接</h6><p><strong>案例1</strong>：查询员工的名字、上级的名字。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> e.last_name 员工名,m.last_name 上级名</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.`manager_id`<span class="operator">=</span>m.`employee_id`;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询姓名中包含字符k的员工的名字，以及对应的上级的名字。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> e.last_name 员工名,m.last_name 上级名</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.`manager_id`<span class="operator">=</span>m.`employee_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.`last_name` <span class="keyword">LIKE</span> <span class="string">'%k%'</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="外连接-这里没有介绍全外连接"><a href="#外连接-这里没有介绍全外连接" class="headerlink" title="外连接(这里没有介绍全外连接)"></a>外连接(这里没有介绍全外连接)</h5><p><strong>应用场景</strong>：用于查询一个表中有，另一个表中没有的记录。</p><p><strong>特点</strong>：</p><ul><li>外连接的查询结果为<code>主表</code>中的所有记录，如果<code>从表</code>中有和它匹配的，则显示匹配的值；若没有，则显示null。即：外连接查询结果=内连接结果+<code>主表</code>中有而<code>从表</code>中没有的记录。</li><li>左外连接中，left join左边的是主表；右外连接中，right join 右边的是主表。</li></ul><p><strong>引入</strong>：查询男朋友不在男神表的女神名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.name 女神名</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys bo</span><br><span class="line"><span class="keyword">ON</span> b.`boyfriend_id`<span class="operator">=</span>bo.`id`</span><br><span class="line"><span class="keyword">WHERE</span> bo.`id` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><p>或者</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.name 女神名</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> beauty b</span><br><span class="line"><span class="keyword">ON</span> b.`boyfriend_id`<span class="operator">=</span>bo.`id`</span><br><span class="line"><span class="keyword">WHERE</span> bo.`id` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例</strong>：查询哪个部门没有员工。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span>,e.employee_id</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees e</span><br><span class="line"><span class="keyword">ON</span> d.`department_id`<span class="operator">=</span>e.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.`employee_id` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h5><p>就是使用sql99标准实现两个表的笛卡尔乘积。如：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.<span class="operator">*</span>,bo.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> boys bo;</span><br></pre></td></tr></tbody></table></figure><h4 id="join连接总结"><a href="#join连接总结" class="headerlink" title="join连接总结"></a>join连接总结</h4><h4 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h4><p><strong>1.查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有，用NULL填充。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 根据要求，查询女神的男朋友信息，如果没有则用NULL填充，从这里可以看出女神表beauty为主表，男神表boys为从表。</span></span><br><span class="line"><span class="comment">--下面使用左外连接 left左面的为主表</span></span><br><span class="line"><span class="keyword">SELECT</span> b.id,b.`name`,bo.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys bo</span><br><span class="line"><span class="keyword">ON</span> b.`boyfriend_id`<span class="operator">=</span>bo.`id`</span><br><span class="line"><span class="keyword">WHERE</span> b.`id`<span class="operator">&gt;</span><span class="number">3</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>2.查询哪个城市没有部门。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从要求中可以推断出locations表为主表，departments表为从表，因为有些部门没有和城市匹配。</span></span><br><span class="line"><span class="comment">-- 下面使用右外连接 right右面的为主表</span></span><br><span class="line"><span class="keyword">SELECT</span> city</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> d.`location_id`<span class="operator">=</span>l.`location_id`</span><br><span class="line"><span class="keyword">WHERE</span> d.`department_id` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>3.查询部门名为SAL或IT的员工信息。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 题目要求查询部门名为指定内容的员工信息，考虑到可能会出现有些部门没有员工，为了查到全，所以这里采用外连接，不采用内连接。部门表departments为主表，员工表employees为从表</span></span><br><span class="line"><span class="comment">-- 下面使用左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> e.<span class="operator">*</span>,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees e</span><br><span class="line"><span class="keyword">ON</span> d.`department_id`<span class="operator">=</span>e.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> d.`department_name` <span class="keyword">IN</span>(<span class="string">'SAL'</span>,<span class="string">'IT'</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p><strong>含义</strong>：</p><p>出现在其他语句中的select语句，称为子查询或内查询。</p><p>外部的查询语句，成为主查询或外查询。</p><p><strong>分类</strong>：</p><ul><li>按子查询出现的位置分类：<ul><li>select后面<ul><li>仅仅支持标量子查询</li></ul></li><li>from后面<ul><li>支持表子查询</li></ul></li><li><strong>where或having后面</strong><ul><li>支持<strong>标量子查询、列子查询</strong></li><li>也支持行子查询(不过用的较少)</li></ul></li><li>exists后面（相关子查询）<ul><li>支持表子查询</li></ul></li></ul></li><li>按结果集的行列数不同分类：<ul><li>标量子查询（结果集只有一行一列）</li><li>列子查询（结果集只有一列多行）</li><li>行子查询（结果集有一行多列，也支持多列多行）</li><li>表子查询（结果集一般为多行多列，也就是说具有上面三个子查询的特性）</li></ul></li></ul><h4 id="where或having后面"><a href="#where或having后面" class="headerlink" title="where或having后面"></a>where或having后面</h4><h5 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h5><ul><li>子查询放在小括号内</li><li>子查询一般放在条件的右侧</li><li>标量子查询，一般搭配着单行操作符使用。<ul><li>单行操作符比如：<code>&gt; &lt; &gt;= &lt;= = &lt;&gt;</code></li></ul></li><li>列子查询，一般搭配着多行操作符使用<ul><li>多行操作符比如：<code>IN、ANY/SOME、ALL</code></li></ul></li><li>子查询的执行优先于主查询的执行，也就是说主查询的条件用到了子查询的结果。</li></ul><h5 id="where或having后面的标量子查询（也称为单行子查询）使用"><a href="#where或having后面的标量子查询（也称为单行子查询）使用" class="headerlink" title="where或having后面的标量子查询（也称为单行子查询）使用"></a>where或having后面的标量子查询（也称为单行子查询）使用</h5><p><strong>案例1</strong>：谁的工资比Abel高？</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ①：查询Abel的工资</span></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name<span class="operator">=</span><span class="string">'Abel'</span>;</span><br><span class="line"><span class="comment">-- ②：查询员工的信息，满足salary&gt;①的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name<span class="operator">=</span><span class="string">'Abel'</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：返回job_id与141号员工相同，salary比143号员工多的员工的姓名、job_id和工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ①查询141号员工的job_id</span></span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">141</span>;</span><br><span class="line"><span class="comment">-- ②查询143号员工的salary</span></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">143</span>;</span><br><span class="line"><span class="comment">-- ③查询员工的信息，要求job_id=①并且salary&gt;②</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">141</span></span><br><span class="line">) <span class="keyword">AND</span> salary<span class="operator">&gt;</span>(</span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">143</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3</strong>：返回公司工资最少的员工的last_name、job_id和salary</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ①查询公司的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- ②查询员工的last_name、job_id和salary,要求salary=①</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4</strong>：查询最低工资大于50号部门最低工资的部门id和其最低工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ①:查询50号部门的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line"><span class="comment">-- ②:查询每个部门的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- ③:在②的基础上筛选，满足min(salary)&gt;①</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">MIN</span>(salary) <span class="operator">&gt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>非法使用标量子查询情况，比如</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">MIN</span>(salary) <span class="operator">&gt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 上面这个是非法使用，原因是子查询的结果不是单行单列</span></span><br></pre></td></tr></tbody></table></figure><h5 id="where或having后面的列子查询（也称为多行子查询）使用"><a href="#where或having后面的列子查询（也称为多行子查询）使用" class="headerlink" title="where或having后面的列子查询（也称为多行子查询）使用"></a>where或having后面的列子查询（也称为多行子查询）使用</h5><p><strong>案例1</strong>：返回location_id是1400或1700的部门中的所有员工姓名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.先查询location_id是1400或1700的部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="operator">=</span> <span class="number">1400</span> </span><br><span class="line"><span class="keyword">OR</span> location_id <span class="operator">=</span> <span class="number">1700</span>;</span><br><span class="line"><span class="comment">-- 2.查询员工姓名，要求部门号是1列表中的某一个</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="operator">=</span> <span class="number">1400</span> </span><br><span class="line"><span class="keyword">OR</span> location_id <span class="operator">=</span> <span class="number">1700</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：返回其他工种中比<code>job_id</code>为<code>IT_PROG</code>工种任意一个工资低的员工的员工号、姓名、<code>job_id</code>以及salary。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询job_id=IT_PROG部门的任一工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span> <span class="string">'IT_PROG'</span>;</span><br><span class="line"><span class="comment">-- 2.查询员工号、姓名、job_id以及salary，并且salary&lt;any(1中的任意一个)</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> <span class="keyword">ANY</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span> <span class="string">'IT_PROG'</span></span><br><span class="line">) <span class="keyword">AND</span> job_id<span class="operator">&lt;&gt;</span><span class="string">'IT_PROG'</span>;</span><br><span class="line"><span class="comment">-- 或者这么写</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span> <span class="string">'IT_PROG'</span></span><br><span class="line">) <span class="keyword">AND</span> job_id<span class="operator">&lt;&gt;</span><span class="string">'IT_PROG'</span>;</span><br></pre></td></tr></tbody></table></figure><p>案例3：返回其他工种中比<code>job_id</code>为<code>IT_PROG</code>工种所有工资都低的员工的员工号、姓名、<code>job_id</code>以及salary。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> <span class="keyword">ALL</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span> <span class="string">'IT_PROG'</span></span><br><span class="line">) <span class="keyword">AND</span> job_id<span class="operator">&lt;&gt;</span><span class="string">'IT_PROG'</span>;</span><br><span class="line"><span class="comment">-- 或者这么写</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span> <span class="string">'IT_PROG'</span></span><br><span class="line">) <span class="keyword">AND</span> job_id<span class="operator">&lt;&gt;</span><span class="string">'IT_PROG'</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="where或having后面的行子查询（结果集为一行多列或多列多行-使用"><a href="#where或having后面的行子查询（结果集为一行多列或多列多行-使用" class="headerlink" title="where或having后面的行子查询（结果集为一行多列或多列多行)使用"></a>where或having后面的行子查询（结果集为一行多列或多列多行)使用</h5><p><strong>案例</strong>：查询员工编号最小并且工资最高的员工信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询最小的员工编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 2.查询最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 3.查询员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">)<span class="keyword">AND</span> salary<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用行子查询解决</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> (employee_id,salary)<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(employee_id),<span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h4 id="select后面"><a href="#select后面" class="headerlink" title="select后面"></a>select后面</h4><p><strong>案例1</strong>：查询每个部门的员工个数。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span>,(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">WHERE</span> e.department_id  <span class="operator">=</span> d.`department_id`</span><br><span class="line">) 个数</span><br><span class="line"><span class="keyword">FROM</span> departments d;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询员工号=102的部门名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees e</span><br><span class="line"><span class="keyword">ON</span> d.department_id <span class="operator">=</span> e.department_id</span><br><span class="line"><span class="keyword">WHERE</span> e.employee_id <span class="operator">=</span> <span class="number">102</span></span><br><span class="line">) 部门名;</span><br></pre></td></tr></tbody></table></figure><h4 id="from后面"><a href="#from后面" class="headerlink" title="from后面"></a>from后面</h4><p><strong>案例</strong>：查询每个部门的平均工资的工资等级。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.先查询每个部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 2.连接1的结果集何job_grades表，筛选条件是平均工资在lowest_sal和highest_sal之间。</span></span><br><span class="line"><span class="keyword">SELECT</span> ag_dep.<span class="operator">*</span>,g.`grade_level`</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">)ag_dep</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> ag_dep.ag <span class="keyword">BETWEEN</span> lowest_sal <span class="keyword">AND</span> highest_sal;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 发现from将子查询结果充当一张表，要求必须起别名</span></span><br></pre></td></tr></tbody></table></figure><h4 id="exists后面（相关子查询）"><a href="#exists后面（相关子查询）" class="headerlink" title="exists后面（相关子查询）"></a>exists后面（相关子查询）</h4><p><strong>语法</strong>：</p><p><code>exists(完整的查询语句);</code></p><p>最终结果只有两种情况，1或0。</p><p><strong>案例1</strong>：查询有员工的部门名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">WHERE</span> d.department_id <span class="operator">=</span> e.`department_id`</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">-- 或使用in解决</span></span><br><span class="line"><span class="keyword">SELECT</span> department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">WHERE</span> d.`department_id` <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询没有女朋友的男神信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用in</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">WHERE</span> bo.id <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> boyfriend_id</span><br><span class="line"><span class="keyword">FROM</span> beauty</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用exists</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> boyfriend_id</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">WHERE</span> b.`boyfriend_id`<span class="operator">=</span>bo.`id`</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p><strong>案例1</strong>：查询和<code>Zlotkey</code>相同部门的员工姓名和工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询Zlotkey的部门</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">'Zlotkey'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.查询部门号等于1.的结果的姓名和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name, salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">'Zlotkey'</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询工资比公司平均工资高的员工的员工号，姓名和工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询公司的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 2.查询工资比1.的结果高的员工的员工号，姓名和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>==<strong>案例3</strong>：查询各部门中工资比本部门平均工资高的员工的员工号，姓名和工资。==</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 首先需要读懂题意，问的是各部门中工资大于本部门平均工资的员工的信息，意思就是筛选处每个部门大于自身部门的平均工资的员工</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.查询各部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 2.连接1.的结果集和employees表，进行筛选</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary, e.department_id</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">)ag_dep</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>ag_dep.department_id</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> ag_dep.ag;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4</strong>：查询和姓名中包含字母u的员工在相同部门的员工的员工号和姓名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询姓名中包含字母u的员工的部门号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%u%'</span>;</span><br><span class="line"><span class="comment">-- 2.查询部门号=1.的结果集的任意一个员工的员工号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%u%'</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例5</strong>：查询在部门的location_id为1700的部门工作的员工的员工号。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询location_id为1700的部门</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="operator">=</span> <span class="number">1700</span>;</span><br><span class="line"><span class="comment">-- 2.查询部门号=1.的结果集中的任意一个的员工号。</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> <span class="keyword">ANY</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="operator">=</span> <span class="number">1700</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 按照这里的题意，any换成in也行</span></span><br></pre></td></tr></tbody></table></figure><p><strong>案例6</strong>：查询管理者是K_ing的员工姓名和工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询姓名为K_ing的员工编号</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">'K_ing'</span>;</span><br><span class="line"><span class="comment">-- 2.查询哪个员工的manager_id = 1.的结果集的任意一个</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> manager_id <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">'K_ing'</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例7</strong>：查询工资最高的员工的姓名，要求first_name和last_name显示为一列，列名为姓，名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 2.查询工资=1的结果集的姓、名</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(first_name,last_name) "姓名"</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h4 id="经典案例"><a href="#经典案例" class="headerlink" title="经典案例"></a>经典案例</h4><p><strong>案例1</strong>：查询工资最低的员工信息: last_name, salary  。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 二、查询last_name,salary，要求salary=一、的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询平均工资最低的部门信息  。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询各部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 二、查询一、结果中的最低平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(ag)</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">) ag_dep;</span><br><span class="line"><span class="comment">-- 三、查询哪个部门的平均工资=二、的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(salary)<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(ag)</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">) ag_dep</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 四、查询部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">WHERE</span> d.`department_id`<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(salary)<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(ag)</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">) ag_dep</span><br><span class="line">)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>或者</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、求出最低平均工资的部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(salary)</span><br><span class="line">limit <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 二、查询部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> department_id<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line">LIMIT <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3</strong>：查询平均工资最低的部门信息和该部门的平均工资  。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询各部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 二、求出最低平均工资的部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(salary)</span><br><span class="line">limit <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 三、查询部门信息(这里用到了表子查询)</span></span><br><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">JOIN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line">LIMIT <span class="number">1</span></span><br><span class="line">)ag_dep</span><br><span class="line"><span class="keyword">ON</span> d.`department_id`<span class="operator">=</span>ag_dep.department_id;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4</strong>：查询平均工资最高的 job 信息  。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询每个job的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 二、查询job信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> jobs</span><br><span class="line"><span class="keyword">WHERE</span> jobs.`job_id` <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例5</strong>：查询平均工资高于公司平均工资的部门有哪些?  </p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询公司的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 二、查询每个部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 三、筛选二、的结果集，满足平均工资&gt;一的结果</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>案例6</strong>：查询出公司中所有 manager 的详细信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询所有manager的员工编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> manager_id</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 二、查询详细信息，满足employee_id=1的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="keyword">ANY</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> manager_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例7</strong>：各个部门中 最高工资中最低的那个部门的 最低工资是多少  。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、查询各部门的最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 二、找一、结果集中最低的那个</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line">LIMIT <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 三、查询哪个部门的最高工资等于二、结果，</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">MAX</span>(salary)</span><br><span class="line">LIMIT <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例8</strong>：查询平均工资最高的部门的 manager 的详细信息: last_name, department_id, email,<br>salary 。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、找到平均工资最高的部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 二、将employees和departments连接查询，筛选条件是一、的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,d.department_id,email,salary</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> d.`manager_id` <span class="operator">=</span> e.`employee_id`</span><br><span class="line"><span class="keyword">WHERE</span> d.`department_id`<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p><strong>应用场景</strong>：当要显示的数据，一页显示不全时，需要分页提交sql请求。</p><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line">【<span class="keyword">join</span> type <span class="keyword">join</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">where</span> 筛选条件</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 分组字段</span><br><span class="line"><span class="keyword">having</span> 分组后的筛选</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序的字段】</span><br><span class="line">limit <span class="keyword">offset</span>,size;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- offset表示要显示条目的起始索引（起始索引从0开始）</span></span><br><span class="line"><span class="comment">-- size表示要显示的条目个数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--执行顺序：from表先走，再inner join on,再去筛选，再去group by，再去having，再走select，然后order by，最后执行limit</span></span><br></pre></td></tr></tbody></table></figure><p><strong>特点</strong>：</p><ul><li><p>limit语句放在查询语句的最后；</p></li><li><p>在web开发的分页显示中会用到下面的公式：</p><ul><li><p>要显示的页数page，每页的条目数size</p></li><li><pre><code>select 查询列表from 表limit (page-1)*size,size;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**案例1**：查询前5条员工信息。</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">SELECT * FROM employees LIMIT 0,5;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><p><strong>案例2</strong>：查询第11条到第25条员工信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees LIMIT <span class="number">10</span>,<span class="number">15</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3</strong>：查询有奖金的员工信息，并且工资较高的前10名显示出来。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> LIMIT <span class="number">10</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="union联合查询"><a href="#union联合查询" class="headerlink" title="union联合查询"></a>union联合查询</h3><p><strong>union联合，合并</strong>：将多条查询语句的结果合成一个结果。</p><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询语句<span class="number">1</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line">查询语句<span class="number">2</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p><strong>引入的案例</strong>：查询部门编号&gt;90或邮箱中包含a的员工信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%a%'</span></span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> department_id<span class="operator">&gt;</span><span class="number">90</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>应用场景</strong>：</p><p>要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致（表示列字段意义差不多）时。</p><p><strong>特点</strong>：</p><ul><li>要求多条查询语句的查询列数是一致的。</li><li>要求多条查询语句的查询的每一列的类型和顺序最好一致。</li><li>union关键字默认去重，如果使用union all，就可以包含重复项。</li></ul><h2 id="十、DML语言的学习"><a href="#十、DML语言的学习" class="headerlink" title="十、DML语言的学习"></a>十、DML语言的学习</h2><h3 id="插入语句"><a href="#插入语句" class="headerlink" title="插入语句"></a>插入语句</h3><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方式一、</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段名，...)</span><br><span class="line"><span class="keyword">values</span>(值<span class="number">1</span>，...);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二、</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名</span><br><span class="line"><span class="keyword">set</span> 列名<span class="operator">=</span>值,列名<span class="operator">=</span>值,...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式一支持插入多行数据，方式二不支持</span></span><br><span class="line"><span class="comment">-- 方式一支持子查询，方式二不支持</span></span><br></pre></td></tr></tbody></table></figure><p>特点：</p><ul><li>字段类型和值类型一致或兼容，而且一一对应；</li><li>可以为空的字段，可以不用插入值，或用null填充；</li><li>不可以为空的字段，必须插入值；</li><li>字段个数和值的个数必须一致；</li><li>字段可以省略，但默认所有字段，并且顺序和表中的存储顺序一致；</li></ul><h3 id="修改语句"><a href="#修改语句" class="headerlink" title="修改语句"></a>修改语句</h3><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改单表语法：</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段<span class="operator">=</span>新值,字段<span class="operator">=</span>新值</span><br><span class="line">【<span class="keyword">where</span> 条件】</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改多表语法【补充】：</span></span><br><span class="line"><span class="comment">-- sql92语法</span></span><br><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名<span class="number">1</span>,表<span class="number">2</span> 别名<span class="number">2</span></span><br><span class="line"><span class="keyword">set</span> 字段<span class="operator">=</span>新值，字段<span class="operator">=</span>新值</span><br><span class="line"><span class="keyword">where</span> 连接条件</span><br><span class="line"><span class="keyword">and</span> 筛选条件</span><br><span class="line"><span class="comment">--sql99语法</span></span><br><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">inner</span><span class="operator">|</span><span class="keyword">left</span><span class="operator">|</span><span class="keyword">right</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">set</span> 列<span class="operator">=</span>值,...</span><br><span class="line"><span class="keyword">where</span> 筛选条件</span><br></pre></td></tr></tbody></table></figure><p><strong>修改多表记录案例：</strong></p><p><strong>案例1</strong>：修改张无忌的女朋友的手机号为114。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> boys bo</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> beauty b</span><br><span class="line"><span class="keyword">ON</span> bo.`id`<span class="operator">=</span>b.`boyfriend_id`</span><br><span class="line"><span class="keyword">SET</span> b.`phone`<span class="operator">=</span><span class="string">'114'</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.`boyName`<span class="operator">=</span><span class="string">'张无忌'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：修改没有男朋友的女神的男朋友编号为2号。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> beauty b </span><br><span class="line"><span class="keyword">ON</span> bo.`id`<span class="operator">=</span>b.`boyfriend_id`</span><br><span class="line"><span class="keyword">SET</span> b.`boyfriend_id`<span class="operator">=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.`id` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="删除语句"><a href="#删除语句" class="headerlink" title="删除语句"></a>删除语句</h3><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方式一：delete语句</span></span><br><span class="line"><span class="comment">-- 单表删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 【<span class="keyword">where</span> 筛选条件】</span><br><span class="line"><span class="comment">-- 不加where的时候会清空该表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多表删除【补充】</span></span><br><span class="line"><span class="comment">--sql92语法</span></span><br><span class="line"><span class="keyword">delete</span> 别名<span class="number">1</span>，别名<span class="number">2</span></span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名<span class="number">1</span>，表<span class="number">2</span> 别名<span class="number">2</span></span><br><span class="line"><span class="keyword">where</span> 连接条件</span><br><span class="line"><span class="keyword">and</span> 筛选条件;</span><br><span class="line"><span class="comment">--sql99语法</span></span><br><span class="line"><span class="keyword">delete</span> 表<span class="number">1</span>的别名,表<span class="number">2</span>的别名</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">inner</span><span class="operator">|</span><span class="keyword">left</span><span class="operator">|</span><span class="keyword">right</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">--方式二：truncate语句（不允许加where）</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名</span><br><span class="line"><span class="comment">--执行它后会清空该表</span></span><br></pre></td></tr></tbody></table></figure><p><strong>两种方式的区别</strong>：</p><ul><li>truncate不能加where条件，而delete可以加where条件</li><li>truncate的效率高一丢丢</li><li>truncate 删除带自增长的列的表后，如果再插入数据，数据从1开始；delete 删除带自增长列的表后，如果再插入数据，数据从上一次的断点处开始</li><li>truncate删除不能回滚，delete删除可以回滚</li></ul><p><strong>多表的删除案例</strong>：</p><ul><li><p>案例：删除张无忌的女朋友信息。</p><ul><li><pre><code class="sql">DELETE bFROM beauty bINNER JOIN boys bo ON b.`boyfriend_id`=bo.`id`WHERE bo.`boyName`='张无忌';<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 案例：删除黄晓明的信息以及他女朋友的信息。</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    DELETE b,bo</span><br><span class="line">    FROM beauty b</span><br><span class="line">    INNER JOIN boys bo ON b.`boyfriend_id`=bo.`id`</span><br><span class="line">    WHERE bo.`boyName`='黄晓明';</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><h2 id="十一、DDL语言的学习"><a href="#十一、DDL语言的学习" class="headerlink" title="十一、DDL语言的学习"></a>十一、DDL语言的学习</h2><p>也称为数据定义语言，包括库和表的管理。</p><ul><li>库的管理<ul><li>创建</li><li>修改</li><li>删除</li></ul></li><li>表的管理<ul><li>创建</li><li>修改</li><li>删除</li></ul></li></ul><p>创建：create；</p><p>修改：alter；</p><p>删除：drop。</p><h3 id="库的管理"><a href="#库的管理" class="headerlink" title="库的管理"></a>库的管理</h3><h4 id="1-库的创建"><a href="#1-库的创建" class="headerlink" title="1.库的创建"></a>1.库的创建</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database [if <span class="keyword">not</span> <span class="keyword">exists</span>]库名;</span><br></pre></td></tr></tbody></table></figure><p>案例：创建库Books。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加IF NOT EXISTS是为了避免当存在那个库时再创建会报错</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> books;</span><br></pre></td></tr></tbody></table></figure><h4 id="2-库的修改"><a href="#2-库的修改" class="headerlink" title="2.库的修改"></a>2.库的修改</h4><p>更改库的字符集</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE books <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br></pre></td></tr></tbody></table></figure><h4 id="3-库的删除"><a href="#3-库的删除" class="headerlink" title="3.库的删除"></a>3.库的删除</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加if exists是为了避免删除不存在的库报错</span></span><br><span class="line"><span class="keyword">drop</span> database [if <span class="keyword">exists</span>] 库名</span><br></pre></td></tr></tbody></table></figure><p><strong>案例</strong>：删除库Books。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> books;</span><br></pre></td></tr></tbody></table></figure><h3 id="表的管理"><a href="#表的管理" class="headerlink" title="表的管理"></a>表的管理</h3><h4 id="1-表的创建"><a href="#1-表的创建" class="headerlink" title="1.表的创建"></a>1.表的创建</h4><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 列的类型【(长度)约束】,</span><br><span class="line">    列名 列的类型【(长度)约束】,</span><br><span class="line">列名 列的类型【(长度)约束】,</span><br><span class="line">    ...</span><br><span class="line">    列名 列的类型【(长度)约束】</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例</strong>：创建表Book。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加IF NOT EXISTS是为了增强容错性</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> book(</span><br><span class="line">id <span class="type">INT</span>,#编号</span><br><span class="line">bName <span class="type">VARCHAR</span>(<span class="number">20</span>),#图书名</span><br><span class="line">price <span class="keyword">DOUBLE</span>,#价格</span><br><span class="line">authorId <span class="type">INT</span>,#作者</span><br><span class="line">publishDate DATETIME #出版日期</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p><strong>案例</strong>：创建表author。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> author(</span><br><span class="line">id <span class="type">INT</span>,#编号</span><br><span class="line">au_name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">nation <span class="type">VARCHAR</span>(<span class="number">10</span>) #国籍</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h4 id="2-表的修改"><a href="#2-表的修改" class="headerlink" title="2.表的修改"></a>2.表的修改</h4><p>语法：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span><span class="operator">|</span><span class="keyword">drop</span><span class="operator">|</span>modify<span class="operator">|</span>change <span class="keyword">column</span> 字段名【字段类型 约束】;</span><br></pre></td></tr></tbody></table></figure><p><strong>作用范围</strong>：</p><ul><li><p>可以修改列名</p><ul><li><p>将表book的publishdate字段修改成pubDate，注意后面还要加上类型。</p></li><li><pre><code class="sql">ALTER TABLE book CHANGE COLUMN publishdate pubDate DATETIME;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 修改列的类型或约束</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    -- 注意它不区分大小写</span><br><span class="line">    ALTER TABLE book MODIFY COLUMN pubdate TIMESTAMP;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>添加新列</p><ul><li><pre><code class="sql">-- 注意类型也要写上ALTER TABLE author ADD COLUMN annual DOUBLE;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 删除列</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    ALTER TABLE author DROP COLUMN annual;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>修改表名</p><ul><li><pre><code class="sql">ALTER TABLE author RENAME TO book_author;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">#### 3.表的删除</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">-- 加IF EXISTS是为了容错性</span><br><span class="line">DROP TABLE IF EXISTS book_author;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><h3 id="表的复制"><a href="#表的复制" class="headerlink" title="表的复制"></a>表的复制</h3><h4 id="1-仅仅复制表的结构"><a href="#1-仅仅复制表的结构" class="headerlink" title="1.仅仅复制表的结构"></a>1.仅仅复制表的结构</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个copy表，复制author表的结构</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">copy</span> <span class="keyword">LIKE</span> author;</span><br></pre></td></tr></tbody></table></figure><h4 id="2-复制表的结构-数据"><a href="#2-复制表的结构-数据" class="headerlink" title="2.复制表的结构+数据"></a>2.复制表的结构+数据</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy2</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> author;</span><br></pre></td></tr></tbody></table></figure><p>只复制部分数据:</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy3</span><br><span class="line"><span class="keyword">SELECT</span> id,au_name</span><br><span class="line"><span class="keyword">FROM</span> author</span><br><span class="line"><span class="keyword">WHERE</span> nation<span class="operator">=</span><span class="string">'中国'</span>;</span><br></pre></td></tr></tbody></table></figure><p>仅仅复制某些字段(不复制数据)：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy4</span><br><span class="line"><span class="keyword">SELECT</span> id,au_name</span><br><span class="line"><span class="keyword">FROM</span> author</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 或</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy4</span><br><span class="line"><span class="keyword">SELECT</span> id,au_name</span><br><span class="line"><span class="keyword">FROM</span> author</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">0</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="常见的数据类型"><a href="#常见的数据类型" class="headerlink" title="常见的数据类型"></a>常见的数据类型</h3><ul><li>数值型<ul><li>整型</li><li>小数<ul><li>定点数</li><li>浮点数</li></ul></li></ul></li><li>字符型<ul><li>较短的文本：char、varchar</li><li>较长的文本：text、blob(较长的二进制数据)</li></ul></li><li>日期型</li></ul><h4 id="1-整型"><a href="#1-整型" class="headerlink" title="1.整型"></a>1.整型</h4><p><strong>特点</strong>：</p><ul><li><p>如果不设置无符号还是有符号，默认时有符号，如果想设置无符号，则需要添加unsigned 关键字。</p></li><li><p>如果插入的数值超出了整型的范围，会报out of range异常，并且插入临界值。</p></li><li><p>如果不设置长度，会有默认的长度。</p></li><li><p>长度代表了显示的最大宽度，如果不够会用0在左边填充，但在创建表时需要搭配zerofill使用。如：</p><ul><li><pre><code class="sql">CREATE TABLE tab_int(    t1 INT(7) ZEROFILL,    t2 INT(7) ZEROFILL );-- 但这样就不能插入负数了<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">案例：如何设置无符号和有符号。</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">CREATE TABLE tab_int(</span><br><span class="line">t1 INT,</span><br><span class="line">t2 INT UNSIGNED</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><h4 id="2-小数"><a href="#2-小数" class="headerlink" title="2.小数"></a>2.小数</h4><p><strong>浮点型</strong>：</p><p><code>float(M,D)</code></p><p><code>double(M,D)</code></p><p><strong>定点型</strong>：</p><p><code>dec(M,D)</code></p><p><code>decimal(M,D)</code></p><p><strong>特点</strong>：</p><ul><li>M代表整数部位+小数部位的长度</li><li>D代表小数部位的长度</li><li>如果超出范围，则插入临界值</li><li>如果没有特殊要求的话，M和D可以省略</li><li>如果是decimal，则M默认为0，D默认为0</li><li>如果是float和double，则会根据插入的数值的精度来决定精度.</li><li>定点型的精确度较高，如果要求插入数值的精度较高比如货币运算，则用定点型的。</li></ul><p><strong>原则</strong>：</p><p>所选择的类型越简单越好，能保存数值的类型越小越好。</p><h4 id="3-字符型"><a href="#3-字符型" class="headerlink" title="3.字符型"></a>3.字符型</h4><ul><li>较短的文本：char、varchar</li><li>较长的文本：text、blob(较长的二进制数据)</li><li>其他：<ul><li>binary和varbinary用于保存较短的二进制</li><li>enum用于保存枚举</li><li>set用于保存集合</li></ul></li></ul><p>char代表固定长度的字符，varchar代表可变长度的字符。可以和char、string类比。</p><h4 id="4-日期型"><a href="#4-日期型" class="headerlink" title="4.日期型"></a>4.日期型</h4><h3 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h3><h4 id="约束的含义："><a href="#约束的含义：" class="headerlink" title="约束的含义："></a><strong>约束的含义</strong>：</h4><p>一种限制，用于限制表中的数据，为了保证表中的数据的准确和可靠性。</p><h4 id="分类："><a href="#分类：" class="headerlink" title="分类："></a><strong>分类</strong>：</h4><ul><li>NOT NULL ：非空，用于保证该字段的值不能为空，比如姓名、学号等；</li><li>DEFAULT：默认，用于保证该字段有默认值，比如性别；</li><li>PRIMARY KEY：主键，用于保证该字段的值具有唯一性，并且非空，比如学号、员工编号等；</li><li>UNIQUE：唯一，用于保证该字段的值具有唯一性，可以为空，比如座位号；</li><li>CHECK：检查约束【mysql中不支持】</li><li>FOREIGN KEY：外键，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值。<ul><li>注意是在从表中添加外键约束，用于引用主表中某列的值。比如学生表的专业编号，员工表的部门编号，员工表的工种编号。</li><li>从表的外键列的类型要求和主表中对应的列的类型一致。名称无要求。</li><li>主表的关联列必须是一个key(一般是主键、唯一键)</li><li>==插入数据时，先插入主表，再插入从表的数据。删除数据时先删除从表，再删除主表。==</li></ul></li></ul><h4 id="添加约束的时机："><a href="#添加约束的时机：" class="headerlink" title="添加约束的时机："></a><strong>添加约束的时机</strong>：</h4><ul><li>创建表时</li><li>修改表时</li></ul><h4 id="约束的添加分类："><a href="#约束的添加分类：" class="headerlink" title="约束的添加分类："></a><strong>约束的添加分类</strong>：</h4><ul><li>列级约束<ul><li>六大约束语法上都支持，但外键约束没有效果；</li></ul></li><li>表级约束<ul><li>除了非空(NOT NULL)、默认(DEFAULT)，其他的都支持；</li></ul></li></ul><h4 id="创建表时添加约束"><a href="#创建表时添加约束" class="headerlink" title="创建表时添加约束"></a>创建表时添加约束</h4><h5 id="1-添加列级约束"><a href="#1-添加列级约束" class="headerlink" title="1.添加列级约束"></a>1.添加列级约束</h5><p><strong>语法</strong>：</p><ul><li>直接在字段名和类型后面追加约束类型即可。</li><li>只支持默认、非空、主键、唯一。</li></ul><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> major(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">majorName <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--尽管这里写了外键约束，但由于在列级约束中外键约束没有效果，故这里没有效果。</span></span><br><span class="line"><span class="comment">--这个check在mysql不支持</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,#主键</span><br><span class="line">stuName <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,#非空约束</span><br><span class="line">gender <span class="type">CHAR</span>(<span class="number">1</span>) <span class="keyword">CHECK</span>(gender<span class="operator">=</span><span class="string">'男'</span> <span class="keyword">OR</span> gender<span class="operator">=</span><span class="string">'女'</span>),#检查约束</span><br><span class="line">seat <span class="type">INT</span> <span class="keyword">UNIQUE</span>,#唯一约束</span><br><span class="line">age <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>,#默认约束</span><br><span class="line">majorId <span class="type">INT</span> <span class="keyword">REFERENCES</span> major(id)#外键约束</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看stuinfo表中所有的索引，包括主键、外键、唯一</span></span><br><span class="line"><span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> stuinfo;</span><br></pre></td></tr></tbody></table></figure><h5 id="2-添加表级约束"><a href="#2-添加表级约束" class="headerlink" title="2.添加表级约束"></a>2.添加表级约束</h5><p>语法：</p><p>在各个字段的最下面</p><p><code>【constraint 约束名】 约束类型(字段名)</code> </p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">stuname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">seat <span class="type">INT</span>,</span><br><span class="line">age <span class="type">INT</span>,</span><br><span class="line">majorid <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk <span class="keyword">PRIMARY</span> KEY(id),#主键</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uq <span class="keyword">UNIQUE</span>(seat),#唯一键</span><br><span class="line"><span class="keyword">CONSTRAINT</span> ck <span class="keyword">CHECK</span>(genger <span class="operator">=</span> <span class="string">'男'</span> <span class="keyword">OR</span> gender <span class="operator">=</span> <span class="string">'女'</span>),#检查约束</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> KEY(majorid) <span class="keyword">REFERENCES</span> major(id)#外键</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者这样写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">stuname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">seat <span class="type">INT</span>,</span><br><span class="line">age <span class="type">INT</span>,</span><br><span class="line">majorid <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(id),#主键</span><br><span class="line"><span class="keyword">UNIQUE</span>(seat),#唯一键</span><br><span class="line"><span class="keyword">CHECK</span>(genger <span class="operator">=</span> <span class="string">'男'</span> <span class="keyword">OR</span> gender <span class="operator">=</span> <span class="string">'女'</span>),#检查约束</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(majorid) <span class="keyword">REFERENCES</span> major(id)#外键</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h5 id="3-通用的写法："><a href="#3-通用的写法：" class="headerlink" title="3.通用的写法："></a>3.通用的写法：</h5><p>也就是说可以用列级约束的那样子写的就用列级约束写，否则就用表级约束去写。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> stuinfo(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">studname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">sex <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">age <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>,</span><br><span class="line">seat <span class="type">INT</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">majorid <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> KEY(majorid) <span class="keyword">REFERENCES</span> major(id)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><h4 id="修改表时添加约束"><a href="#修改表时添加约束" class="headerlink" title="修改表时添加约束"></a>修改表时添加约束</h4><h5 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 添加列级约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify <span class="keyword">column</span> 字段名 字段类型 新约束</span><br><span class="line"><span class="comment">-- 2. 添加表级约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 【<span class="keyword">constraint</span> 约束名】 约束类型(字段名) 【外键的引用】</span><br></pre></td></tr></tbody></table></figure><h5 id="1-添加非空约束"><a href="#1-添加非空约束" class="headerlink" title="1.添加非空约束"></a>1.添加非空约束</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这里为了举例，先重新创建一个表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">stuname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">seat <span class="type">INT</span>,</span><br><span class="line">age <span class="type">INT</span>,</span><br><span class="line">majorid <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将stuname字段添加非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> stuname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="2-添加默认约束"><a href="#2-添加默认约束" class="headerlink" title="2.添加默认约束"></a>2.添加默认约束</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将age字段添加默认约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> age <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="3-添加主键"><a href="#3-添加主键" class="headerlink" title="3.添加主键"></a>3.添加主键</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将id字段添加主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line"><span class="comment">--或者这么写</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(id);</span><br></pre></td></tr></tbody></table></figure><h5 id="4-添加唯一"><a href="#4-添加唯一" class="headerlink" title="4.添加唯一"></a>4.添加唯一</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将seat字段添加唯一</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> seat <span class="type">INT</span> <span class="keyword">UNIQUE</span>;</span><br><span class="line"><span class="comment">-- 或者这么写</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(seat);</span><br></pre></td></tr></tbody></table></figure><h5 id="5-添加外键"><a href="#5-添加外键" class="headerlink" title="5.添加外键"></a>5.添加外键</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为majorid字段添加外键约束，与major表中的id字段关联</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> KEY(majorid) <span class="keyword">REFERENCES</span> major(id);</span><br></pre></td></tr></tbody></table></figure><h4 id="修改表时删除约束"><a href="#修改表时删除约束" class="headerlink" title="修改表时删除约束"></a>修改表时删除约束</h4><h5 id="1-删除非空约束"><a href="#1-删除非空约束" class="headerlink" title="1.删除非空约束"></a>1.删除非空约束</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> stuname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="2-删除默认约束"><a href="#2-删除默认约束" class="headerlink" title="2.删除默认约束"></a>2.删除默认约束</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo MODIFY <span class="keyword">COLUMN</span> age <span class="type">INT</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="3-删除主键"><a href="#3-删除主键" class="headerlink" title="3.删除主键"></a>3.删除主键</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br></pre></td></tr></tbody></table></figure><h5 id="4-删除唯一"><a href="#4-删除唯一" class="headerlink" title="4.删除唯一"></a>4.删除唯一</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> INDEX seat;</span><br><span class="line"><span class="comment">-- index后面要写什么需要先执行show index from stuinfo 查看对应的Key_name是什么,填到index后面</span></span><br></pre></td></tr></tbody></table></figure><h5 id="5-删除外键"><a href="#5-删除外键" class="headerlink" title="5.删除外键"></a>5.删除外键</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY fk_stuinfo_major;</span><br><span class="line"><span class="comment">-- foreign key 后面要写什么需要先执行show index from stuinfo 查看对应的Key_name是什么,填到key后面</span></span><br></pre></td></tr></tbody></table></figure><h3 id="标识列"><a href="#标识列" class="headerlink" title="标识列"></a>标识列</h3><p>又称为自增长列，可以不用手动的添加值，系统提供默认的序列值。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>标识列必须和主键搭配吗？——&gt;  不一定，但要求是一个key，比如主键、唯一、外键;</li><li>一个表中可以有几个标识列？——-&gt; 至多一个;</li><li>标识列的类型必须是数值类型;</li><li>标识列可以通过<code>SET auto_increment_increment=3;</code>设置步长。也可以通过手动插入值来设置起始值。</li></ul><h4 id="创建表时设置标识列"><a href="#创建表时设置标识列" class="headerlink" title="创建表时设置标识列"></a>创建表时设置标识列</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tab_identity;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_identity(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,<span class="comment">-- 看AUTO_INCREMENT</span></span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_identity <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">'join'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_identity(NAME) <span class="keyword">VALUES</span>(<span class="string">'tom'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tab_identity;</span><br></pre></td></tr></tbody></table></figure><h4 id="修改表时设置标识列"><a href="#修改表时设置标识列" class="headerlink" title="修改表时设置标识列"></a>修改表时设置标识列</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tab_identity;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_identity(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tab_identity MODIFY <span class="keyword">COLUMN</span> id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT;</span><br></pre></td></tr></tbody></table></figure><h4 id="修改表时删除标识列"><a href="#修改表时删除标识列" class="headerlink" title="修改表时删除标识列"></a>修改表时删除标识列</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tab_identity MODIFY <span class="keyword">COLUMN</span> id <span class="type">INT</span>;</span><br></pre></td></tr></tbody></table></figure><h2 id="十二、TCL语言的学习"><a href="#十二、TCL语言的学习" class="headerlink" title="十二、TCL语言的学习"></a>十二、TCL语言的学习</h2><h3 id="相关概念介绍"><a href="#相关概念介绍" class="headerlink" title="相关概念介绍"></a>相关概念介绍</h3><p><strong>Transaction Control Language：事务控制语言。</strong></p><p><strong>事务：</strong></p><p>一个或一组sql语句组成一个执行单元，这个执行单元要么全部执行，要么全部不执行。</p><p>通过一组逻辑操作单元（一组DML——sql语句），将数据从一种状态切换到另外一种状态</p><p><strong>案例：转账。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始时</span><br><span class="line">张三丰 <span class="number">1000</span></span><br><span class="line">郭襄   <span class="number">1000</span></span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 张三丰的余额<span class="operator">=</span><span class="number">500</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">'张三丰'</span></span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 郭襄的余额<span class="operator">=</span><span class="number">1500</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">'郭襄'</span></span><br></pre></td></tr></tbody></table></figure><p><strong>事务的ACID(acid)属性：</strong></p><ul><li>原子性：要么都执行，要么都回滚；</li><li>一致性：保证数据的状态操作前和操作后保持一致；</li><li>隔离性：多个事务同时操作相同数据库的同一个数据时，一个事务的执行不受另外一个事务的干扰；</li><li>持久性：一个事务一旦提交，则数据将持久化到本地，除非其他事务对其进行修改；</li></ul><p><strong>事务的分类：</strong></p><ul><li><p>隐式事务：没有明显的开启和结束事务的标志。</p><ul><li>比如insert、update、delete语句本身就是一个事务</li></ul></li><li><p>显式事务：具有明显的开启和结束事务的标志。</p><ul><li><p>前提：必须先设置自动提交功能(<code>autocommit</code>)为禁用。<code>SET autocommit=0;</code>不过只针对当前的事务有效。可以先执行<code>SHOW VARIABLES LIKE '%autocommit%';</code>查看一下是否已经被禁用。</p></li><li><p>步骤一：开启事务</p><ul><li><pre><code class="sql">SET autocommit=0;START TRANSACTION;#可选<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 步骤二：编写事务的一组逻辑操作单元（多条sql语句[比如select、insert、update、delete]）</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    语句1;</span><br><span class="line">    语句2;</span><br><span class="line">    ...</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>步骤三：结束事务</p><ul><li><pre><code class="sql">commit;#提交事务rollback;#回滚事务savepoint 节点名;#设置保存点，联想一下断点<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 演示事务的使用步骤</span><br><span class="line"></span><br><span class="line">- 准备表并插入数据：</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    DROP TABLE IF EXISTS account;</span><br><span class="line">    </span><br><span class="line">    CREATE TABLE account(</span><br><span class="line">    id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    username VARCHAR(20),</span><br><span class="line">    balance DOUBLE</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    INSERT INTO account(username,balance)</span><br><span class="line">    VALUES ('张无忌',1000),('郭襄',1000);</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul></li><li><p>开启事务</p><ul><li><pre><code class="sql">SET autocommit = 0;START TRANSACTION;#可选<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 编写一组事务的语句</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    UPDATE account SET balance = 500 WHERE username='张无忌';</span><br><span class="line">    UPDATE account SET balance = 1500 WHERE username='郭襄';</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>结束事务</p><ul><li><pre><code class="sql">COMMIT;--如果写rollback放在commit之前，或者不写commit，会导致数据不会发生改变<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**delete 和 truncate 在事务使用时的区别：**</span><br><span class="line"></span><br><span class="line">- 演示delete(支持回滚)</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    SET autocommit = 0;</span><br><span class="line">    START TRANSACTION;</span><br><span class="line">    DELETE FROM account;</span><br><span class="line">    ROLLBACK;</span><br><span class="line">    -- 回滚后发现没有删除</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>演示truncate(不支持回滚)</p><ul><li><pre><code class="sql">SET autocommit = 0;START TRANSACTION;TRUNCATE TABLE account;ROLLBACK;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 事务的隔离级别</span><br><span class="line"></span><br><span class="line">#### 事务并发问题如何发生？</span><br><span class="line"></span><br><span class="line">当多个事务同时操作同一个数据库的相同数据时</span><br><span class="line"></span><br><span class="line">#### 事务的并发问题有哪些？</span><br><span class="line"></span><br><span class="line">- 脏读：一个事务读取了其他事务还没有提交的数据，读到的是其他事务“更新”的数据;</span><br><span class="line">- 不可重复读：同一个事务中，多次读取到的数据不一致;</span><br><span class="line">- 幻读：一个事务读取了其他事务还没有提交的数据，只是读到的是 其他事务“插入”的数据。</span><br><span class="line"></span><br><span class="line">#### 如何避免事务的并发问题？</span><br><span class="line"></span><br><span class="line">通过设置事务的隔离级别来避免，隔离级别有</span><br><span class="line"></span><br><span class="line">- `READ UNCOMMITTED`(读未提交数据)允许事务读取未被其他事务提交的变更，脏读、不可重复读和幻读的问题都会出现。</span><br><span class="line">- `READ COMMITTED`(读已提交数据) 只允许事务读取已经被其他事务提交的变更，可以避免脏读，但不可重复读和幻读仍然可能出现。</span><br><span class="line">- `REPEATABLE READ`(可重复读) 确保事务可以多次从一个字段中读取相同的值，在这个事务持续期间，禁止其他事务对这个字段进行更新，可以避免脏读、不可重复读和一部分幻读，但幻读的问题依旧存在。</span><br><span class="line">- `SERIALIZABLE`(串行化) 确保事务可以从一个表中读取相同的行，在这个事务持续期间，禁止其他事务对该表执行插入、更新和删除操作，所有并发问题都可以避免，但性能十分低， 可以避免脏读、不可重复读和幻读。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 演示事务的隔离级别</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">-- 用cmd命令窗口(管理员模式)操作</span><br><span class="line"></span><br><span class="line">-- 查看当前的隔离级别</span><br><span class="line">select @@tx_isolation;</span><br><span class="line"></span><br><span class="line">-- 设置隔离级别</span><br><span class="line">set session transaction isolation level 隔离级别名称;</span><br><span class="line"></span><br><span class="line">-- 操作数据库</span><br><span class="line">use 数据库名;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">SET autocommit = 0;</span><br><span class="line"></span><br><span class="line">-- 编写sql语句</span><br><span class="line"></span><br><span class="line">-- 结束事务</span><br><span class="line">-- rollback; 写rollback或commit，根据具体情况决定</span><br><span class="line">commit;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li></ul><h4 id="演示savepoint的使用"><a href="#演示savepoint的使用" class="headerlink" title="演示savepoint的使用"></a>演示<code>savepoint</code>的使用</h4><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> TRANSACTION;#在客户端中一般使用这条，在控制台里不需要</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SAVEPOINT</span> a; #设置保存点</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> a;#回滚到保存点,这样就导致id<span class="operator">=</span><span class="number">1</span>的数据删除，id<span class="operator">=</span><span class="number">3</span>的数据没有删除</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> account;</span><br></pre></td></tr></tbody></table></figure><h2 id="十三、视图"><a href="#十三、视图" class="headerlink" title="十三、视图"></a>十三、视图</h2><h3 id="含义："><a href="#含义：" class="headerlink" title="含义："></a>含义：</h3><p>虚拟表，和普通表一样使用。是mysql5.1版本中出现的新特性，是通过表动态生成的数据。它只保存sql逻辑，不保存查询结果。</p><p><strong>案例</strong>：查询姓张的学生名和专业名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 以前是这样写</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname,majorName</span><br><span class="line"><span class="keyword">FROM</span> stuinfo s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m</span><br><span class="line"><span class="keyword">ON</span> s.`majorid`<span class="operator">=</span>m.`id`</span><br><span class="line"><span class="keyword">WHERE</span> s.`stuname` <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学了视图后可以将主要部分封装起来</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname,majorName</span><br><span class="line"><span class="keyword">FROM</span> stuinfo s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m</span><br><span class="line"><span class="keyword">ON</span> s.`majorid`<span class="operator">=</span>m.`id`;</span><br><span class="line"><span class="comment">--再去使用它</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v1 <span class="keyword">WHERE</span> stuname <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="视图和表的区别"><a href="#视图和表的区别" class="headerlink" title="视图和表的区别"></a>视图和表的区别</h3><table><thead><tr><th align="center"></th><th align="center">创建语法的关键字</th><th align="center">占用物理空间</th><th align="center">使用</th></tr></thead><tbody><tr><td align="center">视图</td><td align="center"><code>create view</code></td><td align="center">不占用，仅仅保存的是sql逻辑</td><td align="center">增删改查，一般不能增删改</td></tr><tr><td align="center">表</td><td align="center"><code>create table</code></td><td align="center">占用</td><td align="center">增删改查</td></tr></tbody></table><h3 id="视图的创建"><a href="#视图的创建" class="headerlink" title="视图的创建"></a>视图的创建</h3><p><strong>语法：</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span>  视图名</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">查询语句;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例1</strong>：查询姓名中包含a字符的员工名、部门名和工种信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.department_id <span class="operator">=</span> d.department_id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> e.job_id <span class="operator">=</span> j.job_id;</span><br><span class="line"><span class="comment">-- 使用</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> myv1 <span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%a%'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：查询各部门的平均工资级别。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建视图，查看每个部门的平均工资</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv2</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) ag, department_id</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"># 使用</span><br><span class="line"><span class="keyword">SELECT</span> myv2.`ag`, g.grade_level  </span><br><span class="line"><span class="keyword">FROM</span> myv2 </span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> myv2.`ag` <span class="keyword">BETWEEN</span> g.`lowest_sal` <span class="keyword">AND</span> g.`highest_sal`;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3</strong>：查询平均工资最低的部门信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#前面已经创建过视图myv2，这里就不需要再创建</span><br><span class="line"></span><br><span class="line"># 使用</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> myv2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> ag LIMIT <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4</strong>：查询平均工资最低的部门名和工资。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 创建视图myv3,将包含视图myv2的<span class="keyword">sql</span>操作再次封装</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv3</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> myv2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> ag LIMIT <span class="number">1</span>;</span><br><span class="line"># 使用</span><br><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span>, m.ag</span><br><span class="line"><span class="keyword">FROM</span> myv3 m</span><br><span class="line"><span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> m.`department_id`<span class="operator">=</span>d.`department_id`;</span><br></pre></td></tr></tbody></table></figure><h3 id="视图的修改"><a href="#视图的修改" class="headerlink" title="视图的修改"></a>视图的修改</h3><p><strong>语法</strong>：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方式一</span></span><br><span class="line">creat <span class="keyword">or</span> replace <span class="keyword">view</span> 视图名</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">查询语句;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> 视图名</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">查询语句;</span><br></pre></td></tr></tbody></table></figure><h3 id="视图的删除"><a href="#视图的删除" class="headerlink" title="视图的删除"></a>视图的删除</h3><p><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view 视图名,视图名,...;</span><br></pre></td></tr></tbody></table></figure><h3 id="视图的查看"><a href="#视图的查看" class="headerlink" title="视图的查看"></a>视图的查看</h3><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这里说的查看是指查看它的结构</span></span><br><span class="line"><span class="keyword">desc</span> 视图名;</span><br></pre></td></tr></tbody></table></figure><h3 id="视图的更新"><a href="#视图的更新" class="headerlink" title="视图的更新"></a>视图的更新</h3><p>==注意这里的更新是指更改视图中的数据。==</p><p>其余的就可以，语法和普通表的一样。更新包括插入、删除、修改。</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p><strong>案例1</strong>：创建视图<code>emp_v1</code>，要求查询电话号码以<code>011</code>开头的员工姓名和工资、邮箱。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> emp_v1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary,email</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">WHERE</span> phone_number <span class="keyword">LIKE</span> <span class="string">'011%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp_v1;</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2</strong>：创建视图<code>emp_v2</code>，要求查询部门的最高工资高于12000的部门信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> emp_v2</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) mx, department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> mx <span class="operator">&gt;</span> <span class="number">12000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.<span class="operator">*</span>, e.mx</span><br><span class="line"><span class="keyword">FROM</span> emp_v2 e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> d.`department_id` <span class="operator">=</span> e.department_id;</span><br></pre></td></tr></tbody></table></figure><h4 id="小测试"><a href="#小测试" class="headerlink" title="小测试"></a>小测试</h4><ol><li></li></ol><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> bookType(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Book(</span><br><span class="line">bid <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">bname <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">price <span class="keyword">DOUBLE</span> <span class="keyword">DEFAULT</span> <span class="number">10</span>,</span><br><span class="line">bypeId <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_book_booktype <span class="keyword">FOREIGN</span> KEY(bypeId) <span class="keyword">REFERENCES</span> bookType(id)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li></li></ol><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line">#先插入主表中数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> bookType <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">2333</span>, <span class="string">'水浒'</span>);</span><br><span class="line">#再插入从表中数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Book <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'张飞'</span>, <span class="number">100000</span>, <span class="number">2333</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li></li></ol><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> bname, NAME</span><br><span class="line"><span class="keyword">FROM</span> book bo</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> booktype b </span><br><span class="line"><span class="keyword">ON</span> bo.bypeId<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&gt;</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> myv1;</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li></li></ol><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> bname, price</span><br><span class="line"><span class="keyword">FROM</span> book</span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">90</span> <span class="keyword">AND</span> <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> myv1;</span><br></pre></td></tr></tbody></table></figure><ol start="5"><li></li></ol><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> myv1;</span><br></pre></td></tr></tbody></table></figure><h2 id="十四、变量"><a href="#十四、变量" class="headerlink" title="十四、变量"></a>十四、变量</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><ul><li>系统变量（按照作用范围划分）<ul><li>全局变量<ul><li>作用域：服务器每次启动将为所有的全局变量赋初始值。针对于所有的会话(连接)有效，但是不能跨重启，就是重启前的设置，在重启后就恢复默认。</li></ul></li><li>会话变量<ul><li>作用域：仅仅针对于当前会话(连接)有效。</li></ul></li></ul></li><li>自定义变量（按照作用范围划分）<ul><li>用户变量<ul><li>作用域：针对于当前会话(连接)有效，同于会话变量的作用域。应用在任何地方，也就是begin end里面或者begin end外面。</li></ul></li><li>局部变量<ul><li>作用域：仅仅在定义它的begin end中有效。应用在begin end中的第一句话。</li></ul></li></ul></li></ul><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><p>变量由系统提供，不是用户定义，属于服务器层面。</p><h4 id="使用的语法："><a href="#使用的语法：" class="headerlink" title="使用的语法："></a>使用的语法：</h4><ul><li><p>1.查看所有的系统变量</p><ul><li><pre><code class="sql">-- 查看全局变量SHOW GLOBAL VARIABLES;-- 查看会话变量(session可以不写,默认是session)SHOW SESSION VARIABLES;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 2.查看满足条件的部门系统变量</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    SHOW GLOBAL VARIABLES LIKE '%char%';</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>3.查看指定的某个系统变量的值</p><ul><li><pre><code class="sql">-- 如果这样写，默认是从会话变量中查询SELECT @@系统变量名;-- 如果想从全局变量中找SELECT @@global.系统变量名;<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 4.为某个系统变量复制</span><br><span class="line"></span><br><span class="line">  - ```sql</span><br><span class="line">    set 系统变量名 = 值;</span><br><span class="line">    set global 系统变量名 = 值;</span><br><span class="line">    </span><br><span class="line">    set @@global.系统变量名=值;</span><br><span class="line">    set @@session.系统变量名=值;</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul></li><li><p>注意：如果是全局级别，则需要加global，如果是会话级别，则可以加，也可以不加session。不写默认是session。</p></li></ul><h4 id="全局变量的演示"><a href="#全局变量的演示" class="headerlink" title="全局变量的演示"></a>全局变量的演示</h4><p><strong>1.查看所有的全局变量：</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> VARIABLES;</span><br></pre></td></tr></tbody></table></figure><p><strong>2.查看部分的全局变量：</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看包含char的全局变量</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">'%char%'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>3.查看指定的全局变量的值：</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看autocommit的值</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.autocommit;</span><br><span class="line"><span class="comment">-- 查看隔离级别</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.tx_isolation;</span><br></pre></td></tr></tbody></table></figure><p><strong>4.为某个指定的全局变量赋值</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @<span class="variable">@global</span>.autocommit<span class="operator">=</span><span class="number">0</span>;</span><br></pre></td></tr></tbody></table></figure><h4 id="会话变量的演示"><a href="#会话变量的演示" class="headerlink" title="会话变量的演示"></a>会话变量的演示</h4><p><strong>1.查看所有的会话变量</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> SESSION VARIABLES;</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES;</span><br></pre></td></tr></tbody></table></figure><p><strong>2.查看部分的会话变量</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> SESSION VARIABLES <span class="keyword">LIKE</span> <span class="string">'%char%'</span>;</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">'%char%'</span>;</span><br></pre></td></tr></tbody></table></figure><p><strong>3.查看指定的会话变量的值</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@tx_isolation</span>;</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@session</span>.tx_isolation;</span><br></pre></td></tr></tbody></table></figure><p><strong>4.为某个会话变量赋值</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @<span class="variable">@session</span>.tx_isolation <span class="operator">=</span> <span class="string">'read-uncommitted'</span>;</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">SET</span> SESSION tx_isolation <span class="operator">=</span> <span class="string">'read-committed'</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><h4 id="说明：-1"><a href="#说明：-1" class="headerlink" title="说明："></a>说明：</h4><p>变量是由用户自定义的，不是由系统提供的。</p><h4 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">声明</span><br><span class="line">赋值</span><br><span class="line">使用(查看、比较、运算等)</span><br></pre></td></tr></tbody></table></figure><h4 id="用户变量的演示"><a href="#用户变量的演示" class="headerlink" title="用户变量的演示"></a>用户变量的演示</h4><p><strong>1.声明并初始化</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 下面三种方式都可以</span></span><br><span class="line"><span class="keyword">SET</span> @用户变量名<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SET</span> @用户变量名:<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SELECT</span> @用户变量名:<span class="operator">=</span>值;</span><br></pre></td></tr></tbody></table></figure><p><strong>2.赋值(更新用户变量的值)</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方式一：通过set或select</span></span><br><span class="line"><span class="keyword">SET</span> @用户变量名<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SET</span> @用户变量名:<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SELECT</span> @用户变量名:<span class="operator">=</span>值;</span><br><span class="line"><span class="comment">-- 方式二：通过select into</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 <span class="keyword">INTO</span> @变量名</span><br><span class="line"><span class="keyword">FROM</span> 表;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例如：查看employees表中的数量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> <span class="variable">@count</span></span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></tbody></table></figure><p><strong>3.使用(查看用户变量的值)</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @用户变量名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例如：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@count</span>;</span><br></pre></td></tr></tbody></table></figure><h4 id="局部变量的演示"><a href="#局部变量的演示" class="headerlink" title="局部变量的演示"></a>局部变量的演示</h4><p><strong>1.声明</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 只声明</span></span><br><span class="line"><span class="keyword">DECLARE</span> 变量名 类型;</span><br><span class="line"><span class="comment">-- 声明并初始化</span></span><br><span class="line"><span class="keyword">DECLARE</span> 变量名 类型 <span class="keyword">DEFAULT</span> 值;</span><br></pre></td></tr></tbody></table></figure><p><strong>2.赋值</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方式一：通过set或select</span></span><br><span class="line"><span class="keyword">SET</span> 局部变量名<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SET</span> 局部变量名:<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">SELECT</span> @局部变量名:<span class="operator">=</span>值;</span><br><span class="line"><span class="comment">-- 方式二：通过select into</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 <span class="keyword">INTO</span> 局部变量名</span><br><span class="line"><span class="keyword">FROM</span> 表;</span><br></pre></td></tr></tbody></table></figure><p><strong>3.使用</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 局部变量名;</span><br></pre></td></tr></tbody></table></figure><h4 id="对比用户变量和局部变量"><a href="#对比用户变量和局部变量" class="headerlink" title="对比用户变量和局部变量"></a>对比用户变量和局部变量</h4><table><thead><tr><th align="center"></th><th align="center">作用域</th><th align="center">定义和使用的位置</th><th align="center">语法</th></tr></thead><tbody><tr><td align="center">用户变量</td><td align="center">当前会话</td><td align="center">当前会话中的任何地方</td><td align="center">必须加上@符号，不用限定类型</td></tr><tr><td align="center">局部变量</td><td align="center">begin end中</td><td align="center">只能在begin end中，且为第一句话</td><td align="center">一般不加@符号，需要限定类型</td></tr></tbody></table><h4 id="案例：声明两个变量并赋初值，求和，并打印"><a href="#案例：声明两个变量并赋初值，求和，并打印" class="headerlink" title="案例：声明两个变量并赋初值，求和，并打印"></a>案例：声明两个变量并赋初值，求和，并打印</h4><h5 id="1-用用户变量来做"><a href="#1-用用户变量来做" class="headerlink" title="1.用用户变量来做"></a>1.用用户变量来做</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="variable">@m</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@n</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@sum</span> <span class="operator">=</span> <span class="variable">@m</span> <span class="operator">+</span> <span class="variable">@n</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@sum</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="2-用局部变量来做"><a href="#2-用局部变量来做" class="headerlink" title="2.用局部变量来做"></a>2.用局部变量来做</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="十五、存储过程和函数"><a href="#十五、存储过程和函数" class="headerlink" title="十五、存储过程和函数"></a>十五、存储过程和函数</h2><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><h4 id="含义：-1"><a href="#含义：-1" class="headerlink" title="含义："></a>含义：</h4><p>一组经过预先编译的sql语句的集合，理解成批处理语句。</p><h4 id="好处："><a href="#好处：" class="headerlink" title="好处："></a>好处：</h4><ul><li>提高了sql语句的重用性，减少了开发程序员的压力；</li><li>简化操作；</li><li>减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率；</li></ul><h4 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h4><h5 id="1-创建存储过程语法"><a href="#1-创建存储过程语法" class="headerlink" title="1.创建存储过程语法"></a>1.创建存储过程语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程名(参数列表)</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line">存储过程体(一组合法的<span class="keyword">SQL</span>语句)</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></tbody></table></figure><p>==<strong>注意：</strong>==</p><p>1.参数列表包含三部分，分别是参数模式、参数名、参数类型。</p><p><strong>举例：</strong></p><p><code>in stuname varchar(20)</code></p><p><strong>参数模式：</strong></p><ul><li><code>IN</code>：该参数可以作为输入，也就是说该参数需要调用方传入值；</li><li><code>OUT</code>：该参数可以作为输出，也就是该参数可以作为返回值；</li><li><code>INOUT</code>：该参数既可以作为输入，又可以作为输出，也就是该参数既可以传入值，又可以返回值。</li></ul><p>2.如果存储过程体仅仅只有一句话，<code>BEGIN END</code>可以省略。</p><p>3.存储过程体中的每条sql语句的结尾都要加分号。存储过程的结尾可以使用<code>DELIMITER</code>重新设置。</p><p>语法：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER 结束标记</span><br><span class="line"><span class="comment">-- 如 DELIMITER $</span></span><br></pre></td></tr></tbody></table></figure><h5 id="2-调用存储过程语法"><a href="#2-调用存储过程语法" class="headerlink" title="2.调用存储过程语法"></a>2.调用存储过程语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> 存储过程名(实参列表);</span><br></pre></td></tr></tbody></table></figure><h5 id="3-删除存储过程语法"><a href="#3-删除存储过程语法" class="headerlink" title="3.删除存储过程语法"></a>3.删除存储过程语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> 存储过程名</span><br></pre></td></tr></tbody></table></figure><p>举例：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> test_pro3;</span><br></pre></td></tr></tbody></table></figure><h5 id="4-查看存储过程的信息"><a href="#4-查看存储过程的信息" class="headerlink" title="4.查看存储过程的信息"></a>4.查看存储过程的信息</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro3;</span><br></pre></td></tr></tbody></table></figure><h4 id="空参列表"><a href="#空参列表" class="headerlink" title="空参列表"></a>空参列表</h4><h5 id="案例："><a href="#案例：" class="headerlink" title="案例："></a><strong>案例</strong>：</h5><p>插入到<code>admin</code>表中五条记录。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 注意在cmd命令行窗口管理员模式下进行</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp1()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> admin(username, `password`) </span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'join1'</span>, <span class="string">'0000'</span>),</span><br><span class="line">(<span class="string">'lily'</span>, <span class="string">'0000'</span>),</span><br><span class="line">(<span class="string">'tom'</span>, <span class="string">'0000'</span>),</span><br><span class="line">(<span class="string">'zz'</span>, <span class="string">'0000'</span>),</span><br><span class="line">(<span class="string">'dd'</span>, <span class="string">'0000'</span>);</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line"><span class="keyword">CALL</span> myp1() $</span><br></pre></td></tr></tbody></table></figure><h4 id="创建带in模式参数的存储过程"><a href="#创建带in模式参数的存储过程" class="headerlink" title="创建带in模式参数的存储过程"></a>创建带in模式参数的存储过程</h4><h5 id="案例1："><a href="#案例1：" class="headerlink" title="案例1："></a>案例1：</h5><p>创建存储过程实现，根据女神名，查询对应的男神信息。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $#确定$符号为结束标记</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp2(<span class="keyword">IN</span> beautyName <span class="type">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> bo.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.id <span class="operator">=</span> b.boyfriend_id</span><br><span class="line"><span class="keyword">WHERE</span> b.name <span class="operator">=</span> beautyName;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line"><span class="keyword">CALL</span> myp2(<span class="string">'刘岩'</span>) $</span><br></pre></td></tr></tbody></table></figure><h5 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h5><p>创建存储过程实现，用户是否登录成功。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp3(<span class="keyword">IN</span> username <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">IN</span> PASSWORD <span class="type">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">result</span> <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>; #变量声明并初始化</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> <span class="keyword">result</span>#变量赋值</span><br><span class="line"><span class="keyword">FROM</span> admin a</span><br><span class="line"><span class="keyword">WHERE</span> a.username <span class="operator">=</span> username</span><br><span class="line"><span class="keyword">AND</span> a.password <span class="operator">=</span> PASSWORD;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> IF(<span class="keyword">result</span><span class="operator">&gt;</span><span class="number">0</span>, <span class="string">'成功'</span>, <span class="string">'失败'</span>);#变量使用</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">CALL</span> myp3(<span class="string">'john'</span>, <span class="string">'1000'</span>) $</span><br></pre></td></tr></tbody></table></figure><h4 id="创建带out模式的存储过程"><a href="#创建带out模式的存储过程" class="headerlink" title="创建带out模式的存储过程"></a>创建带out模式的存储过程</h4><h5 id="案例1：-1"><a href="#案例1：-1" class="headerlink" title="案例1："></a>案例1：</h5><p>根据女神名，返回对应的男神名。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp4(<span class="keyword">IN</span> beautyName <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">OUT</span> boyName <span class="type">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.boyName <span class="keyword">INTO</span> boyName</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.id <span class="operator">=</span> b.boyfriend_id</span><br><span class="line"><span class="keyword">WHERE</span> b.name <span class="operator">=</span> beautyName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@bName</span>$#声明用户变量</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">CALL</span> myp4(<span class="string">'张飞'</span>,<span class="variable">@bName</span>)$</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@bName</span>$</span><br></pre></td></tr></tbody></table></figure><h5 id="案例2：-1"><a href="#案例2：-1" class="headerlink" title="案例2："></a>案例2：</h5><p>根据女神名，返回对应的男神名和男神魅力值。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp5(<span class="keyword">IN</span> beautyName <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">OUT</span> boyName <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">OUT</span> userCP <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> bo.boyName, bo.userCP <span class="keyword">INTO</span> boyName, userCP</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.id <span class="operator">=</span> b.boyfriend_id</span><br><span class="line"><span class="keyword">WHERE</span> b.name <span class="operator">=</span> beautyName;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">CALL</span> myp5(<span class="string">'张飞'</span>,<span class="variable">@bName</span>, <span class="variable">@usercp</span>) $</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@bName</span>,<span class="variable">@usercp</span>$</span><br></pre></td></tr></tbody></table></figure><h4 id="创建带inout模式的存储过程"><a href="#创建带inout模式的存储过程" class="headerlink" title="创建带inout模式的存储过程"></a>创建带<code>inout</code>模式的存储过程</h4><h5 id="案例：-1"><a href="#案例：-1" class="headerlink" title="案例："></a>案例：</h5><p>传入a和b两个值，最终a和b都翻倍并返回。</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp6(<span class="keyword">INOUT</span> a <span class="type">INT</span>, <span class="keyword">INOUT</span> b <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> a <span class="operator">=</span> a <span class="operator">*</span> <span class="number">2</span>;#这里a和b都是局部变量，设置值时不用加@</span><br><span class="line"><span class="keyword">SET</span> b <span class="operator">=</span> b <span class="operator">*</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用的时候需要先创建两个变量</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@a</span> <span class="operator">=</span> <span class="number">10</span>$</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@b</span> <span class="operator">=</span> <span class="number">20</span>$</span><br><span class="line"><span class="keyword">CALL</span> myp6(<span class="variable">@a</span>, <span class="variable">@b</span>)$</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@a</span>, <span class="variable">@b</span>$</span><br></pre></td></tr></tbody></table></figure><h4 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h4><p><strong>案例1：创建存储过程实现传入用户名和密码，插入到<code>admin</code>表中。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro1(<span class="keyword">IN</span> username <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">IN</span> loginPwd <span class="type">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> admin(admin.username, PASSWORD)</span><br><span class="line"><span class="keyword">VALUES</span>(username,loginPwd);</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">CALL</span> test_pro1(<span class="string">'张飞'</span>,<span class="string">'123123'</span>)$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2：创建存储过程或函数实现传入女神编号，返回女神名称和女神电话。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro2(<span class="keyword">IN</span> id <span class="type">INT</span>, <span class="keyword">OUT</span> gname <span class="type">VARCHAR</span>(<span class="number">20</span>), <span class="keyword">OUT</span> phone <span class="type">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> b.`name`, b.`phone` <span class="keyword">INTO</span> gname, phone</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">WHERE</span> b.`id` <span class="operator">=</span> id;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">CALL</span> test_pro2(<span class="number">1</span>, <span class="variable">@a</span>, <span class="variable">@b</span>)$</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@a</span>, <span class="variable">@b</span>$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3：创建存储过程或函数实现传入两个女神生日，返回大小。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro3(<span class="keyword">IN</span> birth1 DATETIME, <span class="keyword">IN</span> birth2 DATETIME, <span class="keyword">OUT</span> <span class="keyword">result</span> <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> DATEDIFF(birth1,birth2) <span class="keyword">INTO</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_pro3(<span class="string">'1998-1-1'</span>,NOW(),<span class="variable">@result</span>)$</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@result</span> $</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4：创建存储过程或函数实现传入一个日期，格式化成xx年xx月xx日并返回。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro4(<span class="keyword">IN</span> mydate DATETIME,<span class="keyword">OUT</span> strDate <span class="type">VARCHAR</span>(<span class="number">50</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_FORMAT(mydate, <span class="string">'%y年%m月%d日'</span>) <span class="keyword">INTO</span> strDate;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_pro4(NOW(), <span class="variable">@str</span>)$</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@str</span> $</span><br></pre></td></tr></tbody></table></figure><p><strong>案例5：创建存储过程或函数实现传入<code>女神名称</code>，返回：<code>女神 and 男神</code> 格式的字符串</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro5(<span class="keyword">IN</span> beautyName <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="keyword">OUT</span> str <span class="type">VARCHAR</span>(<span class="number">100</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(beautyName, <span class="string">' and '</span>, IFNULL(boyName, <span class="string">'null'</span>)) <span class="keyword">INTO</span> str</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> b.boyfriend_id <span class="operator">=</span> bo.id</span><br><span class="line"><span class="keyword">WHERE</span> b.name <span class="operator">=</span> beautyName;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_pro5(<span class="string">'xx'</span>, <span class="variable">@str</span>) $</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@str</span> $</span><br></pre></td></tr></tbody></table></figure><p><strong>案例6：创建存储过程或函数，根据传入的条目数和起始索引，查询beauty表中的记录。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_pro6(<span class="keyword">IN</span> size <span class="type">INT</span>, <span class="keyword">IN</span> startIndex <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> beauty LIMIT startIndex, size;</span><br><span class="line"><span class="keyword">END</span>$</span><br><span class="line"><span class="keyword">CALL</span> test_pro6(<span class="number">3</span>, <span class="number">5</span>) $</span><br></pre></td></tr></tbody></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="含义：-2"><a href="#含义：-2" class="headerlink" title="含义："></a>含义：</h4><p>与存储过程一样。</p><h4 id="与存储过程的区别："><a href="#与存储过程的区别：" class="headerlink" title="与存储过程的区别："></a>与存储过程的区别：</h4><p>存储过程可以有0个返回，也可以有多个返回， 适合做批量插入、批量更新；而函数必须且只能有1个返回，适合做处理数据后返回一个结果。</p><h4 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法："></a>语法：</h4><h5 id="1-创建函数语法"><a href="#1-创建函数语法" class="headerlink" title="1.创建函数语法"></a>1.创建函数语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> 函数名(参数列表) <span class="keyword">RETURNS</span> 返回类型</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">函数体</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></tbody></table></figure><p>==<strong>注意：</strong>==</p><ul><li><p>参数列表包含两个部分，分别是参数名、参数类型；</p></li><li><p>函数体：肯定有return语句。如果没有return语句放在函数体的后面也不会报错，但不建议。应写成<code>return 值;</code></p></li><li><p>当函数体中只有一句话，则可以省略begin end；</p></li><li><p>使用delimiter语句设置结束标记；</p></li></ul><h5 id="2-调用函数语法"><a href="#2-调用函数语法" class="headerlink" title="2.调用函数语法"></a>2.调用函数语法</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 函数名(实参列表)</span><br></pre></td></tr></tbody></table></figure><h5 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h5><h6 id="1-无参有返回"><a href="#1-无参有返回" class="headerlink" title="1.无参有返回"></a>1.无参有返回</h6><p><strong>案例：返回公司的员工个数。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf1() <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> c <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;#定义局部变量</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> c #为变量赋值</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">RETURN</span> c;#返回值</span><br><span class="line"><span class="keyword">END</span>$</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf1()$</span><br></pre></td></tr></tbody></table></figure><h6 id="2-有参有返回"><a href="#2-有参有返回" class="headerlink" title="2.有参有返回"></a>2.有参有返回</h6><p><strong>案例1：根据员工名，返回他的工资。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf3(empName <span class="type">VARCHAR</span>(<span class="number">20</span>)) <span class="keyword">RETURNS</span> <span class="keyword">DOUBLE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@sal</span> <span class="operator">=</span> <span class="number">0</span>;#定义用户变量</span><br><span class="line"><span class="keyword">SELECT</span> salary <span class="keyword">INTO</span> <span class="variable">@sal</span>#赋值</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="operator">=</span> empName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">RETURN</span> <span class="variable">@sal</span>;#返回值</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf3(<span class="string">'Olson'</span>)$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2：根据部门名，返回该部门的平均工资。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf4(deptName <span class="type">VARCHAR</span>(<span class="number">20</span>)) <span class="keyword">RETURNS</span> <span class="keyword">DOUBLE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> sal <span class="keyword">DOUBLE</span> ;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) <span class="keyword">INTO</span> sal</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.department_id <span class="operator">=</span> d.department_id</span><br><span class="line"><span class="keyword">WHERE</span> d.department_name <span class="operator">=</span> deptName;</span><br><span class="line"><span class="keyword">RETURN</span> sal;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf4(<span class="string">'IT'</span>)$</span><br></pre></td></tr></tbody></table></figure><h5 id="3-查看函数的信息"><a href="#3-查看函数的信息" class="headerlink" title="3.查看函数的信息"></a>3.查看函数的信息</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf4;</span><br></pre></td></tr></tbody></table></figure><h5 id="4-删除函数"><a href="#4-删除函数" class="headerlink" title="4.删除函数"></a>4.删除函数</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> myf4;</span><br></pre></td></tr></tbody></table></figure><h2 id="十六、流程控制结构"><a href="#十六、流程控制结构" class="headerlink" title="十六、流程控制结构"></a>十六、流程控制结构</h2><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><ul><li><p>顺序结构：程序从上往下依次执行。</p></li><li><p>分支结构：程序从两条或多条路径中选择一条去执行。</p></li><li><p>循环结构：程序在满足一定条件的基础上，重复执行一段代码。</p></li></ul><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="1-if函数"><a href="#1-if函数" class="headerlink" title="1.if函数"></a>1.<code>if</code>函数</h4><h5 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h5><p>实现简单的双分支。</p><h5 id="语法：-2"><a href="#语法：-2" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> IF(表达式<span class="number">1</span>,表达式<span class="number">2</span>,表达式<span class="number">3</span>);</span><br><span class="line"><span class="comment">--执行顺序</span></span><br><span class="line">如果表达式<span class="number">1</span>成立，则if函数会返回表达式<span class="number">2</span>的值，否则会返回表达式<span class="number">3</span>的值。</span><br></pre></td></tr></tbody></table></figure><h5 id="应用场合："><a href="#应用场合：" class="headerlink" title="应用场合："></a>应用场合：</h5><p>任何地方。</p><h4 id="2-case结构"><a href="#2-case结构" class="headerlink" title="2.case结构"></a>2.<code>case</code>结构</h4><h5 id="功能：-1"><a href="#功能：-1" class="headerlink" title="功能："></a>功能：</h5><p>情况1：类似于Java中的switch语句，一般用于实现等值判断。</p><p>情况2：类似于Java中的多重if语句，一般用于实现区间判断。</p><h5 id="语法：-3"><a href="#语法：-3" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 情况1</span></span><br><span class="line"><span class="keyword">CASE</span> 变量<span class="operator">|</span>表达式<span class="operator">|</span>字段</span><br><span class="line"><span class="keyword">WHEN</span> 要判断的值 <span class="keyword">THEN</span> 返回的值<span class="number">1</span></span><br><span class="line"><span class="keyword">WHEN</span> 要判断的值 <span class="keyword">THEN</span> 返回的值<span class="number">2</span></span><br><span class="line"><span class="keyword">WHEN</span> 要判断的值 <span class="keyword">THEN</span> 返回的值<span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">ELSE</span> 要返回的值n</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">-- 情况2</span></span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> 要判断的条件<span class="number">1</span> <span class="keyword">THEN</span> 返回的值<span class="number">1</span></span><br><span class="line"><span class="keyword">WHEN</span> 要判断的条件<span class="number">2</span> <span class="keyword">THEN</span> 返回的值<span class="number">2</span></span><br><span class="line"><span class="keyword">WHEN</span> 要判断的条件<span class="number">3</span> <span class="keyword">THEN</span> 返回的值<span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">ELSE</span> 要返回的值n</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></tbody></table></figure><h5 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h5><ul><li>可以作为表达式，嵌套在其他语句中使用，可以放在任何地方，begin end中或begin end外面；也可以作为独立的语句去使用，但这样只能放在begin end中。</li><li>如果when中值满足或者条件成立，则执行对应的then后面的语句，并且结束case；如果都不满足，则执行else中的语句或值。</li><li>else可以省略，如果else省略了，并且所有when条件都不满足，则返回NULL。</li></ul><h5 id="案例：-2"><a href="#案例：-2" class="headerlink" title="案例："></a>案例：</h5><p>创建一个存储过程，根据传入的成绩，来去显示等级，比如传入的成绩在[90-100]中间，则显示A；[80-90)之间，则显示B；[60-80)之间，显示C；否则，显示D；</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_case(<span class="keyword">IN</span> score <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> score<span class="operator">&gt;=</span><span class="number">90</span> <span class="keyword">AND</span> score<span class="operator">&lt;=</span><span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">SELECT</span> <span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">WHEN</span> score<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">THEN</span> <span class="keyword">SELECT</span> <span class="string">'B'</span>;</span><br><span class="line"><span class="keyword">WHEN</span> score<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">THEN</span> <span class="keyword">SELECT</span> <span class="string">'C'</span>;</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">SELECT</span> <span class="string">'D'</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_case(<span class="number">88</span>)$</span><br></pre></td></tr></tbody></table></figure><h4 id="3-if结构"><a href="#3-if结构" class="headerlink" title="3.if结构"></a>3.<code>if</code>结构</h4><h5 id="功能：-2"><a href="#功能：-2" class="headerlink" title="功能："></a>功能：</h5><p>实现多重分支。</p><h5 id="语法：-4"><a href="#语法：-4" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IF 条件<span class="number">1</span> <span class="keyword">THEN</span> 语句<span class="number">1</span>;</span><br><span class="line">ELSEIF 条件<span class="number">2</span> <span class="keyword">THEN</span> 语句<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line">【<span class="keyword">ELSE</span> 语句n;】<span class="comment">-- 这一句可以省略</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br></pre></td></tr></tbody></table></figure><h5 id="应用场合：-1"><a href="#应用场合：-1" class="headerlink" title="应用场合："></a>应用场合：</h5><p>只能应用在begin end中。</p><h5 id="案例：-3"><a href="#案例：-3" class="headerlink" title="案例："></a>案例：</h5><p>创建一个存储过程，根据传入的成绩，来去显示等级，比如传入的成绩在[90-100]中间，则返回A；[80-90)之间，则返回B；[60-80)之间，返回C；否则，返回D；</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> test_if(score <span class="type">INT</span>)<span class="keyword">RETURNS</span> <span class="type">CHAR</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">IF score <span class="operator">&gt;=</span> <span class="number">90</span> <span class="keyword">AND</span> score <span class="operator">&lt;=</span> <span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">RETURN</span> <span class="string">'A'</span>;</span><br><span class="line">ELSEIF score <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">THEN</span> <span class="keyword">RETURN</span> <span class="string">'B'</span>;</span><br><span class="line">ELSEIF score <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">THEN</span> <span class="keyword">RETURN</span> <span class="string">'C'</span>;</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">RETURN</span> <span class="string">'D'</span>;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> test_if(<span class="number">88</span>)$</span><br></pre></td></tr></tbody></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="分类：-1"><a href="#分类：-1" class="headerlink" title="分类："></a>分类：</h4><ul><li>while</li><li>loop</li><li>repeat</li></ul><p><strong>循环控制：</strong></p><p>iterate类似于continue，继续，结束本次循环，继续下一次；</p><p>leave类似于break，跳出，结束当前所在的循环。</p><h4 id="语法：-5"><a href="#语法：-5" class="headerlink" title="语法："></a>语法：</h4><h5 id="1-while"><a href="#1-while" class="headerlink" title="1.while"></a>1.<code>while</code></h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">【标签:】WHILE 循环条件  DO</span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">END</span> WHILE 【标签】;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果想要加入循环控制，则需要写标签。</span></span><br></pre></td></tr></tbody></table></figure><h5 id="2-loop"><a href="#2-loop" class="headerlink" title="2.loop"></a>2.<code>loop</code></h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">【标签:】loop</span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">end</span> loop 【标签】;</span><br><span class="line"><span class="comment">-- 如果想要加入循环控制，则需要写标签。</span></span><br><span class="line"><span class="comment">-- 可以用来模拟简单的死循环</span></span><br></pre></td></tr></tbody></table></figure><h5 id="3-repeat"><a href="#3-repeat" class="headerlink" title="3.repeat"></a>3.<code>repeat</code></h5><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">【标签:】repeat</span><br><span class="line">循环体;</span><br><span class="line">until 结束循环的条件</span><br><span class="line"><span class="keyword">end</span> repeat【标签】;</span><br><span class="line"><span class="comment">-- 如果想要加入循环控制，则需要写标签。</span></span><br></pre></td></tr></tbody></table></figure><h4 id="案例演示-1"><a href="#案例演示-1" class="headerlink" title="案例演示"></a>案例演示</h4><p><strong>案例1：批量插入，根据次数插入到<code>admin</code>表中多条记录。(不添加循环控制语句)</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> pro_while1(<span class="keyword">IN</span> insertCount <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">WHILE i <span class="operator">&lt;=</span> insertCount DO</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> admin(username,PASSWORD) <span class="keyword">VALUES</span>(CONCAT(<span class="string">'hh'</span>,i),<span class="string">'adb'</span>);</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> pro_while1(<span class="number">3</span>)$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例2：批量插入，根据次数插入到<code>admin</code>表中多条记录，如果次数&gt;20则停止。(使用循环控制语句)</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> pro_while2(<span class="keyword">IN</span> insertCount <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">a:WHILE i <span class="operator">&lt;=</span> insertCount DO</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> admin(username,PASSWORD) <span class="keyword">VALUES</span>(CONCAT(<span class="string">'hh'</span>,i),<span class="string">'adb'</span>);</span><br><span class="line">IF i <span class="operator">&gt;=</span> <span class="number">20</span> <span class="keyword">THEN</span> LEAVE a;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE a;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> pro_while2(<span class="number">32</span>)$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例3：批量插入，根据次数插入到<code>admin</code>表中多条记录，直插入偶数次。(添加iterate语句)</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> pro_while3(<span class="keyword">IN</span> insertCount <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">a:WHILE i <span class="operator">&lt;=</span> insertCount DO</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">IF <span class="built_in">MOD</span>(i,<span class="number">2</span>) <span class="operator">!=</span> <span class="number">0</span> <span class="keyword">THEN</span> ITERATE a;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> admin(username,PASSWORD) <span class="keyword">VALUES</span>(CONCAT(<span class="string">'hh'</span>,i),<span class="string">'adb'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> WHILE a;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> pro_while3(<span class="number">32</span>)$</span><br></pre></td></tr></tbody></table></figure><p><strong>案例4：已知表<code>stringcontent</code>，其中字段<code>id 自增长</code>、<code>content varchar(20)</code>，向该表插入指定个数的，随机的字符串。</strong></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stringcontent(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">content <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据事务</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_randstr_insert(<span class="keyword">IN</span> insertCount <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;#定义一个循环变量i,表示插入次数</span><br><span class="line"><span class="keyword">DECLARE</span> str <span class="type">VARCHAR</span>(<span class="number">26</span>) <span class="keyword">DEFAULT</span> <span class="string">'abcdefghijklmnopqrstuvwxyz'</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> startIndex <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;#代表起始索引长度</span><br><span class="line"><span class="keyword">DECLARE</span> len <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;#代表截取的字符的长度</span><br><span class="line">WHILE i <span class="operator">&lt;=</span> insertCount DO</span><br><span class="line"><span class="keyword">SET</span> len <span class="operator">=</span> <span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span>(<span class="number">20</span><span class="operator">-</span>startIndex<span class="operator">+</span><span class="number">1</span>)<span class="operator">+</span><span class="number">1</span>);#产生一个随机的整数，代表截取长度，<span class="number">1</span><span class="operator">-</span> (<span class="number">26</span><span class="operator">-</span>startIndex<span class="operator">+</span><span class="number">1</span>)</span><br><span class="line"><span class="keyword">SET</span> startIndex <span class="operator">=</span> <span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">26</span><span class="operator">+</span><span class="number">1</span>);#产生一个随机的整数，代表起始索引<span class="number">1</span><span class="number">-26</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stringcontent(content)<span class="keyword">VALUES</span>(SUBSTR(str,startIndex,len));</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;#循环变量更新</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_randstr_insert(<span class="number">14</span>)$</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySql基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++核心编程-面对对象</title>
      <link href="/2024/03/04/c-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B-%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1/"/>
      <url>/2024/03/04/c-%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B-%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> c++合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++基础入门</title>
      <link href="/2024/03/04/c-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
      <url>/2024/03/04/c-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h1><h2 id="1-C-初识"><a href="#1-C-初识" class="headerlink" title="1 C++初识"></a>1 C++初识</h2><h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1  第一个C++程序"></a>1.1  第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"Hello world"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==</li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，==对该段代码做整体说明==</li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><p><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code></p><ul><li>==通常在文件上方定义==，表示一个常量</li></ul></li><li><p><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code></p><ul><li>==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"一周里总共有 "</span> &lt;&lt; day &lt;&lt; <span class="string">" 天"</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const修饰变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"一年里总共有 "</span> &lt;&lt; month &lt;&lt; <span class="string">" 个月份"</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>template</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td><td></td></tr></tbody></table><p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p><h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th>取值范围</th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int(整型)</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table><h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以==统计数据类型所占内存大小==</p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"short 类型所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"int 类型所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"long 类型所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"long long 类型所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>整型结论</strong>：==short &lt; int &lt;= long &lt;= long long==</p></blockquote><h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; d1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"float  sizeof = "</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"double sizeof = "</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">cout &lt;&lt; <span class="string">"f2 = "</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">"f3 = "</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = 'a';</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p></blockquote><blockquote><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用==1个字节==。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ch = <span class="string">'a'</span>;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ch = "abcde"; //错误，不可以用双引号</span></span><br><span class="line"><span class="comment">//ch = 'abcde'; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>ASCII码表格：</p><table><thead><tr><th><strong>ASCII</strong>值</th><th><strong>控制字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>`</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些==不能显示出来的ASCII字符==</p><p>现阶段我们常用的转义字符有：<code> \n  \\  \t</code></p><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>警报</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td><strong>010</strong></td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td><strong>\t</strong></td><td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td><strong>009</strong></td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td><strong>\\</strong></td><td><strong>代表一个反斜线字符”"</strong></td><td><strong>092</strong></td></tr><tr><td>'</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>"</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td><td>3位16进制</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"\\"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"\tHello"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"\n"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><p><strong>C风格字符串</strong>： <code>char 变量名[] = "字符串值"</code></p><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">"hello world"</span>;</span><br><span class="line">cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = "字符串值"</code></p><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">string str = <span class="string">"hello world"</span>;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>注意：C++风格字符串，需要加入头文件==#include&lt;string&gt;==</p></blockquote><h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  — 真（本质是1）</li><li>false — 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"size of bool = "</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量 </code></p><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入整型变量："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入浮点型变量："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> ch = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入字符型变量："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入字符串型变量："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔类型输入</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入布尔型变量："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p><strong>作用：</strong>用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><table><thead><tr><th><strong>运算符类型</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table><h3 id="3-1-算术运算符"><a href="#3-1-算术运算符" class="headerlink" title="3.1 算术运算符"></a>3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算 </p><p>算术运算符包括以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10 + 5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10 - 5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10 * 5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10 / 5</td><td>2</td></tr><tr><td>%</td><td>取模(取余)</td><td>10 % 3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2; b=++a;</td><td>a=3; b=3;</td></tr><tr><td>++</td><td>后置递增</td><td>a=2; b=a++;</td><td>a=3; b=2;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2; b=–a;</td><td>a=1; b=1;</td></tr><tr><td>–</td><td>后置递减</td><td>a=2; b=a–;</td><td>a=1; b=2;</td></tr></tbody></table><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 / b1 &lt;&lt; endl;  <span class="comment">//两个整数相除结果依然是整数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a2 / b2 &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数可以相除</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">0.5</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">0.25</span>;</span><br><span class="line">cout &lt;&lt; d1 / d2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：在除法运算中，除数不能为0</p></blockquote><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取模</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="number">10</span> % <span class="number">3</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a2 % b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数不可以取模</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; d1 % d2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：只有整型变量可以进行取模运算</p></blockquote><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递增</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a++; <span class="comment">//等价于a = a + 1</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置递增</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">++b;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//区别</span></span><br><span class="line"><span class="comment">//前置递增先对变量进行++，再计算表达式</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增先计算表达式，后对变量进行++</span></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p></blockquote><h3 id="3-2-赋值运算符"><a href="#3-2-赋值运算符" class="headerlink" title="3.2 赋值运算符"></a>3.2 赋值运算符</h3><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2; b=3;</td><td>a=2; b=3;</td></tr><tr><td>+=</td><td>加等于</td><td>a=0; a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5; a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2; a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4; a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3; a%2;</td><td>a=1;</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值运算符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a += <span class="number">2</span>; <span class="comment">// a = a + 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a -= <span class="number">2</span>; <span class="comment">// a = a - 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a *= <span class="number">2</span>; <span class="comment">// a = a * 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a /= <span class="number">2</span>;  <span class="comment">// a = a / 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// %=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a %= <span class="number">2</span>;  <span class="comment">// a = a % 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3-3-比较运算符"><a href="#3-3-比较运算符" class="headerlink" title="3.3 比较运算符"></a>3.3 比较运算符</h3><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4 == 3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4 != 3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4 &lt; 3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4 &gt; 3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4 &lt;= 3</td><td>0</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4 &gt;= 1</td><td>1</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a == b) &lt;&lt; endl; <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a != b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt; b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt; b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。== </p></blockquote><h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；  如果a为真，则!a为假。</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>如果a和b都为真，则结果为真，否则为假。</td></tr><tr><td>||</td><td>或</td><td>a || b</td><td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table><p><strong>示例1：</strong>逻辑非</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 非</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !a &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !!a &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结： 真变假，假变真</p></blockquote><p><strong>示例2：</strong>逻辑与</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 与</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：逻辑==与==运算符总结： ==同真为真，其余为假==</p></blockquote><p><strong>示例3：</strong>逻辑或</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 或</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>逻辑==或==运算符总结： ==同假为假，其余为真==</p></blockquote><h2 id="4-程序流程结构"><a href="#4-程序流程结构" class="headerlink" title="4 程序流程结构"></a>4 程序流程结构</h2><p>C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==</p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h3 id="4-1-选择结构"><a href="#4-1-选择结构" class="headerlink" title="4.1 选择结构"></a>4.1 选择结构</h3><h4 id="4-1-1-if语句"><a href="#4-1-1-if语句" class="headerlink" title="4.1.1 if语句"></a>4.1.1 if语句</h4><p><strong>作用：</strong>执行满足条件的语句</p><p>if语句的三种形式</p><ul><li><p>单行格式if语句</p></li><li><p>多行格式if语句</p></li><li><p>多条件的if语句</p></li></ul><ol><li><p>单行格式if语句：<code>if(条件){ 条件满足执行的语句 }</code></p><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择结构-单行if语句</span></span><br><span class="line"><span class="comment">//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入一个分数："</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"您输入的分数为： "</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//if语句</span></span><br><span class="line"><span class="comment">//注意事项，在if判断语句后面，不要加分号</span></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了一本大学！！！"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol start="2"><li>多行格式if语句：<code>if(条件){ 条件满足执行的语句 }else{ 条件不满足执行的语句 };</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"请输入考试分数："</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了一本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我未考上一本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>多条件的if语句：<code>if(条件1){ 条件1满足执行的语句 }else if(条件2){条件2满足执行的语句}... else{ 都不满足执行的语句}</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"请输入考试分数："</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了一本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了二本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了三本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我未考上本科"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"请输入考试分数："</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了一本大学"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了北大"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了清华"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了人大"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了二本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我考上了三本大学"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"我未考上本科"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>练习案例：</strong> 三只小猪称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？</p><h4 id="4-1-2-三目运算符"><a href="#4-1-2-三目运算符" class="headerlink" title="4.1.2 三目运算符"></a>4.1.2 三目运算符</h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p><p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p><p><strong>解释：</strong></p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c = a &gt; b ? a : b;</span><br><span class="line">cout &lt;&lt; <span class="string">"c = "</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++中三目运算符返回的是变量,可以继续赋值</span></span><br><span class="line"></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"b = "</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"c = "</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p></blockquote><h4 id="4-1-3-switch语句"><a href="#4-1-3-switch语句" class="headerlink" title="4.1.3 switch语句"></a>4.1.3 switch语句</h4><p><strong>作用：</strong>执行多条件分支语句</p><p><strong>语法：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line"></span><br><span class="line">{</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//请给电影评分 </span></span><br><span class="line"><span class="comment">//10 ~ 9   经典   </span></span><br><span class="line"><span class="comment">// 8 ~ 7   非常好</span></span><br><span class="line"><span class="comment">// 6 ~ 5   一般</span></span><br><span class="line"><span class="comment">// 5分以下 烂片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"请给电影打分"</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (score)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"经典"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"非常好"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"一般"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"烂片"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意1：switch语句中表达式类型只能是整型或者字符型</p></blockquote><blockquote><p>注意2：case里如果没有break，那么程序会一直向下执行</p></blockquote><blockquote><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p></blockquote><h3 id="4-2-循环结构"><a href="#4-2-循环结构" class="headerlink" title="4.2 循环结构"></a>4.2 循环结构</h3><h4 id="4-2-1-while循环语句"><a href="#4-2-1-while循环语句" class="headerlink" title="4.2.1 while循环语句"></a>4.2.1 while循环语句</h4><p><strong>作用：</strong>满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> while(循环条件){ 循环语句 }</code></p><p><strong>解释：</strong>==只要循环条件的结果为真，就执行循环语句==</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"num = "</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p></blockquote><p><strong>while循环练习案例：</strong>==猜数字==</p><p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p><h4 id="4-2-2-do…while循环语句"><a href="#4-2-2-do…while循环语句" class="headerlink" title="4.2.2 do…while循环语句"></a>4.2.2 do…while循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong> <code>do{ 循环语句 } while(循环条件);</code></p><p><strong>注意：</strong>与while的区别在于==do…while会先执行一次循环语句==，再判断循环条件</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line"></span><br><span class="line">} <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>练习案例：水仙花数</strong></p><p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p><p>例如：1^3 + 5^3+ 3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><h4 id="4-2-3-for循环语句"><a href="#4-2-3-for循环语句" class="headerlink" title="4.2.3 for循环语句"></a>4.2.3 for循环语句</h4><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong><code> for(起始表达式;条件表达式;末尾循环体) { 循环语句; }</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>详解：</strong></p><blockquote><p>注意：for循环中的表达式，要用分号进行分隔</p></blockquote><blockquote><p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p></blockquote><p><strong>练习案例：敲桌子</strong></p><p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p><h4 id="4-2-4-嵌套循环"><a href="#4-2-4-嵌套循环" class="headerlink" title="4.2.4 嵌套循环"></a>4.2.4 嵌套循环</h4><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p><p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//外层循环执行1次，内层循环执行1轮</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"*"</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>练习案例：</strong>乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><h3 id="4-3-跳转语句"><a href="#4-3-跳转语句" class="headerlink" title="4.3 跳转语句"></a>4.3 跳转语句</h3><h4 id="4-3-1-break语句"><a href="#4-3-1-break语句" class="headerlink" title="4.3.1 break语句"></a>4.3.1 break语句</h4><p><strong>作用:</strong> 用于跳出==选择结构==或者==循环结构==</p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现在嵌套循环中，跳出最近的内层循环语句</li></ul><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">//1、在switch 语句中使用break</span></span><br><span class="line">cout &lt;&lt; <span class="string">"请选择您挑战副本的难度："</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"1、普通"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"2、中等"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"3、困难"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (num)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"您选择的是普通难度"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"您选择的是中等难度"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">"您选择的是困难难度"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">//2、在循环语句中用break</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出循环语句</span></span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">//在嵌套循环语句中使用break，退出内层循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; <span class="string">"*"</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="4-3-2-continue语句"><a href="#4-3-2-continue语句" class="headerlink" title="4.3.2 continue语句"></a>4.3.2 continue语句</h4><p><strong>作用：</strong>在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：continue并没有使整个循环终止，而break会跳出循环</p></blockquote><h4 id="4-3-3-goto语句"><a href="#4-3-3-goto语句" class="headerlink" title="4.3.3 goto语句"></a>4.3.3 goto语句</h4><p><strong>作用：</strong>可以无条件跳转语句</p><p><strong>语法：</strong> <code>goto 标记;</code></p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"1"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> FLAG;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"2"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"3"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"4"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">FLAG:</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"5"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p></blockquote><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5 数组"></a>5 数组</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p><p><strong>特点1：</strong>数组中的每个==数据元素都是相同的数据类型==</p><p><strong>特点2：</strong>数组是由==连续的内存==位置组成的</p><h3 id="5-2-一维数组"><a href="#5-2-一维数组" class="headerlink" title="5.2 一维数组"></a>5.2 一维数组</h3><h4 id="5-2-1-一维数组定义方式"><a href="#5-2-1-一维数组定义方式" class="headerlink" title="5.2.1 一维数组定义方式"></a>5.2.1 一维数组定义方式</h4><p>一维数组定义的三种方式：</p><ol><li><code>数据类型  数组名[ 数组长度 ];</code></li><li><code>数据类型  数组名[ 数组长度 ] = { 值1，值2 ...};</code></li><li><code>数据类型  数组名[ ] = { 值1，值2 ...};</code></li></ol><p>示例</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式1</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数];</span></span><br><span class="line"><span class="type">int</span> score[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标赋值</span></span><br><span class="line">score[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">score[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">score[<span class="number">2</span>] = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标输出</span></span><br><span class="line">cout &lt;&lt; score[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种定义方式</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数] =  {值1，值2 ，值3 ...};</span></span><br><span class="line"><span class="comment">//如果{}内不足10个数据，剩余数据用0补全</span></span><br><span class="line"><span class="type">int</span> score2[<span class="number">10</span>] = { <span class="number">100</span>, <span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> };</span><br><span class="line"></span><br><span class="line"><span class="comment">//逐个输出</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[0] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[1] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个一个输出太麻烦，因此可以利用循环进行输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; score2[i] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[] =  {值1，值2 ，值3 ...};</span></span><br><span class="line"><span class="type">int</span> score3[] = { <span class="number">100</span>,<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> };</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; score3[i] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名</p></blockquote><blockquote><p>总结2：数组中下标是从0开始索引</p></blockquote><h4 id="5-2-2-一维数组数组名"><a href="#5-2-2-一维数组数组名" class="headerlink" title="5.2.2 一维数组数组名"></a>5.2.2 一维数组数组名</h4><p>一维数组名称的<strong>用途</strong>：</p><ol><li>可以统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组名用途</span></span><br><span class="line"><span class="comment">//1、可以获取整个数组占用内存空间大小</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = { <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> };</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"整个数组所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"每个元素所占内存空间为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"数组的元素个数为： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、可以通过数组名获取到数组首地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">"数组首地址为： "</span> &lt;&lt; (<span class="type">int</span>)arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"数组中第一个元素地址为： "</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"数组中第二个元素地址为： "</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//arr = 100; 错误，数组名是常量，因此不可以赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：数组名是常量，不可以赋值</p></blockquote><blockquote><p>总结1：直接打印数组名，可以查看数组所占内存的首地址</p></blockquote><blockquote><p>总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小</p></blockquote><p><strong>练习案例1</strong>：五只小猪称体重</p><p><strong>案例描述：</strong></p><p>在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};</p><p>找出并打印最重的小猪体重。</p><p><strong>练习案例2：</strong>数组元素逆置</p><p><strong>案例描述：</strong>请声明一个5个元素的数组，并且将元素逆置.</p><p>(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);</p><h4 id="5-2-3-冒泡排序"><a href="#5-2-3-冒泡排序" class="headerlink" title="5.2.3 冒泡排序"></a>5.2.3 冒泡排序</h4><p><strong>作用：</strong> 最常用的排序算法，对数组内元素进行排序</p><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。</li><li>重复以上的步骤，每次比较次数-1，直到不需要比较</li></ol><p><strong>示例：</strong> 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">9</span>] = { <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> };</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span> - <span class="number">1</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5-3-二维数组"><a href="#5-3-二维数组" class="headerlink" title="5.3 二维数组"></a>5.3 二维数组</h3><p>二维数组就是在一维数组上，多加一个维度。</p><h4 id="5-3-1-二维数组定义方式"><a href="#5-3-1-二维数组定义方式" class="headerlink" title="5.3.1 二维数组定义方式"></a>5.3.1 二维数组定义方式</h4><p>二维数组定义的四种方式：</p><ol><li><code>数据类型  数组名[ 行数 ][ 列数 ];</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = { {数据1，数据2 } ，{数据3，数据4 } };</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = { 数据1，数据2，数据3，数据4};</code></li><li><code> 数据类型  数组名[  ][ 列数 ] = { 数据1，数据2，数据3，数据4};</code></li></ol><blockquote><p>建议：以上4种定义方式，利用==第二种更加直观，提高代码的可读性==</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式1  </span></span><br><span class="line"><span class="comment">//数组类型 数组名 [行数][列数]</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = { {数据1，数据2 } ，{数据3，数据4 } };</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">{</span><br><span class="line">{<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>},</span><br><span class="line">{<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = { 数据1，数据2 ,数据3，数据4  };</span></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = { <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> }; </span><br><span class="line"></span><br><span class="line"><span class="comment">//方式4 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[][列数] = { 数据1，数据2 ,数据3，数据4  };</span></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] = { <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> };</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：在定义二维数组时，如果初始化了数据，可以省略行数</p></blockquote><h4 id="5-3-2-二维数组数组名"><a href="#5-3-2-二维数组数组名" class="headerlink" title="5.3.2 二维数组数组名"></a>5.3.2 二维数组数组名</h4><ul><li>查看二维数组所占内存空间</li><li>获取二维数组首地址</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组数组名</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">{</span><br><span class="line">{<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>},</span><br><span class="line">{<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组大小： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组一行大小： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组元素大小： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组行数： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组列数： "</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组首地址："</span> &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组第一行地址："</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组第二行地址："</span> &lt;&lt; arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组第一个元素地址："</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"二维数组第二个元素地址："</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结1：二维数组名就是这个数组的首地址</p></blockquote><blockquote><p>总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小</p></blockquote><h4 id="5-3-3-二维数组应用案例"><a href="#5-3-3-二维数组应用案例" class="headerlink" title="5.3.3 二维数组应用案例"></a><strong>5.3.3 二维数组应用案例</strong></h4><p><strong>考试成绩统计：</strong></p><p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，<strong>请分别输出三名同学的总成绩</strong></p><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table><p><strong>参考答案：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">{</span><br><span class="line">{<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>},</span><br><span class="line">{<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>},</span><br><span class="line">{<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>},</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">string names[<span class="number">3</span>] = { <span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span> };</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">{</span><br><span class="line">sum += scores[i][j];</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; names[i] &lt;&lt; <span class="string">"同学总成绩为： "</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6 函数"></a>6 函数</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码</p><p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p><h3 id="6-2-函数的定义"><a href="#6-2-函数的定义" class="headerlink" title="6.2 函数的定义"></a>6.2 函数的定义</h3><p>函数的定义一般主要有5个步骤：</p><p>1、返回值类型 </p><p>2、函数名</p><p>3、参数表列</p><p>4、函数体语句 </p><p>5、return 表达式</p><p><strong>语法：</strong> </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">       函数体语句</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span>表达式</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>返回值类型 ：一个函数可以返回一个值。在函数定义中</li><li>函数名：给函数起个名称</li><li>参数列表：使用该函数时，传入的数据</li><li>函数体语句：花括号内的代码，函数内需要执行的语句</li><li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li></ul><p><strong>示例：</strong>定义一个加法函数，实现两个数相加</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6-3-函数的调用"><a href="#6-3-函数的调用" class="headerlink" title="6.3 函数的调用"></a>6.3 函数的调用</h3><p><strong>功能：</strong>使用定义好的函数</p><p><strong>语法：</strong><code> 函数名（参数）</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> <span class="comment">//定义中的num1,num2称为形式参数，简称形参</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//调用add函数</span></span><br><span class="line"><span class="type">int</span> sum = <span class="built_in">add</span>(a, b);<span class="comment">//调用时的a，b称为实际参数，简称实参</span></span><br><span class="line">cout &lt;&lt; <span class="string">"sum = "</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">sum = <span class="built_in">add</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">"sum = "</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参</p></blockquote><h3 id="6-4-值传递"><a href="#6-4-值传递" class="headerlink" title="6.4 值传递"></a>6.4 值传递</h3><ul><li>所谓值传递，就是函数调用时实参将数值传入给形参</li><li>值传递时，==如果形参发生，并不会影响实参==</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cout &lt;&lt; <span class="string">"交换前："</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"num1 = "</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"num2 = "</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> temp = num1;</span><br><span class="line">num1 = num2;</span><br><span class="line">num2 = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"交换后："</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"num1 = "</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"num2 = "</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return ; 当函数声明时候，不需要返回值，可以不写return</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"mian中的 a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"mian中的 b = "</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结： 值传递时，形参是修饰不了实参的</p></blockquote><h3 id="6-5-函数的常见样式"><a href="#6-5-函数的常见样式" class="headerlink" title="6.5 函数的常见样式"></a><strong>6.5 函数的常见样式</strong></h3><p>常见的函数样式有4种</p><ol><li>无参无返</li><li>有参无返</li><li>无参有返</li><li>有参有返</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数常见样式</span></span><br><span class="line"><span class="comment">//1、 无参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//void a = 10; //无类型不可以创建变量,原因无法分配内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">"this is test01"</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//test01(); 函数调用</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、 有参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cout &lt;&lt; <span class="string">"this is test02"</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cout &lt;&lt; <span class="string">"this is test03 "</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cout &lt;&lt; <span class="string">"this is test04 "</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> sum = a + b;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6-6-函数的声明"><a href="#6-6-函数的声明" class="headerlink" title="6.6 函数的声明"></a>6.6 函数的声明</h3><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><ul><li>函数的<strong>声明可以多次</strong>，但是函数的<strong>定义只能有一次</strong></li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明可以多次，定义只能一次</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a, b) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6-7-函数的分文件编写"><a href="#6-7-函数的分文件编写" class="headerlink" title="6.7 函数的分文件编写"></a>6.7 函数的分文件编写</h3><p><strong>作用：</strong>让代码结构更加清晰</p><p>函数分文件编写一般有4个步骤</p><ol><li>创建后缀名为.h的头文件  </li><li>创建后缀名为.cpp的源文件</li><li>在头文件中写函数的声明</li><li>在源文件中写函数的定义</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.h文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.cpp文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"swap.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"b = "</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"swap.h"</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="7-指针"><a href="#7-指针" class="headerlink" title="7 指针"></a>7 指针</h2><h3 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h3><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p><ul><li>内存编号是从0开始记录的，一般用十六进制数字表示</li><li>可以利用指针变量保存地址</li></ul><h3 id="7-2-指针变量的定义和使用"><a href="#7-2-指针变量的定义和使用" class="headerlink" title="7.2 指针变量的定义和使用"></a>7.2 指针变量的定义和使用</h3><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、指针的定义</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//定义整型变量a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针定义语法： 数据类型 * 变量名 ;</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量赋值</span></span><br><span class="line">p = &amp;a; <span class="comment">//指针指向变量a的地址</span></span><br><span class="line">cout &lt;&lt; &amp;a &lt;&lt; endl; <span class="comment">//打印数据a的地址</span></span><br><span class="line">cout &lt;&lt; p &lt;&lt; endl;  <span class="comment">//打印指针变量p</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、指针的使用</span></span><br><span class="line"><span class="comment">//通过*操作指针变量指向的内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">"*p = "</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>指针变量和普通变量的区别</p><ul><li>普通变量存放的是数据,指针变量存放的是地址</li><li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li></ul><blockquote><p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p></blockquote><blockquote><p>总结2：利用指针可以记录地址</p></blockquote><blockquote><p>总结3：对指针变量解引用，可以操作指针指向的内存</p></blockquote><h3 id="7-3-指针所占内存空间"><a href="#7-3-指针所占内存空间" class="headerlink" title="7.3 指针所占内存空间"></a>7.3 指针所占内存空间</h3><p>提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line">p = &amp;a; <span class="comment">//指针指向数据a的地址</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl; <span class="comment">//* 解引用</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：所有指针类型在32位操作系统下是4个字节</p></blockquote><h3 id="7-4-空指针和野指针"><a href="#7-4-空指针和野指针" class="headerlink" title="7.4 空指针和野指针"></a>7.4 空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p><p><strong>用途：</strong>初始化指针变量</p><p><strong>注意：</strong>空指针指向的内存是不可以访问的</p><p><strong>示例1：空指针</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line"><span class="type">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问空指针报错 </span></span><br><span class="line"><span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>野指针</strong>：指针变量指向非法的内存空间</p><p><strong>示例2：野指针</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line"><span class="type">int</span> * p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问野指针报错 </span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</p></blockquote><h3 id="7-5-const修饰指针"><a href="#7-5-const修饰指针" class="headerlink" title="7.5 const修饰指针"></a>7.5 const修饰指针</h3><p>const修饰指针有三种情况</p><ol><li>const修饰指针   — 常量指针</li><li>const修饰常量   — 指针常量</li><li>const即修饰指针，又修饰常量</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * p1 = &amp;a; </span><br><span class="line">p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line"><span class="comment">//*p1 = 100;  报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line"><span class="type">int</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line"><span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * <span class="type">const</span> p3 = &amp;a;</span><br><span class="line"><span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line"><span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量</p></blockquote><h3 id="7-6-指针和数组"><a href="#7-6-指针和数组" class="headerlink" title="7.6 指针和数组"></a>7.6 指针和数组</h3><p><strong>作用：</strong>利用指针访问数组中元素</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[] = { <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> };</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p = arr;  <span class="comment">//指向数组的指针</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"第一个元素： "</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">"指针访问第一个元素： "</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">p++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="7-7-指针和函数"><a href="#7-7-指针和函数" class="headerlink" title="7.7 指针和函数"></a>7.7 指针和函数</h3><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap1</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b; </span><br><span class="line">b = temp;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap2</span><span class="params">(<span class="type">int</span> * p1, <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="type">int</span> temp = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap1</span>(a, b); <span class="comment">// 值传递不会改变实参</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">swap2</span>(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"b = "</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递</p></blockquote><h3 id="7-8-指针、数组、函数"><a href="#7-8-指针、数组、函数" class="headerlink" title="7.8 指针、数组、函数"></a>7.8 指针、数组、函数</h3><p><strong>案例描述：</strong>封装一个函数，利用冒泡排序，实现对整型数组的升序排序</p><p>例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span> * arr, <span class="type">int</span> len)</span>  <span class="comment">//int * arr 也可以写为int arr[]</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = { <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> };</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针</p></blockquote><h2 id="8-结构体"><a href="#8-结构体" class="headerlink" title="8 结构体"></a>8 结构体</h2><h3 id="8-1-结构体基本概念"><a href="#8-1-结构体基本概念" class="headerlink" title="8.1 结构体基本概念"></a>8.1 结构体基本概念</h3><p>结构体属于用户==自定义的数据类型==，允许用户存储不同的数据类型</p><h3 id="8-2-结构体定义和使用"><a href="#8-2-结构体定义和使用" class="headerlink" title="8.2 结构体定义和使用"></a>8.2 结构体定义和使用</h3><p><strong>语法：</strong><code>struct 结构体名 { 结构体成员列表 }；</code></p><p>通过结构体创建变量的方式有三种：</p><ul><li>struct 结构体名 变量名</li><li>struct 结构体名 变量名 = { 成员1值 ， 成员2值…}</li><li>定义结构体时顺便创建变量</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">}stu3; <span class="comment">//结构体变量创建方式3 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式1</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu1; <span class="comment">//struct 关键字可以省略</span></span><br><span class="line"></span><br><span class="line">stu1.name = <span class="string">"张三"</span>;</span><br><span class="line">stu1.age = <span class="number">18</span>;</span><br><span class="line">stu1.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; stu1.name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; stu1.age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式2</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu2 = { <span class="string">"李四"</span>,<span class="number">19</span>,<span class="number">60</span> };</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; stu2.name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; stu2.age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stu3.name = <span class="string">"王五"</span>;</span><br><span class="line">stu3.age = <span class="number">18</span>;</span><br><span class="line">stu3.score = <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; stu3.name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; stu3.age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结1：定义结构体时的关键字是struct，不可省略</p></blockquote><blockquote><p>总结2：创建结构体变量时，关键字struct可以省略</p></blockquote><blockquote><p>总结3：结构体变量利用操作符 ‘’.’’  访问成员</p></blockquote><h3 id="8-3-结构体数组"><a href="#8-3-结构体数组" class="headerlink" title="8.3 结构体数组"></a>8.3 结构体数组</h3><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护</p><p><strong>语法：</strong><code> struct  结构体名 数组名[元素个数] = {  {} , {} , ... {} }</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体数组</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> arr[<span class="number">3</span>]=</span><br><span class="line">{</span><br><span class="line">{<span class="string">"张三"</span>,<span class="number">18</span>,<span class="number">80</span> },</span><br><span class="line">{<span class="string">"李四"</span>,<span class="number">19</span>,<span class="number">60</span> },</span><br><span class="line">{<span class="string">"王五"</span>,<span class="number">20</span>,<span class="number">70</span> }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; arr[i].score &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8-4-结构体指针"><a href="#8-4-结构体指针" class="headerlink" title="8.4 结构体指针"></a>8.4 结构体指针</h3><p><strong>作用：</strong>通过指针访问结构体中的成员</p><ul><li>利用操作符 <code>-&gt; </code>可以通过结构体指针访问结构体属性</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu = { <span class="string">"张三"</span>,<span class="number">18</span>,<span class="number">100</span>, };</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> * p = &amp;stu;</span><br><span class="line"></span><br><span class="line">p-&gt;score = <span class="number">80</span>; <span class="comment">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：结构体指针可以通过 -&gt; 操作符 来访问结构体中的成员</p></blockquote><h3 id="8-5-结构体嵌套结构体"><a href="#8-5-结构体嵌套结构体" class="headerlink" title="8.5 结构体嵌套结构体"></a>8.5 结构体嵌套结构体</h3><p><strong>作用：</strong> 结构体中的成员可以是另一个结构体</p><p><strong>例如：</strong>每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line"><span class="type">int</span> id; <span class="comment">//职工编号</span></span><br><span class="line">string name;  <span class="comment">//教师姓名</span></span><br><span class="line"><span class="type">int</span> age;   <span class="comment">//教师年龄</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu; <span class="comment">//子结构体 学生</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> t1;</span><br><span class="line">t1.id = <span class="number">10000</span>;</span><br><span class="line">t1.name = <span class="string">"老王"</span>;</span><br><span class="line">t1.age = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">t1.stu.name = <span class="string">"张三"</span>;</span><br><span class="line">t1.stu.age = <span class="number">18</span>;</span><br><span class="line">t1.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"教师 职工编号： "</span> &lt;&lt; t1.id &lt;&lt; <span class="string">" 姓名： "</span> &lt;&lt; t1.name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; t1.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">"辅导学员 姓名： "</span> &lt;&lt; t1.stu.name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; t1.stu.age &lt;&lt; <span class="string">" 考试分数： "</span> &lt;&lt; t1.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>总结：</strong>在结构体中可以定义另一个结构体作为成员，用来解决实际问题</p><h3 id="8-6-结构体做函数参数"><a href="#8-6-结构体做函数参数" class="headerlink" title="8.6 结构体做函数参数"></a>8.6 结构体做函数参数</h3><p><strong>作用：</strong>将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递</li><li>地址传递</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(student stu )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">stu.age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"子函数中 姓名："</span> &lt;&lt; stu.name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent2</span><span class="params">(student *stu)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">stu-&gt;age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">"子函数中 姓名："</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; stu-&gt;age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">student stu = { <span class="string">"张三"</span>,<span class="number">18</span>,<span class="number">100</span>};</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="built_in">printStudent</span>(stu);</span><br><span class="line">cout &lt;&lt; <span class="string">"主函数中 姓名："</span> &lt;&lt; stu.name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; stu.age &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="built_in">printStudent2</span>(&amp;stu);</span><br><span class="line">cout &lt;&lt; <span class="string">"主函数中 姓名："</span> &lt;&lt; stu.name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>总结：如果不想修改主函数中的数据，用值传递，反之用地址传递</p></blockquote><h3 id="8-7-结构体中-const使用场景"><a href="#8-7-结构体中-const使用场景" class="headerlink" title="8.7 结构体中 const使用场景"></a>8.7 结构体中 const使用场景</h3><p><strong>作用：</strong>用const来防止误操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//const使用场景</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(<span class="type">const</span> student *stu)</span> <span class="comment">//加const防止函数体中的误操作</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//stu-&gt;age = 100; //操作失败，因为加了const修饰</span></span><br><span class="line">cout &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; stu-&gt;age &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">student stu = { <span class="string">"张三"</span>,<span class="number">18</span>,<span class="number">100</span> };</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(&amp;stu);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8-8-结构体案例"><a href="#8-8-结构体案例" class="headerlink" title="8.8 结构体案例"></a>8.8 结构体案例</h3><h4 id="8-8-1-案例1"><a href="#8-8-1-案例1" class="headerlink" title="8.8.1 案例1"></a>8.8.1 案例1</h4><p><strong>案例描述：</strong></p><p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下</p><p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员</p><p>学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值</p><p>最终打印出老师数据以及老师所带的学生数据。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">{</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">{</span><br><span class="line">string name;</span><br><span class="line">Student sArray[<span class="number">5</span>];</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher tArray[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">string tName = <span class="string">"教师"</span>;</span><br><span class="line">string sName = <span class="string">"学生"</span>;</span><br><span class="line">string nameSeed = <span class="string">"ABCDE"</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">{</span><br><span class="line">tArray[i].name = tName + nameSeed[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">{</span><br><span class="line">tArray[i].sArray[j].name = sName + nameSeed[j];</span><br><span class="line">tArray[i].sArray[j].score = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeachers</span><span class="params">(Teacher tArray[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; tArray[i].name &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"\t姓名："</span> &lt;&lt; tArray[i].sArray[j].name &lt;&lt; <span class="string">" 分数："</span> &lt;&lt; tArray[i].sArray[j].score &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>)); <span class="comment">//随机数种子 头文件 #include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">Teacher tArray[<span class="number">3</span>]; <span class="comment">//老师数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArray) / <span class="built_in">sizeof</span>(Teacher);</span><br><span class="line"></span><br><span class="line"><span class="built_in">allocateSpace</span>(tArray, len); <span class="comment">//创建数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeachers</span>(tArray, len); <span class="comment">//打印数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="8-8-2-案例2"><a href="#8-8-2-案例2" class="headerlink" title="8.8.2 案例2"></a>8.8.2 案例2</h4><p><strong>案例描述：</strong></p><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。</p><p>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{<span class="string">"刘备"</span>,<span class="number">23</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"关羽"</span>,<span class="number">22</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"张飞"</span>,<span class="number">20</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"赵云"</span>,<span class="number">21</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"貂蝉"</span>,<span class="number">19</span>,<span class="string">"女"</span>},</span><br></pre></td></tr></tbody></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">{</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string sex;</span><br><span class="line">};</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(hero arr[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (arr[j].age &gt; arr[j + <span class="number">1</span>].age)</span><br><span class="line">{</span><br><span class="line">hero temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printHeros</span><span class="params">(hero arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">{</span><br><span class="line">cout &lt;&lt; <span class="string">"姓名： "</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">" 性别： "</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; arr[i].age &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span> arr[<span class="number">5</span>] =</span><br><span class="line">{</span><br><span class="line">{<span class="string">"刘备"</span>,<span class="number">23</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"关羽"</span>,<span class="number">22</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"张飞"</span>,<span class="number">20</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"赵云"</span>,<span class="number">21</span>,<span class="string">"男"</span>},</span><br><span class="line">{<span class="string">"貂蝉"</span>,<span class="number">19</span>,<span class="string">"女"</span>},</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(hero); <span class="comment">//获取数组元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len); <span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printHeros</span>(arr, len); <span class="comment">//打印</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> c++合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/02/hello-world/"/>
      <url>/2024/03/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/package.json"/>
      <url>/package.json</url>
      
        <content type="html"><![CDATA[{"dependencies":{"hexo-filter-github-emojis":"^3.0.5"}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/mycss.css"/>
      <url>/css/mycss.css</url>
      
        <content type="html"><![CDATA[/* footer样式 */#footer {    background: #fff;    /* background: #fff url("/images/footer.jpg"); */    /* opacity: 0.3; */}#footer-wrap {    padding: 20px 20px;    /* color: var(--light-grey); */    color: #000;}#footer-wrap a{    color: #49b1f5;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>contact</title>
      <link href="/contact/index.html"/>
      <url>/contact/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>日志</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/node_modules/hexo-filter-github-emojis/index.js"/>
      <url>/node_modules/hexo-filter-github-emojis/index.js</url>
      
        <content type="html"><![CDATA["use strict";/* global hexo */const { JSDOM } = require("jsdom");const options = Object.assign(  {    enable: true,    inject: true,    version: "latest",    className: "github-emoji",  },  hexo.theme.githubEmojis || {},  hexo.config.githubEmojis || {});const emojis = Object.assign(  {},  require("./emojis.json"),  loadCustomEmojis(options.customEmojis || options.localEmojis));hexo.extend.helper.register("github_emoji", (name) => renderEmoji(name));hexo.extend.tag.register("github_emoji", (args) => renderEmoji(args[0]));if (options.inject !== false) {  hexo.extend.filter.register("after_render:html", (str) =>    str.replace("</head>", `\n<style>${getEmojiStyles()}</style>\n</head>`)  );}if (options.enable) {  hexo.extend.filter.register("after_post_render", (data) => {    if (!data["no-emoji"]) {      const $content = new JSDOM(data.content);      const $excerpt = new JSDOM(data.excerpt);      replaceColons($content.window.document.body);      replaceColons($excerpt.window.document.body);      data.content = $content.window.document.body.innerHTML;      data.excerpt = $excerpt.window.document.body.innerHTML;    }    return data;  });}function replaceColons(node) {  if (!node || !node.childNodes) {    return;  }  for (let i = node.childNodes.length - 1; i >= 0; i--) {    const child = node.childNodes[i];    if (child.tagName === "PRE" || child.tagName === "CODE") {      continue;    }    if (child.nodeType === 3) {      const content = child.data.replace(/:(\w+):/gi, (match, p1) =>        emojis[p1] ? renderEmoji(p1) : match      );      if (content !== child.data) {        child.replaceWith(JSDOM.fragment(content));      }    } else {      replaceColons(child);    }  }}function loadCustomEmojis(customEmojis) {  // JSON string  if (typeof customEmojis === "string") {    try {      customEmojis = JSON.parse(customEmojis);      Object.keys(customEmojis).forEach((name) => {        if (typeof customEmojis[name] === "string") {          customEmojis[name] = {            src: customEmojis[name],          };        }      });    } catch (err) {      customEmojis = {};      console.warn(        "hexo-filter-github-emojis: Custom emojis not valid. Skipped."      );    }  }  if (typeof customEmojis !== "object" || customEmojis === null) {    customEmojis = {};  }  return Object.keys(customEmojis).reduce((emojis, name) => {    const emoji = customEmojis[name];    emojis[name] = Object.assign(      {},      emoji,      emoji.codepoints && !Array.isArray(emoji.codepoints)        ? { codepoints: emoji.codepoints.split(" ") }        : {}    );    return emojis;  }, {});}function renderEmoji(name) {  if (!emojis[name]) return name;  const styles = typeof options.styles === "object" && options.styles !== null    ? ` style="${Object.keys(options.styles)        .map((k) => k + ":" + options.styles[k])        .join(";")}"`    : "";  const codepoints = emojis[name].codepoints    ? emojis[name].codepoints.map((c) => `&#x${c};`).join("")    : " ";  return (    `<span class="${options.className}"${styles}>` +    `<span>${codepoints}</span>` +    `<img src="${emojis[name].src}" aria-hidden="true" onerror="this.parent.classList.add('${options.className}-fallback')">` +    `</span>`  );}function getEmojiStyles() {  const rules = `.${options.className} {    position: relative;    display: inline-block;    width: 1.2em;    min-height: 1.2em;    overflow: hidden;    vertical-align: top;    color: transparent;  }    .${options.className} > span {    position: relative;    z-index: 10;  }    .${options.className} img,  .${options.className} .fancybox {    margin: 0 !important;    padding: 0 !important;    border: none !important;    outline: none !important;    text-decoration: none !important;    user-select: none !important;    cursor: auto !important;  }    .${options.className} img {    height: 1.2em !important;    width: 1.2em !important;    position: absolute !important;    left: 50% !important;    top: 50% !important;    transform: translate(-50%, -50%) !important;    user-select: none !important;    cursor: auto !important;  }  .${options.className}-fallback {    color: inherit;  }  .${options.className}-fallback img {    opacity: 0 !important;  }`;  return rules.replace(/^ +/gm, " ").replace(/\n/g, "");}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/node_modules/hexo-filter-github-emojis/package.json"/>
      <url>/node_modules/hexo-filter-github-emojis/package.json</url>
      
        <content type="html"><![CDATA[{"name":"hexo-filter-github-emojis","version":"3.0.5","description":"A Hexo plugin that adds emojis support, using Github Emojis API","main":"index","repository":"crimx/hexo-filter-github-emojis","engines":{"node":">=8.0.0"},"keywords":["hexo","hexo filter","hexo plugin","github emojis","github","emoji","emojis"],"author":"CRIMX <straybugs@gmail.com> (http://blog.crimx.com)","license":"MIT","dependencies":{"jsdom":"^19.0.0","node-fetch":"^3.2.3","random-ua":"^0.0.6"},"__npminstall_done":true,"_from":"hexo-filter-github-emojis@3.0.5","_resolved":"https://registry.npmmirror.com/hexo-filter-github-emojis/-/hexo-filter-github-emojis-3.0.5.tgz"}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/mouse.css"/>
      <url>/css/mouse.css</url>
      
        <content type="html"><![CDATA[body {    cursor:url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),          default;  }  a,  img {    cursor:url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),          default;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/node_modules/hexo-filter-github-emojis/update-emojis.js"/>
      <url>/node_modules/hexo-filter-github-emojis/update-emojis.js</url>
      
        <content type="html"><![CDATA[const path = require("path");const fs = require("fs");const fetch = require("node-fetch");const randomUa = require("random-ua");// get the latest github versionfetch("https://api.github.com/emojis", {  headers: {    "User-Agent": randomUa.generate(),    "Content-Type": "application/json",  },})  .then((t) => t.json())  .then((json) => {    const latestEmojis = Object.keys(json).reduce((emojis, name) => {      emojis[name] = { src: json[name] };      const match = /\/unicode\/(\S+)\./.exec(json[name]);      if (match) {        emojis[name].codepoints = match[1].split("-");      }      return emojis;    }, {});    // update local backup    fs.writeFile(      path.join(__dirname, "emojis.json"),      JSON.stringify(latestEmojis, null, "  "),      function (err) {        if (err) {          console.warn(err);          process.exit(1);        } else {          console.log(`Update ${Object.keys(latestEmojis).length} emojis`);        }      }    );  })  .catch((error) => {    console.error(error);  });]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/node_modules/hexo-filter-github-emojis/emojis.json"/>
      <url>/node_modules/hexo-filter-github-emojis/emojis.json</url>
      
        <content type="html"><![CDATA[{"100":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8","codepoints":["1f4af"]},"1234":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f522.png?v8","codepoints":["1f522"]},"+1":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8","codepoints":["1f44d"]},"-1":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png?v8","codepoints":["1f44e"]},"1st_place_medal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f947.png?v8","codepoints":["1f947"]},"2nd_place_medal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f948.png?v8","codepoints":["1f948"]},"3rd_place_medal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f949.png?v8","codepoints":["1f949"]},"8ball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b1.png?v8","codepoints":["1f3b1"]},"a":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f170.png?v8","codepoints":["1f170"]},"ab":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f18e.png?v8","codepoints":["1f18e"]},"abacus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ee.png?v8","codepoints":["1f9ee"]},"abc":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f524.png?v8","codepoints":["1f524"]},"abcd":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f521.png?v8","codepoints":["1f521"]},"accept":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f251.png?v8","codepoints":["1f251"]},"adhesive_bandage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa79.png?v8","codepoints":["1fa79"]},"adult":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1.png?v8","codepoints":["1f9d1"]},"aerial_tramway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a1.png?v8","codepoints":["1f6a1"]},"afghanistan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1eb.png?v8","codepoints":["1f1e6","1f1eb"]},"airplane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2708.png?v8","codepoints":["2708"]},"aland_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fd.png?v8","codepoints":["1f1e6","1f1fd"]},"alarm_clock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f0.png?v8","codepoints":["23f0"]},"albania":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f1.png?v8","codepoints":["1f1e6","1f1f1"]},"alembic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2697.png?v8","codepoints":["2697"]},"algeria":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ff.png?v8","codepoints":["1f1e9","1f1ff"]},"alien":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47d.png?v8","codepoints":["1f47d"]},"ambulance":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f691.png?v8","codepoints":["1f691"]},"american_samoa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f8.png?v8","codepoints":["1f1e6","1f1f8"]},"amphora":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3fa.png?v8","codepoints":["1f3fa"]},"anchor":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2693.png?v8","codepoints":["2693"]},"andorra":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1e9.png?v8","codepoints":["1f1e6","1f1e9"]},"angel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47c.png?v8","codepoints":["1f47c"]},"anger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8","codepoints":["1f4a2"]},"angola":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f4.png?v8","codepoints":["1f1e6","1f1f4"]},"angry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8","codepoints":["1f620"]},"anguilla":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ee.png?v8","codepoints":["1f1e6","1f1ee"]},"anguished":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f627.png?v8","codepoints":["1f627"]},"ant":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41c.png?v8","codepoints":["1f41c"]},"antarctica":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f6.png?v8","codepoints":["1f1e6","1f1f6"]},"antigua_barbuda":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ec.png?v8","codepoints":["1f1e6","1f1ec"]},"apple":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34e.png?v8","codepoints":["1f34e"]},"aquarius":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2652.png?v8","codepoints":["2652"]},"argentina":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f7.png?v8","codepoints":["1f1e6","1f1f7"]},"aries":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2648.png?v8","codepoints":["2648"]},"armenia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f2.png?v8","codepoints":["1f1e6","1f1f2"]},"arrow_backward":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25c0.png?v8","codepoints":["25c0"]},"arrow_double_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23ec.png?v8","codepoints":["23ec"]},"arrow_double_up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23eb.png?v8","codepoints":["23eb"]},"arrow_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b07.png?v8","codepoints":["2b07"]},"arrow_down_small":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f53d.png?v8","codepoints":["1f53d"]},"arrow_forward":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25b6.png?v8","codepoints":["25b6"]},"arrow_heading_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2935.png?v8","codepoints":["2935"]},"arrow_heading_up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2934.png?v8","codepoints":["2934"]},"arrow_left":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b05.png?v8","codepoints":["2b05"]},"arrow_lower_left":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2199.png?v8","codepoints":["2199"]},"arrow_lower_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2198.png?v8","codepoints":["2198"]},"arrow_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8","codepoints":["27a1"]},"arrow_right_hook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/21aa.png?v8","codepoints":["21aa"]},"arrow_up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b06.png?v8","codepoints":["2b06"]},"arrow_up_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2195.png?v8","codepoints":["2195"]},"arrow_up_small":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f53c.png?v8","codepoints":["1f53c"]},"arrow_upper_left":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2196.png?v8","codepoints":["2196"]},"arrow_upper_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2197.png?v8","codepoints":["2197"]},"arrows_clockwise":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f503.png?v8","codepoints":["1f503"]},"arrows_counterclockwise":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f504.png?v8","codepoints":["1f504"]},"art":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png?v8","codepoints":["1f3a8"]},"articulated_lorry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69b.png?v8","codepoints":["1f69b"]},"artificial_satellite":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f0.png?v8","codepoints":["1f6f0"]},"artist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3a8.png?v8","codepoints":["1f9d1","1f3a8"]},"aruba":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fc.png?v8","codepoints":["1f1e6","1f1fc"]},"ascension_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1e8.png?v8","codepoints":["1f1e6","1f1e8"]},"asterisk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/002a-20e3.png?v8","codepoints":["002a","20e3"]},"astonished":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f632.png?v8","codepoints":["1f632"]},"astronaut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f680.png?v8","codepoints":["1f9d1","1f680"]},"athletic_shoe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45f.png?v8","codepoints":["1f45f"]},"atm":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e7.png?v8","codepoints":["1f3e7"]},"atom":{"src":"https://github.githubassets.com/images/icons/emoji/atom.png?v8"},"atom_symbol":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/269b.png?v8","codepoints":["269b"]},"australia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fa.png?v8","codepoints":["1f1e6","1f1fa"]},"austria":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f9.png?v8","codepoints":["1f1e6","1f1f9"]},"auto_rickshaw":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6fa.png?v8","codepoints":["1f6fa"]},"avocado":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f951.png?v8","codepoints":["1f951"]},"axe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa93.png?v8","codepoints":["1fa93"]},"azerbaijan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ff.png?v8","codepoints":["1f1e6","1f1ff"]},"b":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f171.png?v8","codepoints":["1f171"]},"baby":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f476.png?v8","codepoints":["1f476"]},"baby_bottle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37c.png?v8","codepoints":["1f37c"]},"baby_chick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f424.png?v8","codepoints":["1f424"]},"baby_symbol":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6bc.png?v8","codepoints":["1f6bc"]},"back":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f519.png?v8","codepoints":["1f519"]},"bacon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f953.png?v8","codepoints":["1f953"]},"badger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a1.png?v8","codepoints":["1f9a1"]},"badminton":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f8.png?v8","codepoints":["1f3f8"]},"bagel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96f.png?v8","codepoints":["1f96f"]},"baggage_claim":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c4.png?v8","codepoints":["1f6c4"]},"baguette_bread":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f956.png?v8","codepoints":["1f956"]},"bahamas":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f8.png?v8","codepoints":["1f1e7","1f1f8"]},"bahrain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ed.png?v8","codepoints":["1f1e7","1f1ed"]},"balance_scale":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2696.png?v8","codepoints":["2696"]},"bald_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b2.png?v8","codepoints":["1f468","1f9b2"]},"bald_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b2.png?v8","codepoints":["1f469","1f9b2"]},"ballet_shoes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa70.png?v8","codepoints":["1fa70"]},"balloon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f388.png?v8","codepoints":["1f388"]},"ballot_box":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5f3.png?v8","codepoints":["1f5f3"]},"ballot_box_with_check":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2611.png?v8","codepoints":["2611"]},"bamboo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38d.png?v8","codepoints":["1f38d"]},"banana":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34c.png?v8","codepoints":["1f34c"]},"bangbang":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/203c.png?v8","codepoints":["203c"]},"bangladesh":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e9.png?v8","codepoints":["1f1e7","1f1e9"]},"banjo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa95.png?v8","codepoints":["1fa95"]},"bank":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e6.png?v8","codepoints":["1f3e6"]},"bar_chart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ca.png?v8","codepoints":["1f4ca"]},"barbados":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e7.png?v8","codepoints":["1f1e7","1f1e7"]},"barber":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f488.png?v8","codepoints":["1f488"]},"baseball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26be.png?v8","codepoints":["26be"]},"basecamp":{"src":"https://github.githubassets.com/images/icons/emoji/basecamp.png?v8"},"basecampy":{"src":"https://github.githubassets.com/images/icons/emoji/basecampy.png?v8"},"basket":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9fa.png?v8","codepoints":["1f9fa"]},"basketball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c0.png?v8","codepoints":["1f3c0"]},"basketball_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f9-2642.png?v8","codepoints":["26f9","2642"]},"basketball_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f9-2640.png?v8","codepoints":["26f9","2640"]},"bat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f987.png?v8","codepoints":["1f987"]},"bath":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c0.png?v8","codepoints":["1f6c0"]},"bathtub":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c1.png?v8","codepoints":["1f6c1"]},"battery":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50b.png?v8","codepoints":["1f50b"]},"beach_umbrella":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d6.png?v8","codepoints":["1f3d6"]},"bear":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43b.png?v8","codepoints":["1f43b"]},"bearded_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d4.png?v8","codepoints":["1f9d4"]},"bed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6cf.png?v8","codepoints":["1f6cf"]},"bee":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41d.png?v8","codepoints":["1f41d"]},"beer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37a.png?v8","codepoints":["1f37a"]},"beers":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png?v8","codepoints":["1f37b"]},"beetle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png?v8","codepoints":["1f41e"]},"beginner":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8","codepoints":["1f530"]},"belarus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fe.png?v8","codepoints":["1f1e7","1f1fe"]},"belgium":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ea.png?v8","codepoints":["1f1e7","1f1ea"]},"belize":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ff.png?v8","codepoints":["1f1e7","1f1ff"]},"bell":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f514.png?v8","codepoints":["1f514"]},"bellhop_bell":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ce.png?v8","codepoints":["1f6ce"]},"benin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ef.png?v8","codepoints":["1f1e7","1f1ef"]},"bento":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f371.png?v8","codepoints":["1f371"]},"bermuda":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f2.png?v8","codepoints":["1f1e7","1f1f2"]},"beverage_box":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c3.png?v8","codepoints":["1f9c3"]},"bhutan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f9.png?v8","codepoints":["1f1e7","1f1f9"]},"bicyclist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b4.png?v8","codepoints":["1f6b4"]},"bike":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b2.png?v8","codepoints":["1f6b2"]},"biking_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b4-2642.png?v8","codepoints":["1f6b4","2642"]},"biking_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b4-2640.png?v8","codepoints":["1f6b4","2640"]},"bikini":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f459.png?v8","codepoints":["1f459"]},"billed_cap":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e2.png?v8","codepoints":["1f9e2"]},"biohazard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2623.png?v8","codepoints":["2623"]},"bird":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f426.png?v8","codepoints":["1f426"]},"birthday":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f382.png?v8","codepoints":["1f382"]},"black_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26ab.png?v8","codepoints":["26ab"]},"black_flag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f4.png?v8","codepoints":["1f3f4"]},"black_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5a4.png?v8","codepoints":["1f5a4"]},"black_joker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f0cf.png?v8","codepoints":["1f0cf"]},"black_large_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b1b.png?v8","codepoints":["2b1b"]},"black_medium_small_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25fe.png?v8","codepoints":["25fe"]},"black_medium_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25fc.png?v8","codepoints":["25fc"]},"black_nib":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2712.png?v8","codepoints":["2712"]},"black_small_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25aa.png?v8","codepoints":["25aa"]},"black_square_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f532.png?v8","codepoints":["1f532"]},"blond_haired_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f471-2642.png?v8","codepoints":["1f471","2642"]},"blond_haired_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f471.png?v8","codepoints":["1f471"]},"blond_haired_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f471-2640.png?v8","codepoints":["1f471","2640"]},"blonde_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f471-2640.png?v8","codepoints":["1f471","2640"]},"blossom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33c.png?v8","codepoints":["1f33c"]},"blowfish":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f421.png?v8","codepoints":["1f421"]},"blue_book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png?v8","codepoints":["1f4d8"]},"blue_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f699.png?v8","codepoints":["1f699"]},"blue_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f499.png?v8","codepoints":["1f499"]},"blue_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e6.png?v8","codepoints":["1f7e6"]},"blush":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8","codepoints":["1f60a"]},"boar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f417.png?v8","codepoints":["1f417"]},"boat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f5.png?v8","codepoints":["26f5"]},"bolivia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f4.png?v8","codepoints":["1f1e7","1f1f4"]},"bomb":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a3.png?v8","codepoints":["1f4a3"]},"bone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b4.png?v8","codepoints":["1f9b4"]},"book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png?v8","codepoints":["1f4d6"]},"bookmark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f516.png?v8","codepoints":["1f516"]},"bookmark_tabs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d1.png?v8","codepoints":["1f4d1"]},"books":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8","codepoints":["1f4da"]},"boom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8","codepoints":["1f4a5"]},"boot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f462.png?v8","codepoints":["1f462"]},"bosnia_herzegovina":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e6.png?v8","codepoints":["1f1e7","1f1e6"]},"botswana":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fc.png?v8","codepoints":["1f1e7","1f1fc"]},"bouncing_ball_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f9-2642.png?v8","codepoints":["26f9","2642"]},"bouncing_ball_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f9.png?v8","codepoints":["26f9"]},"bouncing_ball_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f9-2640.png?v8","codepoints":["26f9","2640"]},"bouquet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f490.png?v8","codepoints":["1f490"]},"bouvet_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fb.png?v8","codepoints":["1f1e7","1f1fb"]},"bow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f647.png?v8","codepoints":["1f647"]},"bow_and_arrow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f9.png?v8","codepoints":["1f3f9"]},"bowing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f647-2642.png?v8","codepoints":["1f647","2642"]},"bowing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f647-2640.png?v8","codepoints":["1f647","2640"]},"bowl_with_spoon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f963.png?v8","codepoints":["1f963"]},"bowling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b3.png?v8","codepoints":["1f3b3"]},"bowtie":{"src":"https://github.githubassets.com/images/icons/emoji/bowtie.png?v8"},"boxing_glove":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94a.png?v8","codepoints":["1f94a"]},"boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f466.png?v8","codepoints":["1f466"]},"brain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e0.png?v8","codepoints":["1f9e0"]},"brazil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png?v8","codepoints":["1f1e7","1f1f7"]},"bread":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35e.png?v8","codepoints":["1f35e"]},"breast_feeding":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f931.png?v8","codepoints":["1f931"]},"bricks":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f1.png?v8","codepoints":["1f9f1"]},"bride_with_veil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f470.png?v8","codepoints":["1f470"]},"bridge_at_night":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f309.png?v8","codepoints":["1f309"]},"briefcase":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4bc.png?v8","codepoints":["1f4bc"]},"british_indian_ocean_territory":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f4.png?v8","codepoints":["1f1ee","1f1f4"]},"british_virgin_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ec.png?v8","codepoints":["1f1fb","1f1ec"]},"broccoli":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f966.png?v8","codepoints":["1f966"]},"broken_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8","codepoints":["1f494"]},"broom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f9.png?v8","codepoints":["1f9f9"]},"brown_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e4.png?v8","codepoints":["1f7e4"]},"brown_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f90e.png?v8","codepoints":["1f90e"]},"brown_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7eb.png?v8","codepoints":["1f7eb"]},"brunei":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f3.png?v8","codepoints":["1f1e7","1f1f3"]},"bug":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8","codepoints":["1f41b"]},"building_construction":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d7.png?v8","codepoints":["1f3d7"]},"bulb":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8","codepoints":["1f4a1"]},"bulgaria":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ec.png?v8","codepoints":["1f1e7","1f1ec"]},"bullettrain_front":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f685.png?v8","codepoints":["1f685"]},"bullettrain_side":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f684.png?v8","codepoints":["1f684"]},"burkina_faso":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1eb.png?v8","codepoints":["1f1e7","1f1eb"]},"burrito":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32f.png?v8","codepoints":["1f32f"]},"burundi":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ee.png?v8","codepoints":["1f1e7","1f1ee"]},"bus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68c.png?v8","codepoints":["1f68c"]},"business_suit_levitating":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f574.png?v8","codepoints":["1f574"]},"busstop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68f.png?v8","codepoints":["1f68f"]},"bust_in_silhouette":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f464.png?v8","codepoints":["1f464"]},"busts_in_silhouette":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f465.png?v8","codepoints":["1f465"]},"butter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c8.png?v8","codepoints":["1f9c8"]},"butterfly":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98b.png?v8","codepoints":["1f98b"]},"cactus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f335.png?v8","codepoints":["1f335"]},"cake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f370.png?v8","codepoints":["1f370"]},"calendar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c6.png?v8","codepoints":["1f4c6"]},"call_me_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f919.png?v8","codepoints":["1f919"]},"calling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f2.png?v8","codepoints":["1f4f2"]},"cambodia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ed.png?v8","codepoints":["1f1f0","1f1ed"]},"camel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42b.png?v8","codepoints":["1f42b"]},"camera":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f7.png?v8","codepoints":["1f4f7"]},"camera_flash":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f8.png?v8","codepoints":["1f4f8"]},"cameroon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f2.png?v8","codepoints":["1f1e8","1f1f2"]},"camping":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d5.png?v8","codepoints":["1f3d5"]},"canada":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e6.png?v8","codepoints":["1f1e8","1f1e6"]},"canary_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e8.png?v8","codepoints":["1f1ee","1f1e8"]},"cancer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264b.png?v8","codepoints":["264b"]},"candle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f56f.png?v8","codepoints":["1f56f"]},"candy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36c.png?v8","codepoints":["1f36c"]},"canned_food":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96b.png?v8","codepoints":["1f96b"]},"canoe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f6.png?v8","codepoints":["1f6f6"]},"cape_verde":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fb.png?v8","codepoints":["1f1e8","1f1fb"]},"capital_abcd":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f520.png?v8","codepoints":["1f520"]},"capricorn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2651.png?v8","codepoints":["2651"]},"car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f697.png?v8","codepoints":["1f697"]},"card_file_box":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png?v8","codepoints":["1f5c3"]},"card_index":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png?v8","codepoints":["1f4c7"]},"card_index_dividers":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5c2.png?v8","codepoints":["1f5c2"]},"caribbean_netherlands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f6.png?v8","codepoints":["1f1e7","1f1f6"]},"carousel_horse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a0.png?v8","codepoints":["1f3a0"]},"carrot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f955.png?v8","codepoints":["1f955"]},"cartwheeling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f938.png?v8","codepoints":["1f938"]},"cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8","codepoints":["1f431"]},"cat2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f408.png?v8","codepoints":["1f408"]},"cayman_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1fe.png?v8","codepoints":["1f1f0","1f1fe"]},"cd":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4bf.png?v8","codepoints":["1f4bf"]},"central_african_republic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1eb.png?v8","codepoints":["1f1e8","1f1eb"]},"ceuta_melilla":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1e6.png?v8","codepoints":["1f1ea","1f1e6"]},"chad":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e9.png?v8","codepoints":["1f1f9","1f1e9"]},"chains":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26d3.png?v8","codepoints":["26d3"]},"chair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa91.png?v8","codepoints":["1fa91"]},"champagne":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37e.png?v8","codepoints":["1f37e"]},"chart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b9.png?v8","codepoints":["1f4b9"]},"chart_with_downwards_trend":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c9.png?v8","codepoints":["1f4c9"]},"chart_with_upwards_trend":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c8.png?v8","codepoints":["1f4c8"]},"checkered_flag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png?v8","codepoints":["1f3c1"]},"cheese":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c0.png?v8","codepoints":["1f9c0"]},"cherries":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f352.png?v8","codepoints":["1f352"]},"cherry_blossom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f338.png?v8","codepoints":["1f338"]},"chess_pawn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/265f.png?v8","codepoints":["265f"]},"chestnut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8","codepoints":["1f330"]},"chicken":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f414.png?v8","codepoints":["1f414"]},"child":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d2.png?v8","codepoints":["1f9d2"]},"children_crossing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b8.png?v8","codepoints":["1f6b8"]},"chile":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f1.png?v8","codepoints":["1f1e8","1f1f1"]},"chipmunk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43f.png?v8","codepoints":["1f43f"]},"chocolate_bar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36b.png?v8","codepoints":["1f36b"]},"chopsticks":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f962.png?v8","codepoints":["1f962"]},"christmas_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fd.png?v8","codepoints":["1f1e8","1f1fd"]},"christmas_tree":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f384.png?v8","codepoints":["1f384"]},"church":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26ea.png?v8","codepoints":["26ea"]},"cinema":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a6.png?v8","codepoints":["1f3a6"]},"circus_tent":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3aa.png?v8","codepoints":["1f3aa"]},"city_sunrise":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f307.png?v8","codepoints":["1f307"]},"city_sunset":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f306.png?v8","codepoints":["1f306"]},"cityscape":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d9.png?v8","codepoints":["1f3d9"]},"cl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f191.png?v8","codepoints":["1f191"]},"clamp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5dc.png?v8","codepoints":["1f5dc"]},"clap":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8","codepoints":["1f44f"]},"clapper":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png?v8","codepoints":["1f3ac"]},"classical_building":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3db.png?v8","codepoints":["1f3db"]},"climbing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d7.png?v8","codepoints":["1f9d7"]},"climbing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d7-2642.png?v8","codepoints":["1f9d7","2642"]},"climbing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d7-2640.png?v8","codepoints":["1f9d7","2640"]},"clinking_glasses":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f942.png?v8","codepoints":["1f942"]},"clipboard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png?v8","codepoints":["1f4cb"]},"clipperton_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f5.png?v8","codepoints":["1f1e8","1f1f5"]},"clock1":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f550.png?v8","codepoints":["1f550"]},"clock10":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8","codepoints":["1f559"]},"clock1030":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f565.png?v8","codepoints":["1f565"]},"clock11":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8","codepoints":["1f55a"]},"clock1130":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f566.png?v8","codepoints":["1f566"]},"clock12":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55b.png?v8","codepoints":["1f55b"]},"clock1230":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f567.png?v8","codepoints":["1f567"]},"clock130":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55c.png?v8","codepoints":["1f55c"]},"clock2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f551.png?v8","codepoints":["1f551"]},"clock230":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55d.png?v8","codepoints":["1f55d"]},"clock3":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f552.png?v8","codepoints":["1f552"]},"clock330":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55e.png?v8","codepoints":["1f55e"]},"clock4":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f553.png?v8","codepoints":["1f553"]},"clock430":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f55f.png?v8","codepoints":["1f55f"]},"clock5":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f554.png?v8","codepoints":["1f554"]},"clock530":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f560.png?v8","codepoints":["1f560"]},"clock6":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f555.png?v8","codepoints":["1f555"]},"clock630":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f561.png?v8","codepoints":["1f561"]},"clock7":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f556.png?v8","codepoints":["1f556"]},"clock730":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f562.png?v8","codepoints":["1f562"]},"clock8":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f557.png?v8","codepoints":["1f557"]},"clock830":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f563.png?v8","codepoints":["1f563"]},"clock9":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f558.png?v8","codepoints":["1f558"]},"clock930":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f564.png?v8","codepoints":["1f564"]},"closed_book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d5.png?v8","codepoints":["1f4d5"]},"closed_lock_with_key":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f510.png?v8","codepoints":["1f510"]},"closed_umbrella":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f302.png?v8","codepoints":["1f302"]},"cloud":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2601.png?v8","codepoints":["2601"]},"cloud_with_lightning":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f329.png?v8","codepoints":["1f329"]},"cloud_with_lightning_and_rain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26c8.png?v8","codepoints":["26c8"]},"cloud_with_rain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f327.png?v8","codepoints":["1f327"]},"cloud_with_snow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f328.png?v8","codepoints":["1f328"]},"clown_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f921.png?v8","codepoints":["1f921"]},"clubs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2663.png?v8","codepoints":["2663"]},"cn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png?v8","codepoints":["1f1e8","1f1f3"]},"coat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e5.png?v8","codepoints":["1f9e5"]},"cocktail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f378.png?v8","codepoints":["1f378"]},"coconut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f965.png?v8","codepoints":["1f965"]},"cocos_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e8.png?v8","codepoints":["1f1e8","1f1e8"]},"coffee":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8","codepoints":["2615"]},"coffin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26b0.png?v8","codepoints":["26b0"]},"cold_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f976.png?v8","codepoints":["1f976"]},"cold_sweat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f630.png?v8","codepoints":["1f630"]},"collision":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8","codepoints":["1f4a5"]},"colombia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f4.png?v8","codepoints":["1f1e8","1f1f4"]},"comet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2604.png?v8","codepoints":["2604"]},"comoros":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f2.png?v8","codepoints":["1f1f0","1f1f2"]},"compass":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ed.png?v8","codepoints":["1f9ed"]},"computer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8","codepoints":["1f4bb"]},"computer_mouse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5b1.png?v8","codepoints":["1f5b1"]},"confetti_ball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38a.png?v8","codepoints":["1f38a"]},"confounded":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8","codepoints":["1f616"]},"confused":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8","codepoints":["1f615"]},"congo_brazzaville":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ec.png?v8","codepoints":["1f1e8","1f1ec"]},"congo_kinshasa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e9.png?v8","codepoints":["1f1e8","1f1e9"]},"congratulations":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/3297.png?v8","codepoints":["3297"]},"construction":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png?v8","codepoints":["1f6a7"]},"construction_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f477.png?v8","codepoints":["1f477"]},"construction_worker_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f477-2642.png?v8","codepoints":["1f477","2642"]},"construction_worker_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f477-2640.png?v8","codepoints":["1f477","2640"]},"control_knobs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png?v8","codepoints":["1f39b"]},"convenience_store":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ea.png?v8","codepoints":["1f3ea"]},"cook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f373.png?v8","codepoints":["1f9d1","1f373"]},"cook_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f0.png?v8","codepoints":["1f1e8","1f1f0"]},"cookie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36a.png?v8","codepoints":["1f36a"]},"cool":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f192.png?v8","codepoints":["1f192"]},"cop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png?v8","codepoints":["1f46e"]},"copyright":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/00a9.png?v8","codepoints":["00a9"]},"corn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33d.png?v8","codepoints":["1f33d"]},"costa_rica":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f7.png?v8","codepoints":["1f1e8","1f1f7"]},"cote_divoire":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ee.png?v8","codepoints":["1f1e8","1f1ee"]},"couch_and_lamp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6cb.png?v8","codepoints":["1f6cb"]},"couple":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46b.png?v8","codepoints":["1f46b"]},"couple_with_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f491.png?v8","codepoints":["1f491"]},"couple_with_heart_man_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-2764-1f468.png?v8","codepoints":["1f468","2764","1f468"]},"couple_with_heart_woman_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f468.png?v8","codepoints":["1f469","2764","1f468"]},"couple_with_heart_woman_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f469.png?v8","codepoints":["1f469","2764","1f469"]},"couplekiss":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48f.png?v8","codepoints":["1f48f"]},"couplekiss_man_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-2764-1f48b-1f468.png?v8","codepoints":["1f468","2764","1f48b","1f468"]},"couplekiss_man_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8","codepoints":["1f469","2764","1f48b","1f468"]},"couplekiss_woman_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f469.png?v8","codepoints":["1f469","2764","1f48b","1f469"]},"cow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42e.png?v8","codepoints":["1f42e"]},"cow2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f404.png?v8","codepoints":["1f404"]},"cowboy_hat_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f920.png?v8","codepoints":["1f920"]},"crab":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f980.png?v8","codepoints":["1f980"]},"crayon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f58d.png?v8","codepoints":["1f58d"]},"credit_card":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b3.png?v8","codepoints":["1f4b3"]},"crescent_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f319.png?v8","codepoints":["1f319"]},"cricket":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f997.png?v8","codepoints":["1f997"]},"cricket_game":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cf.png?v8","codepoints":["1f3cf"]},"croatia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f7.png?v8","codepoints":["1f1ed","1f1f7"]},"crocodile":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40a.png?v8","codepoints":["1f40a"]},"croissant":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f950.png?v8","codepoints":["1f950"]},"crossed_fingers":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91e.png?v8","codepoints":["1f91e"]},"crossed_flags":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38c.png?v8","codepoints":["1f38c"]},"crossed_swords":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2694.png?v8","codepoints":["2694"]},"crown":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f451.png?v8","codepoints":["1f451"]},"cry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8","codepoints":["1f622"]},"crying_cat_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8","codepoints":["1f63f"]},"crystal_ball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52e.png?v8","codepoints":["1f52e"]},"cuba":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fa.png?v8","codepoints":["1f1e8","1f1fa"]},"cucumber":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f952.png?v8","codepoints":["1f952"]},"cup_with_straw":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f964.png?v8","codepoints":["1f964"]},"cupcake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c1.png?v8","codepoints":["1f9c1"]},"cupid":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f498.png?v8","codepoints":["1f498"]},"curacao":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fc.png?v8","codepoints":["1f1e8","1f1fc"]},"curling_stone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94c.png?v8","codepoints":["1f94c"]},"curly_haired_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b1.png?v8","codepoints":["1f468","1f9b1"]},"curly_haired_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b1.png?v8","codepoints":["1f469","1f9b1"]},"curly_loop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/27b0.png?v8","codepoints":["27b0"]},"currency_exchange":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b1.png?v8","codepoints":["1f4b1"]},"curry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35b.png?v8","codepoints":["1f35b"]},"cursing_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92c.png?v8","codepoints":["1f92c"]},"custard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36e.png?v8","codepoints":["1f36e"]},"customs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c3.png?v8","codepoints":["1f6c3"]},"cut_of_meat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f969.png?v8","codepoints":["1f969"]},"cyclone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f300.png?v8","codepoints":["1f300"]},"cyprus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fe.png?v8","codepoints":["1f1e8","1f1fe"]},"czech_republic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ff.png?v8","codepoints":["1f1e8","1f1ff"]},"dagger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5e1.png?v8","codepoints":["1f5e1"]},"dancer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f483.png?v8","codepoints":["1f483"]},"dancers":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46f.png?v8","codepoints":["1f46f"]},"dancing_men":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46f-2642.png?v8","codepoints":["1f46f","2642"]},"dancing_women":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46f-2640.png?v8","codepoints":["1f46f","2640"]},"dango":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f361.png?v8","codepoints":["1f361"]},"dark_sunglasses":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f576.png?v8","codepoints":["1f576"]},"dart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png?v8","codepoints":["1f3af"]},"dash":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8","codepoints":["1f4a8"]},"date":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png?v8","codepoints":["1f4c5"]},"de":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ea.png?v8","codepoints":["1f1e9","1f1ea"]},"deaf_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cf-2642.png?v8","codepoints":["1f9cf","2642"]},"deaf_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cf.png?v8","codepoints":["1f9cf"]},"deaf_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cf-2640.png?v8","codepoints":["1f9cf","2640"]},"deciduous_tree":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f333.png?v8","codepoints":["1f333"]},"deer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98c.png?v8","codepoints":["1f98c"]},"denmark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f0.png?v8","codepoints":["1f1e9","1f1f0"]},"department_store":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ec.png?v8","codepoints":["1f3ec"]},"derelict_house":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3da.png?v8","codepoints":["1f3da"]},"desert":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3dc.png?v8","codepoints":["1f3dc"]},"desert_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3dd.png?v8","codepoints":["1f3dd"]},"desktop_computer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5a5.png?v8","codepoints":["1f5a5"]},"detective":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f575.png?v8","codepoints":["1f575"]},"diamond_shape_with_a_dot_inside":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a0.png?v8","codepoints":["1f4a0"]},"diamonds":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2666.png?v8","codepoints":["2666"]},"diego_garcia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ec.png?v8","codepoints":["1f1e9","1f1ec"]},"disappointed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png?v8","codepoints":["1f61e"]},"disappointed_relieved":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f625.png?v8","codepoints":["1f625"]},"diving_mask":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93f.png?v8","codepoints":["1f93f"]},"diya_lamp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa94.png?v8","codepoints":["1fa94"]},"dizzy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ab.png?v8","codepoints":["1f4ab"]},"dizzy_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8","codepoints":["1f635"]},"djibouti":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ef.png?v8","codepoints":["1f1e9","1f1ef"]},"dna":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ec.png?v8","codepoints":["1f9ec"]},"do_not_litter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6af.png?v8","codepoints":["1f6af"]},"dog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8","codepoints":["1f436"]},"dog2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f415.png?v8","codepoints":["1f415"]},"dollar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b5.png?v8","codepoints":["1f4b5"]},"dolls":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38e.png?v8","codepoints":["1f38e"]},"dolphin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42c.png?v8","codepoints":["1f42c"]},"dominica":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f2.png?v8","codepoints":["1f1e9","1f1f2"]},"dominican_republic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f4.png?v8","codepoints":["1f1e9","1f1f4"]},"door":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6aa.png?v8","codepoints":["1f6aa"]},"doughnut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f369.png?v8","codepoints":["1f369"]},"dove":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f54a.png?v8","codepoints":["1f54a"]},"dragon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f409.png?v8","codepoints":["1f409"]},"dragon_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f432.png?v8","codepoints":["1f432"]},"dress":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f457.png?v8","codepoints":["1f457"]},"dromedary_camel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42a.png?v8","codepoints":["1f42a"]},"drooling_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f924.png?v8","codepoints":["1f924"]},"drop_of_blood":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa78.png?v8","codepoints":["1fa78"]},"droplet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png?v8","codepoints":["1f4a7"]},"drum":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f941.png?v8","codepoints":["1f941"]},"duck":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f986.png?v8","codepoints":["1f986"]},"dumpling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95f.png?v8","codepoints":["1f95f"]},"dvd":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c0.png?v8","codepoints":["1f4c0"]},"e-mail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e7.png?v8","codepoints":["1f4e7"]},"eagle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f985.png?v8","codepoints":["1f985"]},"ear":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f442.png?v8","codepoints":["1f442"]},"ear_of_rice":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33e.png?v8","codepoints":["1f33e"]},"ear_with_hearing_aid":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9bb.png?v8","codepoints":["1f9bb"]},"earth_africa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png?v8","codepoints":["1f30d"]},"earth_americas":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png?v8","codepoints":["1f30e"]},"earth_asia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30f.png?v8","codepoints":["1f30f"]},"ecuador":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1e8.png?v8","codepoints":["1f1ea","1f1e8"]},"egg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95a.png?v8","codepoints":["1f95a"]},"eggplant":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f346.png?v8","codepoints":["1f346"]},"egypt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ec.png?v8","codepoints":["1f1ea","1f1ec"]},"eight":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0038-20e3.png?v8","codepoints":["0038","20e3"]},"eight_pointed_black_star":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2734.png?v8","codepoints":["2734"]},"eight_spoked_asterisk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2733.png?v8","codepoints":["2733"]},"eject_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23cf.png?v8","codepoints":["23cf"]},"el_salvador":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fb.png?v8","codepoints":["1f1f8","1f1fb"]},"electric_plug":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png?v8","codepoints":["1f50c"]},"electron":{"src":"https://github.githubassets.com/images/icons/emoji/electron.png?v8"},"elephant":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f418.png?v8","codepoints":["1f418"]},"elf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dd.png?v8","codepoints":["1f9dd"]},"elf_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dd-2642.png?v8","codepoints":["1f9dd","2642"]},"elf_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dd-2640.png?v8","codepoints":["1f9dd","2640"]},"email":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2709.png?v8","codepoints":["2709"]},"end":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51a.png?v8","codepoints":["1f51a"]},"england":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0065-e006e-e0067-e007f.png?v8","codepoints":["1f3f4","e0067","e0062","e0065","e006e","e0067","e007f"]},"envelope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2709.png?v8","codepoints":["2709"]},"envelope_with_arrow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e9.png?v8","codepoints":["1f4e9"]},"equatorial_guinea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f6.png?v8","codepoints":["1f1ec","1f1f6"]},"eritrea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f7.png?v8","codepoints":["1f1ea","1f1f7"]},"es":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f8.png?v8","codepoints":["1f1ea","1f1f8"]},"estonia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ea.png?v8","codepoints":["1f1ea","1f1ea"]},"ethiopia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f9.png?v8","codepoints":["1f1ea","1f1f9"]},"eu":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1fa.png?v8","codepoints":["1f1ea","1f1fa"]},"euro":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b6.png?v8","codepoints":["1f4b6"]},"european_castle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f0.png?v8","codepoints":["1f3f0"]},"european_post_office":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e4.png?v8","codepoints":["1f3e4"]},"european_union":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1fa.png?v8","codepoints":["1f1ea","1f1fa"]},"evergreen_tree":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f332.png?v8","codepoints":["1f332"]},"exclamation":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8","codepoints":["2757"]},"exploding_head":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92f.png?v8","codepoints":["1f92f"]},"expressionless":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8","codepoints":["1f611"]},"eye":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f441.png?v8","codepoints":["1f441"]},"eye_speech_bubble":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f441-1f5e8.png?v8","codepoints":["1f441","1f5e8"]},"eyeglasses":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f453.png?v8","codepoints":["1f453"]},"eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png?v8","codepoints":["1f440"]},"face_with_head_bandage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f915.png?v8","codepoints":["1f915"]},"face_with_thermometer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f912.png?v8","codepoints":["1f912"]},"facepalm":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f926.png?v8","codepoints":["1f926"]},"facepunch":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8","codepoints":["1f44a"]},"factory":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ed.png?v8","codepoints":["1f3ed"]},"factory_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3ed.png?v8","codepoints":["1f9d1","1f3ed"]},"fairy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9da.png?v8","codepoints":["1f9da"]},"fairy_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9da-2642.png?v8","codepoints":["1f9da","2642"]},"fairy_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9da-2640.png?v8","codepoints":["1f9da","2640"]},"falafel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c6.png?v8","codepoints":["1f9c6"]},"falkland_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f0.png?v8","codepoints":["1f1eb","1f1f0"]},"fallen_leaf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f342.png?v8","codepoints":["1f342"]},"family":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46a.png?v8","codepoints":["1f46a"]},"family_man_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f466.png?v8","codepoints":["1f468","1f466"]},"family_man_boy_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f466-1f466.png?v8","codepoints":["1f468","1f466","1f466"]},"family_man_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467.png?v8","codepoints":["1f468","1f467"]},"family_man_girl_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f466.png?v8","codepoints":["1f468","1f467","1f466"]},"family_man_girl_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f467.png?v8","codepoints":["1f468","1f467","1f467"]},"family_man_man_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f466.png?v8","codepoints":["1f468","1f468","1f466"]},"family_man_man_boy_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f466-1f466.png?v8","codepoints":["1f468","1f468","1f466","1f466"]},"family_man_man_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467.png?v8","codepoints":["1f468","1f468","1f467"]},"family_man_man_girl_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467-1f466.png?v8","codepoints":["1f468","1f468","1f467","1f466"]},"family_man_man_girl_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467-1f467.png?v8","codepoints":["1f468","1f468","1f467","1f467"]},"family_man_woman_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f466.png?v8","codepoints":["1f468","1f469","1f466"]},"family_man_woman_boy_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f466-1f466.png?v8","codepoints":["1f468","1f469","1f466","1f466"]},"family_man_woman_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467.png?v8","codepoints":["1f468","1f469","1f467"]},"family_man_woman_girl_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467-1f466.png?v8","codepoints":["1f468","1f469","1f467","1f466"]},"family_man_woman_girl_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467-1f467.png?v8","codepoints":["1f468","1f469","1f467","1f467"]},"family_woman_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f466.png?v8","codepoints":["1f469","1f466"]},"family_woman_boy_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f466-1f466.png?v8","codepoints":["1f469","1f466","1f466"]},"family_woman_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467.png?v8","codepoints":["1f469","1f467"]},"family_woman_girl_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467-1f466.png?v8","codepoints":["1f469","1f467","1f466"]},"family_woman_girl_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467-1f467.png?v8","codepoints":["1f469","1f467","1f467"]},"family_woman_woman_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f466.png?v8","codepoints":["1f469","1f469","1f466"]},"family_woman_woman_boy_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f466-1f466.png?v8","codepoints":["1f469","1f469","1f466","1f466"]},"family_woman_woman_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467.png?v8","codepoints":["1f469","1f469","1f467"]},"family_woman_woman_girl_boy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467-1f466.png?v8","codepoints":["1f469","1f469","1f467","1f466"]},"family_woman_woman_girl_girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467-1f467.png?v8","codepoints":["1f469","1f469","1f467","1f467"]},"farmer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f33e.png?v8","codepoints":["1f9d1","1f33e"]},"faroe_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f4.png?v8","codepoints":["1f1eb","1f1f4"]},"fast_forward":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23e9.png?v8","codepoints":["23e9"]},"fax":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e0.png?v8","codepoints":["1f4e0"]},"fearful":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8","codepoints":["1f628"]},"feelsgood":{"src":"https://github.githubassets.com/images/icons/emoji/feelsgood.png?v8"},"feet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png?v8","codepoints":["1f43e"]},"female_detective":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f575-2640.png?v8","codepoints":["1f575","2640"]},"female_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2640.png?v8","codepoints":["2640"]},"ferris_wheel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a1.png?v8","codepoints":["1f3a1"]},"ferry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f4.png?v8","codepoints":["26f4"]},"field_hockey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d1.png?v8","codepoints":["1f3d1"]},"fiji":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1ef.png?v8","codepoints":["1f1eb","1f1ef"]},"file_cabinet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png?v8","codepoints":["1f5c4"]},"file_folder":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c1.png?v8","codepoints":["1f4c1"]},"film_projector":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4fd.png?v8","codepoints":["1f4fd"]},"film_strip":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f39e.png?v8","codepoints":["1f39e"]},"finland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1ee.png?v8","codepoints":["1f1eb","1f1ee"]},"finnadie":{"src":"https://github.githubassets.com/images/icons/emoji/finnadie.png?v8"},"fire":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8","codepoints":["1f525"]},"fire_engine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f692.png?v8","codepoints":["1f692"]},"fire_extinguisher":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ef.png?v8","codepoints":["1f9ef"]},"firecracker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e8.png?v8","codepoints":["1f9e8"]},"firefighter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f692.png?v8","codepoints":["1f9d1","1f692"]},"fireworks":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f386.png?v8","codepoints":["1f386"]},"first_quarter_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f313.png?v8","codepoints":["1f313"]},"first_quarter_moon_with_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31b.png?v8","codepoints":["1f31b"]},"fish":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8","codepoints":["1f41f"]},"fish_cake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f365.png?v8","codepoints":["1f365"]},"fishing_pole_and_fish":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a3.png?v8","codepoints":["1f3a3"]},"fist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8","codepoints":["270a"]},"fist_left":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91b.png?v8","codepoints":["1f91b"]},"fist_oncoming":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8","codepoints":["1f44a"]},"fist_raised":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8","codepoints":["270a"]},"fist_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91c.png?v8","codepoints":["1f91c"]},"five":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0035-20e3.png?v8","codepoints":["0035","20e3"]},"flags":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38f.png?v8","codepoints":["1f38f"]},"flamingo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a9.png?v8","codepoints":["1f9a9"]},"flashlight":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f526.png?v8","codepoints":["1f526"]},"flat_shoe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97f.png?v8","codepoints":["1f97f"]},"fleur_de_lis":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/269c.png?v8","codepoints":["269c"]},"flight_arrival":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ec.png?v8","codepoints":["1f6ec"]},"flight_departure":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6eb.png?v8","codepoints":["1f6eb"]},"flipper":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42c.png?v8","codepoints":["1f42c"]},"floppy_disk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png?v8","codepoints":["1f4be"]},"flower_playing_cards":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b4.png?v8","codepoints":["1f3b4"]},"flushed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8","codepoints":["1f633"]},"flying_disc":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94f.png?v8","codepoints":["1f94f"]},"flying_saucer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f8.png?v8","codepoints":["1f6f8"]},"fog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32b.png?v8","codepoints":["1f32b"]},"foggy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f301.png?v8","codepoints":["1f301"]},"foot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b6.png?v8","codepoints":["1f9b6"]},"football":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c8.png?v8","codepoints":["1f3c8"]},"footprints":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f463.png?v8","codepoints":["1f463"]},"fork_and_knife":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f374.png?v8","codepoints":["1f374"]},"fortune_cookie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f960.png?v8","codepoints":["1f960"]},"fountain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f2.png?v8","codepoints":["26f2"]},"fountain_pen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png?v8","codepoints":["1f58b"]},"four":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0034-20e3.png?v8","codepoints":["0034","20e3"]},"four_leaf_clover":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f340.png?v8","codepoints":["1f340"]},"fox_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98a.png?v8","codepoints":["1f98a"]},"fr":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png?v8","codepoints":["1f1eb","1f1f7"]},"framed_picture":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5bc.png?v8","codepoints":["1f5bc"]},"free":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f193.png?v8","codepoints":["1f193"]},"french_guiana":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1eb.png?v8","codepoints":["1f1ec","1f1eb"]},"french_polynesia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1eb.png?v8","codepoints":["1f1f5","1f1eb"]},"french_southern_territories":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1eb.png?v8","codepoints":["1f1f9","1f1eb"]},"fried_egg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f373.png?v8","codepoints":["1f373"]},"fried_shrimp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f364.png?v8","codepoints":["1f364"]},"fries":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35f.png?v8","codepoints":["1f35f"]},"frog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f438.png?v8","codepoints":["1f438"]},"frowning":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f626.png?v8","codepoints":["1f626"]},"frowning_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2639.png?v8","codepoints":["2639"]},"frowning_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64d-2642.png?v8","codepoints":["1f64d","2642"]},"frowning_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64d.png?v8","codepoints":["1f64d"]},"frowning_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64d-2640.png?v8","codepoints":["1f64d","2640"]},"fu":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f595.png?v8","codepoints":["1f595"]},"fuelpump":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26fd.png?v8","codepoints":["26fd"]},"full_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f315.png?v8","codepoints":["1f315"]},"full_moon_with_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31d.png?v8","codepoints":["1f31d"]},"funeral_urn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26b1.png?v8","codepoints":["26b1"]},"gabon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e6.png?v8","codepoints":["1f1ec","1f1e6"]},"gambia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f2.png?v8","codepoints":["1f1ec","1f1f2"]},"game_die":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b2.png?v8","codepoints":["1f3b2"]},"garlic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c4.png?v8","codepoints":["1f9c4"]},"gb":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e7.png?v8","codepoints":["1f1ec","1f1e7"]},"gear":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2699.png?v8","codepoints":["2699"]},"gem":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png?v8","codepoints":["1f48e"]},"gemini":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264a.png?v8","codepoints":["264a"]},"genie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9de.png?v8","codepoints":["1f9de"]},"genie_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9de-2642.png?v8","codepoints":["1f9de","2642"]},"genie_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9de-2640.png?v8","codepoints":["1f9de","2640"]},"georgia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ea.png?v8","codepoints":["1f1ec","1f1ea"]},"ghana":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ed.png?v8","codepoints":["1f1ec","1f1ed"]},"ghost":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47b.png?v8","codepoints":["1f47b"]},"gibraltar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ee.png?v8","codepoints":["1f1ec","1f1ee"]},"gift":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f381.png?v8","codepoints":["1f381"]},"gift_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49d.png?v8","codepoints":["1f49d"]},"giraffe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f992.png?v8","codepoints":["1f992"]},"girl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f467.png?v8","codepoints":["1f467"]},"globe_with_meridians":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f310.png?v8","codepoints":["1f310"]},"gloves":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e4.png?v8","codepoints":["1f9e4"]},"goal_net":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f945.png?v8","codepoints":["1f945"]},"goat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f410.png?v8","codepoints":["1f410"]},"goberserk":{"src":"https://github.githubassets.com/images/icons/emoji/goberserk.png?v8"},"godmode":{"src":"https://github.githubassets.com/images/icons/emoji/godmode.png?v8"},"goggles":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97d.png?v8","codepoints":["1f97d"]},"golf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f3.png?v8","codepoints":["26f3"]},"golfing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cc.png?v8","codepoints":["1f3cc"]},"golfing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cc-2642.png?v8","codepoints":["1f3cc","2642"]},"golfing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cc-2640.png?v8","codepoints":["1f3cc","2640"]},"gorilla":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98d.png?v8","codepoints":["1f98d"]},"grapes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f347.png?v8","codepoints":["1f347"]},"greece":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f7.png?v8","codepoints":["1f1ec","1f1f7"]},"green_apple":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34f.png?v8","codepoints":["1f34f"]},"green_book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d7.png?v8","codepoints":["1f4d7"]},"green_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e2.png?v8","codepoints":["1f7e2"]},"green_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png?v8","codepoints":["1f49a"]},"green_salad":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f957.png?v8","codepoints":["1f957"]},"green_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e9.png?v8","codepoints":["1f7e9"]},"greenland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f1.png?v8","codepoints":["1f1ec","1f1f1"]},"grenada":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e9.png?v8","codepoints":["1f1ec","1f1e9"]},"grey_exclamation":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2755.png?v8","codepoints":["2755"]},"grey_question":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2754.png?v8","codepoints":["2754"]},"grimacing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8","codepoints":["1f62c"]},"grin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8","codepoints":["1f601"]},"grinning":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8","codepoints":["1f600"]},"guadeloupe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f5.png?v8","codepoints":["1f1ec","1f1f5"]},"guam":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fa.png?v8","codepoints":["1f1ec","1f1fa"]},"guard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f482.png?v8","codepoints":["1f482"]},"guardsman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f482-2642.png?v8","codepoints":["1f482","2642"]},"guardswoman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f482-2640.png?v8","codepoints":["1f482","2640"]},"guatemala":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f9.png?v8","codepoints":["1f1ec","1f1f9"]},"guernsey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ec.png?v8","codepoints":["1f1ec","1f1ec"]},"guide_dog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ae.png?v8","codepoints":["1f9ae"]},"guinea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f3.png?v8","codepoints":["1f1ec","1f1f3"]},"guinea_bissau":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fc.png?v8","codepoints":["1f1ec","1f1fc"]},"guitar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b8.png?v8","codepoints":["1f3b8"]},"gun":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52b.png?v8","codepoints":["1f52b"]},"guyana":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fe.png?v8","codepoints":["1f1ec","1f1fe"]},"haircut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f487.png?v8","codepoints":["1f487"]},"haircut_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f487-2642.png?v8","codepoints":["1f487","2642"]},"haircut_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f487-2640.png?v8","codepoints":["1f487","2640"]},"haiti":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f9.png?v8","codepoints":["1f1ed","1f1f9"]},"hamburger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f354.png?v8","codepoints":["1f354"]},"hammer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f528.png?v8","codepoints":["1f528"]},"hammer_and_pick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2692.png?v8","codepoints":["2692"]},"hammer_and_wrench":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png?v8","codepoints":["1f6e0"]},"hamster":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f439.png?v8","codepoints":["1f439"]},"hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270b.png?v8","codepoints":["270b"]},"hand_over_mouth":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92d.png?v8","codepoints":["1f92d"]},"handbag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45c.png?v8","codepoints":["1f45c"]},"handball_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93e.png?v8","codepoints":["1f93e"]},"handshake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91d.png?v8","codepoints":["1f91d"]},"hankey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8","codepoints":["1f4a9"]},"hash":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0023-20e3.png?v8","codepoints":["0023","20e3"]},"hatched_chick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f425.png?v8","codepoints":["1f425"]},"hatching_chick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f423.png?v8","codepoints":["1f423"]},"headphones":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a7.png?v8","codepoints":["1f3a7"]},"health_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2695.png?v8","codepoints":["1f9d1","2695"]},"hear_no_evil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f649.png?v8","codepoints":["1f649"]},"heard_mcdonald_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f2.png?v8","codepoints":["1f1ed","1f1f2"]},"heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8","codepoints":["2764"]},"heart_decoration":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49f.png?v8","codepoints":["1f49f"]},"heart_eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8","codepoints":["1f60d"]},"heart_eyes_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63b.png?v8","codepoints":["1f63b"]},"heartbeat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f493.png?v8","codepoints":["1f493"]},"heartpulse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8","codepoints":["1f497"]},"hearts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2665.png?v8","codepoints":["2665"]},"heavy_check_mark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2714.png?v8","codepoints":["2714"]},"heavy_division_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2797.png?v8","codepoints":["2797"]},"heavy_dollar_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b2.png?v8","codepoints":["1f4b2"]},"heavy_exclamation_mark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8","codepoints":["2757"]},"heavy_heart_exclamation":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2763.png?v8","codepoints":["2763"]},"heavy_minus_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2796.png?v8","codepoints":["2796"]},"heavy_multiplication_x":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2716.png?v8","codepoints":["2716"]},"heavy_plus_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8","codepoints":["2795"]},"hedgehog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f994.png?v8","codepoints":["1f994"]},"helicopter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f681.png?v8","codepoints":["1f681"]},"herb":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png?v8","codepoints":["1f33f"]},"hibiscus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33a.png?v8","codepoints":["1f33a"]},"high_brightness":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f506.png?v8","codepoints":["1f506"]},"high_heel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f460.png?v8","codepoints":["1f460"]},"hiking_boot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97e.png?v8","codepoints":["1f97e"]},"hindu_temple":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6d5.png?v8","codepoints":["1f6d5"]},"hippopotamus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99b.png?v8","codepoints":["1f99b"]},"hocho":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52a.png?v8","codepoints":["1f52a"]},"hole":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f573.png?v8","codepoints":["1f573"]},"honduras":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f3.png?v8","codepoints":["1f1ed","1f1f3"]},"honey_pot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36f.png?v8","codepoints":["1f36f"]},"honeybee":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41d.png?v8","codepoints":["1f41d"]},"hong_kong":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f0.png?v8","codepoints":["1f1ed","1f1f0"]},"horse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f434.png?v8","codepoints":["1f434"]},"horse_racing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8","codepoints":["1f3c7"]},"hospital":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e5.png?v8","codepoints":["1f3e5"]},"hot_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f975.png?v8","codepoints":["1f975"]},"hot_pepper":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f336.png?v8","codepoints":["1f336"]},"hotdog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32d.png?v8","codepoints":["1f32d"]},"hotel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e8.png?v8","codepoints":["1f3e8"]},"hotsprings":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2668.png?v8","codepoints":["2668"]},"hourglass":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/231b.png?v8","codepoints":["231b"]},"hourglass_flowing_sand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f3.png?v8","codepoints":["23f3"]},"house":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png?v8","codepoints":["1f3e0"]},"house_with_garden":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e1.png?v8","codepoints":["1f3e1"]},"houses":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d8.png?v8","codepoints":["1f3d8"]},"hugs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f917.png?v8","codepoints":["1f917"]},"hungary":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1fa.png?v8","codepoints":["1f1ed","1f1fa"]},"hurtrealbad":{"src":"https://github.githubassets.com/images/icons/emoji/hurtrealbad.png?v8"},"hushed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62f.png?v8","codepoints":["1f62f"]},"ice_cream":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f368.png?v8","codepoints":["1f368"]},"ice_cube":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ca.png?v8","codepoints":["1f9ca"]},"ice_hockey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d2.png?v8","codepoints":["1f3d2"]},"ice_skate":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f8.png?v8","codepoints":["26f8"]},"icecream":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f366.png?v8","codepoints":["1f366"]},"iceland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f8.png?v8","codepoints":["1f1ee","1f1f8"]},"id":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f194.png?v8","codepoints":["1f194"]},"ideograph_advantage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f250.png?v8","codepoints":["1f250"]},"imp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47f.png?v8","codepoints":["1f47f"]},"inbox_tray":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e5.png?v8","codepoints":["1f4e5"]},"incoming_envelope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e8.png?v8","codepoints":["1f4e8"]},"india":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f3.png?v8","codepoints":["1f1ee","1f1f3"]},"indonesia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png?v8","codepoints":["1f1ee","1f1e9"]},"infinity":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/267e.png?v8","codepoints":["267e"]},"information_desk_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481.png?v8","codepoints":["1f481"]},"information_source":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2139.png?v8","codepoints":["2139"]},"innocent":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8","codepoints":["1f607"]},"interrobang":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2049.png?v8","codepoints":["2049"]},"iphone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png?v8","codepoints":["1f4f1"]},"iran":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f7.png?v8","codepoints":["1f1ee","1f1f7"]},"iraq":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f6.png?v8","codepoints":["1f1ee","1f1f6"]},"ireland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1ea.png?v8","codepoints":["1f1ee","1f1ea"]},"isle_of_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f2.png?v8","codepoints":["1f1ee","1f1f2"]},"israel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f1.png?v8","codepoints":["1f1ee","1f1f1"]},"it":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png?v8","codepoints":["1f1ee","1f1f9"]},"izakaya_lantern":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ee.png?v8","codepoints":["1f3ee"]},"jack_o_lantern":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f383.png?v8","codepoints":["1f383"]},"jamaica":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f2.png?v8","codepoints":["1f1ef","1f1f2"]},"japan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5fe.png?v8","codepoints":["1f5fe"]},"japanese_castle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ef.png?v8","codepoints":["1f3ef"]},"japanese_goblin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47a.png?v8","codepoints":["1f47a"]},"japanese_ogre":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f479.png?v8","codepoints":["1f479"]},"jeans":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f456.png?v8","codepoints":["1f456"]},"jersey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1ea.png?v8","codepoints":["1f1ef","1f1ea"]},"jigsaw":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e9.png?v8","codepoints":["1f9e9"]},"jordan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f4.png?v8","codepoints":["1f1ef","1f1f4"]},"joy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8","codepoints":["1f602"]},"joy_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f639.png?v8","codepoints":["1f639"]},"joystick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f579.png?v8","codepoints":["1f579"]},"jp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png?v8","codepoints":["1f1ef","1f1f5"]},"judge":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2696.png?v8","codepoints":["1f9d1","2696"]},"juggling_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f939.png?v8","codepoints":["1f939"]},"kaaba":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f54b.png?v8","codepoints":["1f54b"]},"kangaroo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f998.png?v8","codepoints":["1f998"]},"kazakhstan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ff.png?v8","codepoints":["1f1f0","1f1ff"]},"kenya":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ea.png?v8","codepoints":["1f1f0","1f1ea"]},"key":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f511.png?v8","codepoints":["1f511"]},"keyboard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2328.png?v8","codepoints":["2328"]},"keycap_ten":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51f.png?v8","codepoints":["1f51f"]},"kick_scooter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f4.png?v8","codepoints":["1f6f4"]},"kimono":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f458.png?v8","codepoints":["1f458"]},"kiribati":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ee.png?v8","codepoints":["1f1f0","1f1ee"]},"kiss":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48b.png?v8","codepoints":["1f48b"]},"kissing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f617.png?v8","codepoints":["1f617"]},"kissing_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63d.png?v8","codepoints":["1f63d"]},"kissing_closed_eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61a.png?v8","codepoints":["1f61a"]},"kissing_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8","codepoints":["1f618"]},"kissing_smiling_eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f619.png?v8","codepoints":["1f619"]},"kite":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa81.png?v8","codepoints":["1fa81"]},"kiwi_fruit":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95d.png?v8","codepoints":["1f95d"]},"kneeling_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ce-2642.png?v8","codepoints":["1f9ce","2642"]},"kneeling_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ce.png?v8","codepoints":["1f9ce"]},"kneeling_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ce-2640.png?v8","codepoints":["1f9ce","2640"]},"knife":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52a.png?v8","codepoints":["1f52a"]},"koala":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f428.png?v8","codepoints":["1f428"]},"koko":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f201.png?v8","codepoints":["1f201"]},"kosovo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fd-1f1f0.png?v8","codepoints":["1f1fd","1f1f0"]},"kr":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png?v8","codepoints":["1f1f0","1f1f7"]},"kuwait":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1fc.png?v8","codepoints":["1f1f0","1f1fc"]},"kyrgyzstan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ec.png?v8","codepoints":["1f1f0","1f1ec"]},"lab_coat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97c.png?v8","codepoints":["1f97c"]},"label":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png?v8","codepoints":["1f3f7"]},"lacrosse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94d.png?v8","codepoints":["1f94d"]},"lantern":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ee.png?v8","codepoints":["1f3ee"]},"laos":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e6.png?v8","codepoints":["1f1f1","1f1e6"]},"large_blue_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f535.png?v8","codepoints":["1f535"]},"large_blue_diamond":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f537.png?v8","codepoints":["1f537"]},"large_orange_diamond":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f536.png?v8","codepoints":["1f536"]},"last_quarter_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f317.png?v8","codepoints":["1f317"]},"last_quarter_moon_with_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31c.png?v8","codepoints":["1f31c"]},"latin_cross":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/271d.png?v8","codepoints":["271d"]},"latvia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fb.png?v8","codepoints":["1f1f1","1f1fb"]},"laughing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8","codepoints":["1f606"]},"leafy_green":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96c.png?v8","codepoints":["1f96c"]},"leaves":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f343.png?v8","codepoints":["1f343"]},"lebanon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e7.png?v8","codepoints":["1f1f1","1f1e7"]},"ledger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d2.png?v8","codepoints":["1f4d2"]},"left_luggage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c5.png?v8","codepoints":["1f6c5"]},"left_right_arrow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2194.png?v8","codepoints":["2194"]},"left_speech_bubble":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5e8.png?v8","codepoints":["1f5e8"]},"leftwards_arrow_with_hook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/21a9.png?v8","codepoints":["21a9"]},"leg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b5.png?v8","codepoints":["1f9b5"]},"lemon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34b.png?v8","codepoints":["1f34b"]},"leo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264c.png?v8","codepoints":["264c"]},"leopard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f406.png?v8","codepoints":["1f406"]},"lesotho":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f8.png?v8","codepoints":["1f1f1","1f1f8"]},"level_slider":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f39a.png?v8","codepoints":["1f39a"]},"liberia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f7.png?v8","codepoints":["1f1f1","1f1f7"]},"libra":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264e.png?v8","codepoints":["264e"]},"libya":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fe.png?v8","codepoints":["1f1f1","1f1fe"]},"liechtenstein":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1ee.png?v8","codepoints":["1f1f1","1f1ee"]},"light_rail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f688.png?v8","codepoints":["1f688"]},"link":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8","codepoints":["1f517"]},"lion":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f981.png?v8","codepoints":["1f981"]},"lips":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f444.png?v8","codepoints":["1f444"]},"lipstick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f484.png?v8","codepoints":["1f484"]},"lithuania":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f9.png?v8","codepoints":["1f1f1","1f1f9"]},"lizard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98e.png?v8","codepoints":["1f98e"]},"llama":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f999.png?v8","codepoints":["1f999"]},"lobster":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99e.png?v8","codepoints":["1f99e"]},"lock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f512.png?v8","codepoints":["1f512"]},"lock_with_ink_pen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50f.png?v8","codepoints":["1f50f"]},"lollipop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f36d.png?v8","codepoints":["1f36d"]},"loop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/27bf.png?v8","codepoints":["27bf"]},"lotion_bottle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f4.png?v8","codepoints":["1f9f4"]},"lotus_position":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d8.png?v8","codepoints":["1f9d8"]},"lotus_position_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d8-2642.png?v8","codepoints":["1f9d8","2642"]},"lotus_position_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d8-2640.png?v8","codepoints":["1f9d8","2640"]},"loud_sound":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50a.png?v8","codepoints":["1f50a"]},"loudspeaker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png?v8","codepoints":["1f4e2"]},"love_hotel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e9.png?v8","codepoints":["1f3e9"]},"love_letter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48c.png?v8","codepoints":["1f48c"]},"love_you_gesture":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91f.png?v8","codepoints":["1f91f"]},"low_brightness":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f505.png?v8","codepoints":["1f505"]},"luggage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f3.png?v8","codepoints":["1f9f3"]},"luxembourg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fa.png?v8","codepoints":["1f1f1","1f1fa"]},"lying_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f925.png?v8","codepoints":["1f925"]},"m":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/24c2.png?v8","codepoints":["24c2"]},"macau":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f4.png?v8","codepoints":["1f1f2","1f1f4"]},"macedonia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f0.png?v8","codepoints":["1f1f2","1f1f0"]},"madagascar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ec.png?v8","codepoints":["1f1f2","1f1ec"]},"mag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png?v8","codepoints":["1f50d"]},"mag_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8","codepoints":["1f50e"]},"mage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d9.png?v8","codepoints":["1f9d9"]},"mage_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d9-2642.png?v8","codepoints":["1f9d9","2642"]},"mage_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d9-2640.png?v8","codepoints":["1f9d9","2640"]},"magnet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f2.png?v8","codepoints":["1f9f2"]},"mahjong":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f004.png?v8","codepoints":["1f004"]},"mailbox":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4eb.png?v8","codepoints":["1f4eb"]},"mailbox_closed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ea.png?v8","codepoints":["1f4ea"]},"mailbox_with_mail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ec.png?v8","codepoints":["1f4ec"]},"mailbox_with_no_mail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ed.png?v8","codepoints":["1f4ed"]},"malawi":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fc.png?v8","codepoints":["1f1f2","1f1fc"]},"malaysia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fe.png?v8","codepoints":["1f1f2","1f1fe"]},"maldives":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fb.png?v8","codepoints":["1f1f2","1f1fb"]},"male_detective":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f575-2642.png?v8","codepoints":["1f575","2642"]},"male_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2642.png?v8","codepoints":["2642"]},"mali":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f1.png?v8","codepoints":["1f1f2","1f1f1"]},"malta":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f9.png?v8","codepoints":["1f1f2","1f1f9"]},"man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468.png?v8","codepoints":["1f468"]},"man_artist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3a8.png?v8","codepoints":["1f468","1f3a8"]},"man_astronaut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f680.png?v8","codepoints":["1f468","1f680"]},"man_cartwheeling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f938-2642.png?v8","codepoints":["1f938","2642"]},"man_cook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f373.png?v8","codepoints":["1f468","1f373"]},"man_dancing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f57a.png?v8","codepoints":["1f57a"]},"man_facepalming":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8","codepoints":["1f926","2642"]},"man_factory_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3ed.png?v8","codepoints":["1f468","1f3ed"]},"man_farmer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f33e.png?v8","codepoints":["1f468","1f33e"]},"man_firefighter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f692.png?v8","codepoints":["1f468","1f692"]},"man_health_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-2695.png?v8","codepoints":["1f468","2695"]},"man_in_manual_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9bd.png?v8","codepoints":["1f468","1f9bd"]},"man_in_motorized_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9bc.png?v8","codepoints":["1f468","1f9bc"]},"man_in_tuxedo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f935.png?v8","codepoints":["1f935"]},"man_judge":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-2696.png?v8","codepoints":["1f468","2696"]},"man_juggling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f939-2642.png?v8","codepoints":["1f939","2642"]},"man_mechanic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f527.png?v8","codepoints":["1f468","1f527"]},"man_office_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bc.png?v8","codepoints":["1f468","1f4bc"]},"man_pilot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-2708.png?v8","codepoints":["1f468","2708"]},"man_playing_handball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93e-2642.png?v8","codepoints":["1f93e","2642"]},"man_playing_water_polo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93d-2642.png?v8","codepoints":["1f93d","2642"]},"man_scientist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f52c.png?v8","codepoints":["1f468","1f52c"]},"man_shrugging":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f937-2642.png?v8","codepoints":["1f937","2642"]},"man_singer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3a4.png?v8","codepoints":["1f468","1f3a4"]},"man_student":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f393.png?v8","codepoints":["1f468","1f393"]},"man_teacher":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3eb.png?v8","codepoints":["1f468","1f3eb"]},"man_technologist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bb.png?v8","codepoints":["1f468","1f4bb"]},"man_with_gua_pi_mao":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f472.png?v8","codepoints":["1f472"]},"man_with_probing_cane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9af.png?v8","codepoints":["1f468","1f9af"]},"man_with_turban":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f473-2642.png?v8","codepoints":["1f473","2642"]},"mandarin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8","codepoints":["1f34a"]},"mango":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96d.png?v8","codepoints":["1f96d"]},"mans_shoe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45e.png?v8","codepoints":["1f45e"]},"mantelpiece_clock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f570.png?v8","codepoints":["1f570"]},"manual_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9bd.png?v8","codepoints":["1f9bd"]},"maple_leaf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f341.png?v8","codepoints":["1f341"]},"marshall_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ed.png?v8","codepoints":["1f1f2","1f1ed"]},"martial_arts_uniform":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94b.png?v8","codepoints":["1f94b"]},"martinique":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f6.png?v8","codepoints":["1f1f2","1f1f6"]},"mask":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f637.png?v8","codepoints":["1f637"]},"massage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f486.png?v8","codepoints":["1f486"]},"massage_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f486-2642.png?v8","codepoints":["1f486","2642"]},"massage_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f486-2640.png?v8","codepoints":["1f486","2640"]},"mate":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c9.png?v8","codepoints":["1f9c9"]},"mauritania":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f7.png?v8","codepoints":["1f1f2","1f1f7"]},"mauritius":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fa.png?v8","codepoints":["1f1f2","1f1fa"]},"mayotte":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fe-1f1f9.png?v8","codepoints":["1f1fe","1f1f9"]},"meat_on_bone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f356.png?v8","codepoints":["1f356"]},"mechanic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f527.png?v8","codepoints":["1f9d1","1f527"]},"mechanical_arm":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9be.png?v8","codepoints":["1f9be"]},"mechanical_leg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9bf.png?v8","codepoints":["1f9bf"]},"medal_military":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f396.png?v8","codepoints":["1f396"]},"medal_sports":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c5.png?v8","codepoints":["1f3c5"]},"medical_symbol":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2695.png?v8","codepoints":["2695"]},"mega":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e3.png?v8","codepoints":["1f4e3"]},"melon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f348.png?v8","codepoints":["1f348"]},"memo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8","codepoints":["1f4dd"]},"men_wrestling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93c-2642.png?v8","codepoints":["1f93c","2642"]},"menorah":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f54e.png?v8","codepoints":["1f54e"]},"mens":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b9.png?v8","codepoints":["1f6b9"]},"mermaid":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dc-2640.png?v8","codepoints":["1f9dc","2640"]},"merman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dc-2642.png?v8","codepoints":["1f9dc","2642"]},"merperson":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9dc.png?v8","codepoints":["1f9dc"]},"metal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f918.png?v8","codepoints":["1f918"]},"metro":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f687.png?v8","codepoints":["1f687"]},"mexico":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fd.png?v8","codepoints":["1f1f2","1f1fd"]},"microbe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a0.png?v8","codepoints":["1f9a0"]},"micronesia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f2.png?v8","codepoints":["1f1eb","1f1f2"]},"microphone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a4.png?v8","codepoints":["1f3a4"]},"microscope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52c.png?v8","codepoints":["1f52c"]},"middle_finger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f595.png?v8","codepoints":["1f595"]},"milk_glass":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95b.png?v8","codepoints":["1f95b"]},"milky_way":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30c.png?v8","codepoints":["1f30c"]},"minibus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f690.png?v8","codepoints":["1f690"]},"minidisc":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4bd.png?v8","codepoints":["1f4bd"]},"mobile_phone_off":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f4.png?v8","codepoints":["1f4f4"]},"moldova":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e9.png?v8","codepoints":["1f1f2","1f1e9"]},"monaco":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e8.png?v8","codepoints":["1f1f2","1f1e8"]},"money_mouth_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f911.png?v8","codepoints":["1f911"]},"money_with_wings":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b8.png?v8","codepoints":["1f4b8"]},"moneybag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b0.png?v8","codepoints":["1f4b0"]},"mongolia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f3.png?v8","codepoints":["1f1f2","1f1f3"]},"monkey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f412.png?v8","codepoints":["1f412"]},"monkey_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f435.png?v8","codepoints":["1f435"]},"monocle_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d0.png?v8","codepoints":["1f9d0"]},"monorail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69d.png?v8","codepoints":["1f69d"]},"montenegro":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ea.png?v8","codepoints":["1f1f2","1f1ea"]},"montserrat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f8.png?v8","codepoints":["1f1f2","1f1f8"]},"moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f314.png?v8","codepoints":["1f314"]},"moon_cake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96e.png?v8","codepoints":["1f96e"]},"morocco":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e6.png?v8","codepoints":["1f1f2","1f1e6"]},"mortar_board":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f393.png?v8","codepoints":["1f393"]},"mosque":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f54c.png?v8","codepoints":["1f54c"]},"mosquito":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99f.png?v8","codepoints":["1f99f"]},"motor_boat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e5.png?v8","codepoints":["1f6e5"]},"motor_scooter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f5.png?v8","codepoints":["1f6f5"]},"motorcycle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cd.png?v8","codepoints":["1f3cd"]},"motorized_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9bc.png?v8","codepoints":["1f9bc"]},"motorway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e3.png?v8","codepoints":["1f6e3"]},"mount_fuji":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5fb.png?v8","codepoints":["1f5fb"]},"mountain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f0.png?v8","codepoints":["26f0"]},"mountain_bicyclist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b5.png?v8","codepoints":["1f6b5"]},"mountain_biking_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b5-2642.png?v8","codepoints":["1f6b5","2642"]},"mountain_biking_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b5-2640.png?v8","codepoints":["1f6b5","2640"]},"mountain_cableway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a0.png?v8","codepoints":["1f6a0"]},"mountain_railway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69e.png?v8","codepoints":["1f69e"]},"mountain_snow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d4.png?v8","codepoints":["1f3d4"]},"mouse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42d.png?v8","codepoints":["1f42d"]},"mouse2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f401.png?v8","codepoints":["1f401"]},"movie_camera":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png?v8","codepoints":["1f3a5"]},"moyai":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5ff.png?v8","codepoints":["1f5ff"]},"mozambique":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ff.png?v8","codepoints":["1f1f2","1f1ff"]},"mrs_claus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f936.png?v8","codepoints":["1f936"]},"muscle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png?v8","codepoints":["1f4aa"]},"mushroom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f344.png?v8","codepoints":["1f344"]},"musical_keyboard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b9.png?v8","codepoints":["1f3b9"]},"musical_note":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b5.png?v8","codepoints":["1f3b5"]},"musical_score":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3bc.png?v8","codepoints":["1f3bc"]},"mute":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f507.png?v8","codepoints":["1f507"]},"myanmar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f2.png?v8","codepoints":["1f1f2","1f1f2"]},"nail_care":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f485.png?v8","codepoints":["1f485"]},"name_badge":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4db.png?v8","codepoints":["1f4db"]},"namibia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1e6.png?v8","codepoints":["1f1f3","1f1e6"]},"national_park":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3de.png?v8","codepoints":["1f3de"]},"nauru":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f7.png?v8","codepoints":["1f1f3","1f1f7"]},"nauseated_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f922.png?v8","codepoints":["1f922"]},"nazar_amulet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ff.png?v8","codepoints":["1f9ff"]},"neckbeard":{"src":"https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8"},"necktie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f454.png?v8","codepoints":["1f454"]},"negative_squared_cross_mark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/274e.png?v8","codepoints":["274e"]},"nepal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f5.png?v8","codepoints":["1f1f3","1f1f5"]},"nerd_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f913.png?v8","codepoints":["1f913"]},"netherlands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png?v8","codepoints":["1f1f3","1f1f1"]},"neutral_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8","codepoints":["1f610"]},"new":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f195.png?v8","codepoints":["1f195"]},"new_caledonia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1e8.png?v8","codepoints":["1f1f3","1f1e8"]},"new_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f311.png?v8","codepoints":["1f311"]},"new_moon_with_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31a.png?v8","codepoints":["1f31a"]},"new_zealand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ff.png?v8","codepoints":["1f1f3","1f1ff"]},"newspaper":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png?v8","codepoints":["1f4f0"]},"newspaper_roll":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5de.png?v8","codepoints":["1f5de"]},"next_track_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23ed.png?v8","codepoints":["23ed"]},"ng":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f196.png?v8","codepoints":["1f196"]},"ng_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f645-2642.png?v8","codepoints":["1f645","2642"]},"ng_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f645-2640.png?v8","codepoints":["1f645","2640"]},"nicaragua":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ee.png?v8","codepoints":["1f1f3","1f1ee"]},"niger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ea.png?v8","codepoints":["1f1f3","1f1ea"]},"nigeria":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ec.png?v8","codepoints":["1f1f3","1f1ec"]},"night_with_stars":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f303.png?v8","codepoints":["1f303"]},"nine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0039-20e3.png?v8","codepoints":["0039","20e3"]},"niue":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1fa.png?v8","codepoints":["1f1f3","1f1fa"]},"no_bell":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f515.png?v8","codepoints":["1f515"]},"no_bicycles":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b3.png?v8","codepoints":["1f6b3"]},"no_entry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26d4.png?v8","codepoints":["26d4"]},"no_entry_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png?v8","codepoints":["1f6ab"]},"no_good":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f645.png?v8","codepoints":["1f645"]},"no_good_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f645-2642.png?v8","codepoints":["1f645","2642"]},"no_good_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f645-2640.png?v8","codepoints":["1f645","2640"]},"no_mobile_phones":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f5.png?v8","codepoints":["1f4f5"]},"no_mouth":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f636.png?v8","codepoints":["1f636"]},"no_pedestrians":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b7.png?v8","codepoints":["1f6b7"]},"no_smoking":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ad.png?v8","codepoints":["1f6ad"]},"non-potable_water":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b1.png?v8","codepoints":["1f6b1"]},"norfolk_island":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1eb.png?v8","codepoints":["1f1f3","1f1eb"]},"north_korea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f5.png?v8","codepoints":["1f1f0","1f1f5"]},"northern_mariana_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f5.png?v8","codepoints":["1f1f2","1f1f5"]},"norway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f4.png?v8","codepoints":["1f1f3","1f1f4"]},"nose":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f443.png?v8","codepoints":["1f443"]},"notebook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d3.png?v8","codepoints":["1f4d3"]},"notebook_with_decorative_cover":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png?v8","codepoints":["1f4d4"]},"notes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b6.png?v8","codepoints":["1f3b6"]},"nut_and_bolt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f529.png?v8","codepoints":["1f529"]},"o":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b55.png?v8","codepoints":["2b55"]},"o2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f17e.png?v8","codepoints":["1f17e"]},"ocean":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png?v8","codepoints":["1f30a"]},"octocat":{"src":"https://github.githubassets.com/images/icons/emoji/octocat.png?v8"},"octopus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f419.png?v8","codepoints":["1f419"]},"oden":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f362.png?v8","codepoints":["1f362"]},"office":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e2.png?v8","codepoints":["1f3e2"]},"office_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f4bc.png?v8","codepoints":["1f9d1","1f4bc"]},"oil_drum":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e2.png?v8","codepoints":["1f6e2"]},"ok":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f197.png?v8","codepoints":["1f197"]},"ok_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44c.png?v8","codepoints":["1f44c"]},"ok_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f646-2642.png?v8","codepoints":["1f646","2642"]},"ok_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f646.png?v8","codepoints":["1f646"]},"ok_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f646-2640.png?v8","codepoints":["1f646","2640"]},"old_key":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5dd.png?v8","codepoints":["1f5dd"]},"older_adult":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d3.png?v8","codepoints":["1f9d3"]},"older_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f474.png?v8","codepoints":["1f474"]},"older_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f475.png?v8","codepoints":["1f475"]},"om":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f549.png?v8","codepoints":["1f549"]},"oman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f4-1f1f2.png?v8","codepoints":["1f1f4","1f1f2"]},"on":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51b.png?v8","codepoints":["1f51b"]},"oncoming_automobile":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f698.png?v8","codepoints":["1f698"]},"oncoming_bus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68d.png?v8","codepoints":["1f68d"]},"oncoming_police_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f694.png?v8","codepoints":["1f694"]},"oncoming_taxi":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f696.png?v8","codepoints":["1f696"]},"one":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8","codepoints":["0031","20e3"]},"one_piece_swimsuit":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa71.png?v8","codepoints":["1fa71"]},"onion":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c5.png?v8","codepoints":["1f9c5"]},"open_book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png?v8","codepoints":["1f4d6"]},"open_file_folder":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c2.png?v8","codepoints":["1f4c2"]},"open_hands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f450.png?v8","codepoints":["1f450"]},"open_mouth":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8","codepoints":["1f62e"]},"open_umbrella":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2602.png?v8","codepoints":["2602"]},"ophiuchus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26ce.png?v8","codepoints":["26ce"]},"orange":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8","codepoints":["1f34a"]},"orange_book":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d9.png?v8","codepoints":["1f4d9"]},"orange_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e0.png?v8","codepoints":["1f7e0"]},"orange_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e1.png?v8","codepoints":["1f9e1"]},"orange_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e7.png?v8","codepoints":["1f7e7"]},"orangutan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a7.png?v8","codepoints":["1f9a7"]},"orthodox_cross":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2626.png?v8","codepoints":["2626"]},"otter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a6.png?v8","codepoints":["1f9a6"]},"outbox_tray":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e4.png?v8","codepoints":["1f4e4"]},"owl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f989.png?v8","codepoints":["1f989"]},"ox":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f402.png?v8","codepoints":["1f402"]},"oyster":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9aa.png?v8","codepoints":["1f9aa"]},"package":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png?v8","codepoints":["1f4e6"]},"page_facing_up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8","codepoints":["1f4c4"]},"page_with_curl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png?v8","codepoints":["1f4c3"]},"pager":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4df.png?v8","codepoints":["1f4df"]},"paintbrush":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f58c.png?v8","codepoints":["1f58c"]},"pakistan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f0.png?v8","codepoints":["1f1f5","1f1f0"]},"palau":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1fc.png?v8","codepoints":["1f1f5","1f1fc"]},"palestinian_territories":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f8.png?v8","codepoints":["1f1f5","1f1f8"]},"palm_tree":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f334.png?v8","codepoints":["1f334"]},"palms_up_together":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f932.png?v8","codepoints":["1f932"]},"panama":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1e6.png?v8","codepoints":["1f1f5","1f1e6"]},"pancakes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95e.png?v8","codepoints":["1f95e"]},"panda_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43c.png?v8","codepoints":["1f43c"]},"paperclip":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ce.png?v8","codepoints":["1f4ce"]},"paperclips":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f587.png?v8","codepoints":["1f587"]},"papua_new_guinea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ec.png?v8","codepoints":["1f1f5","1f1ec"]},"parachute":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa82.png?v8","codepoints":["1fa82"]},"paraguay":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1fe.png?v8","codepoints":["1f1f5","1f1fe"]},"parasol_on_ground":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f1.png?v8","codepoints":["26f1"]},"parking":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f17f.png?v8","codepoints":["1f17f"]},"parrot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99c.png?v8","codepoints":["1f99c"]},"part_alternation_mark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/303d.png?v8","codepoints":["303d"]},"partly_sunny":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26c5.png?v8","codepoints":["26c5"]},"partying_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png?v8","codepoints":["1f973"]},"passenger_ship":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f3.png?v8","codepoints":["1f6f3"]},"passport_control":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6c2.png?v8","codepoints":["1f6c2"]},"pause_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f8.png?v8","codepoints":["23f8"]},"paw_prints":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png?v8","codepoints":["1f43e"]},"peace_symbol":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/262e.png?v8","codepoints":["262e"]},"peach":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f351.png?v8","codepoints":["1f351"]},"peacock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99a.png?v8","codepoints":["1f99a"]},"peanuts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f95c.png?v8","codepoints":["1f95c"]},"pear":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f350.png?v8","codepoints":["1f350"]},"pen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f58a.png?v8","codepoints":["1f58a"]},"pencil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8","codepoints":["1f4dd"]},"pencil2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8","codepoints":["270f"]},"penguin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f427.png?v8","codepoints":["1f427"]},"pensive":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8","codepoints":["1f614"]},"people_holding_hands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f91d-1f9d1.png?v8","codepoints":["1f9d1","1f91d","1f9d1"]},"performing_arts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ad.png?v8","codepoints":["1f3ad"]},"persevere":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8","codepoints":["1f623"]},"person_bald":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b2.png?v8","codepoints":["1f9d1","1f9b2"]},"person_curly_hair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b1.png?v8","codepoints":["1f9d1","1f9b1"]},"person_fencing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93a.png?v8","codepoints":["1f93a"]},"person_in_manual_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9bd.png?v8","codepoints":["1f9d1","1f9bd"]},"person_in_motorized_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9bc.png?v8","codepoints":["1f9d1","1f9bc"]},"person_red_hair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b0.png?v8","codepoints":["1f9d1","1f9b0"]},"person_white_hair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b3.png?v8","codepoints":["1f9d1","1f9b3"]},"person_with_probing_cane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9af.png?v8","codepoints":["1f9d1","1f9af"]},"person_with_turban":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f473.png?v8","codepoints":["1f473"]},"peru":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ea.png?v8","codepoints":["1f1f5","1f1ea"]},"petri_dish":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9eb.png?v8","codepoints":["1f9eb"]},"philippines":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ed.png?v8","codepoints":["1f1f5","1f1ed"]},"phone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/260e.png?v8","codepoints":["260e"]},"pick":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26cf.png?v8","codepoints":["26cf"]},"pie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f967.png?v8","codepoints":["1f967"]},"pig":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f437.png?v8","codepoints":["1f437"]},"pig2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f416.png?v8","codepoints":["1f416"]},"pig_nose":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43d.png?v8","codepoints":["1f43d"]},"pill":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48a.png?v8","codepoints":["1f48a"]},"pilot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2708.png?v8","codepoints":["1f9d1","2708"]},"pinching_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f90f.png?v8","codepoints":["1f90f"]},"pineapple":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34d.png?v8","codepoints":["1f34d"]},"ping_pong":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d3.png?v8","codepoints":["1f3d3"]},"pirate_flag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-2620.png?v8","codepoints":["1f3f4","2620"]},"pisces":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2653.png?v8","codepoints":["2653"]},"pitcairn_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f3.png?v8","codepoints":["1f1f5","1f1f3"]},"pizza":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f355.png?v8","codepoints":["1f355"]},"place_of_worship":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6d0.png?v8","codepoints":["1f6d0"]},"plate_with_cutlery":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37d.png?v8","codepoints":["1f37d"]},"play_or_pause_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23ef.png?v8","codepoints":["23ef"]},"pleading_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97a.png?v8","codepoints":["1f97a"]},"point_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8","codepoints":["1f447"]},"point_left":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f448.png?v8","codepoints":["1f448"]},"point_right":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8","codepoints":["1f449"]},"point_up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/261d.png?v8","codepoints":["261d"]},"point_up_2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f446.png?v8","codepoints":["1f446"]},"poland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f1.png?v8","codepoints":["1f1f5","1f1f1"]},"police_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f693.png?v8","codepoints":["1f693"]},"police_officer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png?v8","codepoints":["1f46e"]},"policeman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46e-2642.png?v8","codepoints":["1f46e","2642"]},"policewoman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46e-2640.png?v8","codepoints":["1f46e","2640"]},"poodle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f429.png?v8","codepoints":["1f429"]},"poop":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8","codepoints":["1f4a9"]},"popcorn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f37f.png?v8","codepoints":["1f37f"]},"portugal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f9.png?v8","codepoints":["1f1f5","1f1f9"]},"post_office":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3e3.png?v8","codepoints":["1f3e3"]},"postal_horn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ef.png?v8","codepoints":["1f4ef"]},"postbox":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ee.png?v8","codepoints":["1f4ee"]},"potable_water":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b0.png?v8","codepoints":["1f6b0"]},"potato":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f954.png?v8","codepoints":["1f954"]},"pouch":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45d.png?v8","codepoints":["1f45d"]},"poultry_leg":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f357.png?v8","codepoints":["1f357"]},"pound":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b7.png?v8","codepoints":["1f4b7"]},"pout":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8","codepoints":["1f621"]},"pouting_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63e.png?v8","codepoints":["1f63e"]},"pouting_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64e.png?v8","codepoints":["1f64e"]},"pouting_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64e-2642.png?v8","codepoints":["1f64e","2642"]},"pouting_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64e-2640.png?v8","codepoints":["1f64e","2640"]},"pray":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png?v8","codepoints":["1f64f"]},"prayer_beads":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ff.png?v8","codepoints":["1f4ff"]},"pregnant_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f930.png?v8","codepoints":["1f930"]},"pretzel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f968.png?v8","codepoints":["1f968"]},"previous_track_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23ee.png?v8","codepoints":["23ee"]},"prince":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f934.png?v8","codepoints":["1f934"]},"princess":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f478.png?v8","codepoints":["1f478"]},"printer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5a8.png?v8","codepoints":["1f5a8"]},"probing_cane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9af.png?v8","codepoints":["1f9af"]},"puerto_rico":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f7.png?v8","codepoints":["1f1f5","1f1f7"]},"punch":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8","codepoints":["1f44a"]},"purple_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e3.png?v8","codepoints":["1f7e3"]},"purple_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png?v8","codepoints":["1f49c"]},"purple_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7ea.png?v8","codepoints":["1f7ea"]},"purse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45b.png?v8","codepoints":["1f45b"]},"pushpin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8","codepoints":["1f4cc"]},"put_litter_in_its_place":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ae.png?v8","codepoints":["1f6ae"]},"qatar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f6-1f1e6.png?v8","codepoints":["1f1f6","1f1e6"]},"question":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8","codepoints":["2753"]},"rabbit":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f430.png?v8","codepoints":["1f430"]},"rabbit2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f407.png?v8","codepoints":["1f407"]},"raccoon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f99d.png?v8","codepoints":["1f99d"]},"racehorse":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40e.png?v8","codepoints":["1f40e"]},"racing_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ce.png?v8","codepoints":["1f3ce"]},"radio":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4fb.png?v8","codepoints":["1f4fb"]},"radio_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f518.png?v8","codepoints":["1f518"]},"radioactive":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2622.png?v8","codepoints":["2622"]},"rage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8","codepoints":["1f621"]},"rage1":{"src":"https://github.githubassets.com/images/icons/emoji/rage1.png?v8"},"rage2":{"src":"https://github.githubassets.com/images/icons/emoji/rage2.png?v8"},"rage3":{"src":"https://github.githubassets.com/images/icons/emoji/rage3.png?v8"},"rage4":{"src":"https://github.githubassets.com/images/icons/emoji/rage4.png?v8"},"railway_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f683.png?v8","codepoints":["1f683"]},"railway_track":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e4.png?v8","codepoints":["1f6e4"]},"rainbow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f308.png?v8","codepoints":["1f308"]},"rainbow_flag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f3-1f308.png?v8","codepoints":["1f3f3","1f308"]},"raised_back_of_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f91a.png?v8","codepoints":["1f91a"]},"raised_eyebrow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f928.png?v8","codepoints":["1f928"]},"raised_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270b.png?v8","codepoints":["270b"]},"raised_hand_with_fingers_splayed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f590.png?v8","codepoints":["1f590"]},"raised_hands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png?v8","codepoints":["1f64c"]},"raising_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64b.png?v8","codepoints":["1f64b"]},"raising_hand_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64b-2642.png?v8","codepoints":["1f64b","2642"]},"raising_hand_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64b-2640.png?v8","codepoints":["1f64b","2640"]},"ram":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40f.png?v8","codepoints":["1f40f"]},"ramen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35c.png?v8","codepoints":["1f35c"]},"rat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f400.png?v8","codepoints":["1f400"]},"razor":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa92.png?v8","codepoints":["1fa92"]},"receipt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9fe.png?v8","codepoints":["1f9fe"]},"record_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23fa.png?v8","codepoints":["23fa"]},"recycle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/267b.png?v8","codepoints":["267b"]},"red_car":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f697.png?v8","codepoints":["1f697"]},"red_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f534.png?v8","codepoints":["1f534"]},"red_envelope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e7.png?v8","codepoints":["1f9e7"]},"red_haired_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b0.png?v8","codepoints":["1f468","1f9b0"]},"red_haired_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b0.png?v8","codepoints":["1f469","1f9b0"]},"red_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e5.png?v8","codepoints":["1f7e5"]},"registered":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/00ae.png?v8","codepoints":["00ae"]},"relaxed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8","codepoints":["263a"]},"relieved":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8","codepoints":["1f60c"]},"reminder_ribbon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f397.png?v8","codepoints":["1f397"]},"repeat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f501.png?v8","codepoints":["1f501"]},"repeat_one":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f502.png?v8","codepoints":["1f502"]},"rescue_worker_helmet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26d1.png?v8","codepoints":["26d1"]},"restroom":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6bb.png?v8","codepoints":["1f6bb"]},"reunion":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1ea.png?v8","codepoints":["1f1f7","1f1ea"]},"revolving_hearts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49e.png?v8","codepoints":["1f49e"]},"rewind":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23ea.png?v8","codepoints":["23ea"]},"rhinoceros":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f98f.png?v8","codepoints":["1f98f"]},"ribbon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f380.png?v8","codepoints":["1f380"]},"rice":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35a.png?v8","codepoints":["1f35a"]},"rice_ball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f359.png?v8","codepoints":["1f359"]},"rice_cracker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f358.png?v8","codepoints":["1f358"]},"rice_scene":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f391.png?v8","codepoints":["1f391"]},"right_anger_bubble":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5ef.png?v8","codepoints":["1f5ef"]},"ring":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f48d.png?v8","codepoints":["1f48d"]},"ringed_planet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa90.png?v8","codepoints":["1fa90"]},"robot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f916.png?v8","codepoints":["1f916"]},"rocket":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f680.png?v8","codepoints":["1f680"]},"rofl":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f923.png?v8","codepoints":["1f923"]},"roll_eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f644.png?v8","codepoints":["1f644"]},"roll_of_paper":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9fb.png?v8","codepoints":["1f9fb"]},"roller_coaster":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a2.png?v8","codepoints":["1f3a2"]},"romania":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1f4.png?v8","codepoints":["1f1f7","1f1f4"]},"rooster":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f413.png?v8","codepoints":["1f413"]},"rose":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f339.png?v8","codepoints":["1f339"]},"rosette":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f5.png?v8","codepoints":["1f3f5"]},"rotating_light":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a8.png?v8","codepoints":["1f6a8"]},"round_pushpin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4cd.png?v8","codepoints":["1f4cd"]},"rowboat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a3.png?v8","codepoints":["1f6a3"]},"rowing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a3-2642.png?v8","codepoints":["1f6a3","2642"]},"rowing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a3-2640.png?v8","codepoints":["1f6a3","2640"]},"ru":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png?v8","codepoints":["1f1f7","1f1fa"]},"rugby_football":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c9.png?v8","codepoints":["1f3c9"]},"runner":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png?v8","codepoints":["1f3c3"]},"running":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png?v8","codepoints":["1f3c3"]},"running_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c3-2642.png?v8","codepoints":["1f3c3","2642"]},"running_shirt_with_sash":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3bd.png?v8","codepoints":["1f3bd"]},"running_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c3-2640.png?v8","codepoints":["1f3c3","2640"]},"rwanda":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fc.png?v8","codepoints":["1f1f7","1f1fc"]},"sa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f202.png?v8","codepoints":["1f202"]},"safety_pin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f7.png?v8","codepoints":["1f9f7"]},"safety_vest":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ba.png?v8","codepoints":["1f9ba"]},"sagittarius":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2650.png?v8","codepoints":["2650"]},"sailboat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f5.png?v8","codepoints":["26f5"]},"sake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f376.png?v8","codepoints":["1f376"]},"salt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c2.png?v8","codepoints":["1f9c2"]},"samoa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fc-1f1f8.png?v8","codepoints":["1f1fc","1f1f8"]},"san_marino":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f2.png?v8","codepoints":["1f1f8","1f1f2"]},"sandal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f461.png?v8","codepoints":["1f461"]},"sandwich":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f96a.png?v8","codepoints":["1f96a"]},"santa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f385.png?v8","codepoints":["1f385"]},"sao_tome_principe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f9.png?v8","codepoints":["1f1f8","1f1f9"]},"sari":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f97b.png?v8","codepoints":["1f97b"]},"sassy_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481-2642.png?v8","codepoints":["1f481","2642"]},"sassy_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481-2640.png?v8","codepoints":["1f481","2640"]},"satellite":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4e1.png?v8","codepoints":["1f4e1"]},"satisfied":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8","codepoints":["1f606"]},"saudi_arabia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e6.png?v8","codepoints":["1f1f8","1f1e6"]},"sauna_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d6-2642.png?v8","codepoints":["1f9d6","2642"]},"sauna_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d6.png?v8","codepoints":["1f9d6"]},"sauna_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d6-2640.png?v8","codepoints":["1f9d6","2640"]},"sauropod":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f995.png?v8","codepoints":["1f995"]},"saxophone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b7.png?v8","codepoints":["1f3b7"]},"scarf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e3.png?v8","codepoints":["1f9e3"]},"school":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3eb.png?v8","codepoints":["1f3eb"]},"school_satchel":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f392.png?v8","codepoints":["1f392"]},"scientist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f52c.png?v8","codepoints":["1f9d1","1f52c"]},"scissors":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2702.png?v8","codepoints":["2702"]},"scorpion":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f982.png?v8","codepoints":["1f982"]},"scorpius":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264f.png?v8","codepoints":["264f"]},"scotland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0073-e0063-e0074-e007f.png?v8","codepoints":["1f3f4","e0067","e0062","e0073","e0063","e0074","e007f"]},"scream":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8","codepoints":["1f631"]},"scream_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f640.png?v8","codepoints":["1f640"]},"scroll":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png?v8","codepoints":["1f4dc"]},"seat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ba.png?v8","codepoints":["1f4ba"]},"secret":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/3299.png?v8","codepoints":["3299"]},"see_no_evil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8","codepoints":["1f648"]},"seedling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f331.png?v8","codepoints":["1f331"]},"selfie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f933.png?v8","codepoints":["1f933"]},"senegal":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f3.png?v8","codepoints":["1f1f8","1f1f3"]},"serbia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1f8.png?v8","codepoints":["1f1f7","1f1f8"]},"service_dog":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f415-1f9ba.png?v8","codepoints":["1f415","1f9ba"]},"seven":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0037-20e3.png?v8","codepoints":["0037","20e3"]},"seychelles":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e8.png?v8","codepoints":["1f1f8","1f1e8"]},"shallow_pan_of_food":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f958.png?v8","codepoints":["1f958"]},"shamrock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2618.png?v8","codepoints":["2618"]},"shark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f988.png?v8","codepoints":["1f988"]},"shaved_ice":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f367.png?v8","codepoints":["1f367"]},"sheep":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f411.png?v8","codepoints":["1f411"]},"shell":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f41a.png?v8","codepoints":["1f41a"]},"shield":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e1.png?v8","codepoints":["1f6e1"]},"shinto_shrine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26e9.png?v8","codepoints":["26e9"]},"ship":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png?v8","codepoints":["1f6a2"]},"shipit":{"src":"https://github.githubassets.com/images/icons/emoji/shipit.png?v8"},"shirt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f455.png?v8","codepoints":["1f455"]},"shit":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8","codepoints":["1f4a9"]},"shoe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45e.png?v8","codepoints":["1f45e"]},"shopping":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6cd.png?v8","codepoints":["1f6cd"]},"shopping_cart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6d2.png?v8","codepoints":["1f6d2"]},"shorts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa73.png?v8","codepoints":["1fa73"]},"shower":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6bf.png?v8","codepoints":["1f6bf"]},"shrimp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f990.png?v8","codepoints":["1f990"]},"shrug":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f937.png?v8","codepoints":["1f937"]},"shushing_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92b.png?v8","codepoints":["1f92b"]},"sierra_leone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f1.png?v8","codepoints":["1f1f8","1f1f1"]},"signal_strength":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f6.png?v8","codepoints":["1f4f6"]},"singapore":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ec.png?v8","codepoints":["1f1f8","1f1ec"]},"singer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3a4.png?v8","codepoints":["1f9d1","1f3a4"]},"sint_maarten":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fd.png?v8","codepoints":["1f1f8","1f1fd"]},"six":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0036-20e3.png?v8","codepoints":["0036","20e3"]},"six_pointed_star":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52f.png?v8","codepoints":["1f52f"]},"skateboard":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f9.png?v8","codepoints":["1f6f9"]},"ski":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3bf.png?v8","codepoints":["1f3bf"]},"skier":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26f7.png?v8","codepoints":["26f7"]},"skull":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f480.png?v8","codepoints":["1f480"]},"skull_and_crossbones":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2620.png?v8","codepoints":["2620"]},"skunk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a8.png?v8","codepoints":["1f9a8"]},"sled":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6f7.png?v8","codepoints":["1f6f7"]},"sleeping":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8","codepoints":["1f634"]},"sleeping_bed":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6cc.png?v8","codepoints":["1f6cc"]},"sleepy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8","codepoints":["1f62a"]},"slightly_frowning_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f641.png?v8","codepoints":["1f641"]},"slightly_smiling_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png?v8","codepoints":["1f642"]},"slot_machine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3b0.png?v8","codepoints":["1f3b0"]},"sloth":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a5.png?v8","codepoints":["1f9a5"]},"slovakia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f0.png?v8","codepoints":["1f1f8","1f1f0"]},"slovenia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ee.png?v8","codepoints":["1f1f8","1f1ee"]},"small_airplane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6e9.png?v8","codepoints":["1f6e9"]},"small_blue_diamond":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f539.png?v8","codepoints":["1f539"]},"small_orange_diamond":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f538.png?v8","codepoints":["1f538"]},"small_red_triangle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f53a.png?v8","codepoints":["1f53a"]},"small_red_triangle_down":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f53b.png?v8","codepoints":["1f53b"]},"smile":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8","codepoints":["1f604"]},"smile_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f638.png?v8","codepoints":["1f638"]},"smiley":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8","codepoints":["1f603"]},"smiley_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63a.png?v8","codepoints":["1f63a"]},"smiling_face_with_three_hearts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f970.png?v8","codepoints":["1f970"]},"smiling_imp":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8","codepoints":["1f608"]},"smirk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8","codepoints":["1f60f"]},"smirk_cat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f63c.png?v8","codepoints":["1f63c"]},"smoking":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ac.png?v8","codepoints":["1f6ac"]},"snail":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40c.png?v8","codepoints":["1f40c"]},"snake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40d.png?v8","codepoints":["1f40d"]},"sneezing_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f927.png?v8","codepoints":["1f927"]},"snowboarder":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c2.png?v8","codepoints":["1f3c2"]},"snowflake":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8","codepoints":["2744"]},"snowman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8","codepoints":["26c4"]},"snowman_with_snow":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2603.png?v8","codepoints":["2603"]},"soap":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9fc.png?v8","codepoints":["1f9fc"]},"sob":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8","codepoints":["1f62d"]},"soccer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26bd.png?v8","codepoints":["26bd"]},"socks":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9e6.png?v8","codepoints":["1f9e6"]},"softball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f94e.png?v8","codepoints":["1f94e"]},"solomon_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e7.png?v8","codepoints":["1f1f8","1f1e7"]},"somalia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f4.png?v8","codepoints":["1f1f8","1f1f4"]},"soon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51c.png?v8","codepoints":["1f51c"]},"sos":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f198.png?v8","codepoints":["1f198"]},"sound":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f509.png?v8","codepoints":["1f509"]},"south_africa":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1e6.png?v8","codepoints":["1f1ff","1f1e6"]},"south_georgia_south_sandwich_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f8.png?v8","codepoints":["1f1ec","1f1f8"]},"south_sudan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f8.png?v8","codepoints":["1f1f8","1f1f8"]},"space_invader":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f47e.png?v8","codepoints":["1f47e"]},"spades":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2660.png?v8","codepoints":["2660"]},"spaghetti":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f35d.png?v8","codepoints":["1f35d"]},"sparkle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2747.png?v8","codepoints":["2747"]},"sparkler":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f387.png?v8","codepoints":["1f387"]},"sparkles":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8","codepoints":["2728"]},"sparkling_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png?v8","codepoints":["1f496"]},"speak_no_evil":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f64a.png?v8","codepoints":["1f64a"]},"speaker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f508.png?v8","codepoints":["1f508"]},"speaking_head":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5e3.png?v8","codepoints":["1f5e3"]},"speech_balloon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png?v8","codepoints":["1f4ac"]},"speedboat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a4.png?v8","codepoints":["1f6a4"]},"spider":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f577.png?v8","codepoints":["1f577"]},"spider_web":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f578.png?v8","codepoints":["1f578"]},"spiral_calendar":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5d3.png?v8","codepoints":["1f5d3"]},"spiral_notepad":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5d2.png?v8","codepoints":["1f5d2"]},"sponge":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9fd.png?v8","codepoints":["1f9fd"]},"spoon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f944.png?v8","codepoints":["1f944"]},"squid":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f991.png?v8","codepoints":["1f991"]},"sri_lanka":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f0.png?v8","codepoints":["1f1f1","1f1f0"]},"st_barthelemy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f1.png?v8","codepoints":["1f1e7","1f1f1"]},"st_helena":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ed.png?v8","codepoints":["1f1f8","1f1ed"]},"st_kitts_nevis":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f3.png?v8","codepoints":["1f1f0","1f1f3"]},"st_lucia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e8.png?v8","codepoints":["1f1f1","1f1e8"]},"st_martin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1eb.png?v8","codepoints":["1f1f2","1f1eb"]},"st_pierre_miquelon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f2.png?v8","codepoints":["1f1f5","1f1f2"]},"st_vincent_grenadines":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1e8.png?v8","codepoints":["1f1fb","1f1e8"]},"stadium":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3df.png?v8","codepoints":["1f3df"]},"standing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cd-2642.png?v8","codepoints":["1f9cd","2642"]},"standing_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cd.png?v8","codepoints":["1f9cd"]},"standing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9cd-2640.png?v8","codepoints":["1f9cd","2640"]},"star":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8","codepoints":["2b50"]},"star2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8","codepoints":["1f31f"]},"star_and_crescent":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/262a.png?v8","codepoints":["262a"]},"star_of_david":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2721.png?v8","codepoints":["2721"]},"star_struck":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png?v8","codepoints":["1f929"]},"stars":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f320.png?v8","codepoints":["1f320"]},"station":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f689.png?v8","codepoints":["1f689"]},"statue_of_liberty":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5fd.png?v8","codepoints":["1f5fd"]},"steam_locomotive":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f682.png?v8","codepoints":["1f682"]},"stethoscope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa7a.png?v8","codepoints":["1fa7a"]},"stew":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f372.png?v8","codepoints":["1f372"]},"stop_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f9.png?v8","codepoints":["23f9"]},"stop_sign":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6d1.png?v8","codepoints":["1f6d1"]},"stopwatch":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f1.png?v8","codepoints":["23f1"]},"straight_ruler":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4cf.png?v8","codepoints":["1f4cf"]},"strawberry":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png?v8","codepoints":["1f353"]},"stuck_out_tongue":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8","codepoints":["1f61b"]},"stuck_out_tongue_closed_eyes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8","codepoints":["1f61d"]},"stuck_out_tongue_winking_eye":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61c.png?v8","codepoints":["1f61c"]},"student":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f393.png?v8","codepoints":["1f9d1","1f393"]},"studio_microphone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f399.png?v8","codepoints":["1f399"]},"stuffed_flatbread":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f959.png?v8","codepoints":["1f959"]},"sudan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e9.png?v8","codepoints":["1f1f8","1f1e9"]},"sun_behind_large_cloud":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f325.png?v8","codepoints":["1f325"]},"sun_behind_rain_cloud":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f326.png?v8","codepoints":["1f326"]},"sun_behind_small_cloud":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f324.png?v8","codepoints":["1f324"]},"sun_with_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f31e.png?v8","codepoints":["1f31e"]},"sunflower":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f33b.png?v8","codepoints":["1f33b"]},"sunglasses":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8","codepoints":["1f60e"]},"sunny":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8","codepoints":["2600"]},"sunrise":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f305.png?v8","codepoints":["1f305"]},"sunrise_over_mountains":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f304.png?v8","codepoints":["1f304"]},"superhero":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b8.png?v8","codepoints":["1f9b8"]},"superhero_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b8-2642.png?v8","codepoints":["1f9b8","2642"]},"superhero_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b8-2640.png?v8","codepoints":["1f9b8","2640"]},"supervillain":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b9.png?v8","codepoints":["1f9b9"]},"supervillain_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b9-2642.png?v8","codepoints":["1f9b9","2642"]},"supervillain_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b9-2640.png?v8","codepoints":["1f9b9","2640"]},"surfer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c4.png?v8","codepoints":["1f3c4"]},"surfing_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c4-2642.png?v8","codepoints":["1f3c4","2642"]},"surfing_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c4-2640.png?v8","codepoints":["1f3c4","2640"]},"suriname":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f7.png?v8","codepoints":["1f1f8","1f1f7"]},"sushi":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f363.png?v8","codepoints":["1f363"]},"suspect":{"src":"https://github.githubassets.com/images/icons/emoji/suspect.png?v8"},"suspension_railway":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69f.png?v8","codepoints":["1f69f"]},"svalbard_jan_mayen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ef.png?v8","codepoints":["1f1f8","1f1ef"]},"swan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9a2.png?v8","codepoints":["1f9a2"]},"swaziland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ff.png?v8","codepoints":["1f1f8","1f1ff"]},"sweat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8","codepoints":["1f613"]},"sweat_drops":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8","codepoints":["1f4a6"]},"sweat_smile":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8","codepoints":["1f605"]},"sweden":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ea.png?v8","codepoints":["1f1f8","1f1ea"]},"sweet_potato":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f360.png?v8","codepoints":["1f360"]},"swim_brief":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa72.png?v8","codepoints":["1fa72"]},"swimmer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ca.png?v8","codepoints":["1f3ca"]},"swimming_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ca-2642.png?v8","codepoints":["1f3ca","2642"]},"swimming_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ca-2640.png?v8","codepoints":["1f3ca","2640"]},"switzerland":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ed.png?v8","codepoints":["1f1e8","1f1ed"]},"symbols":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f523.png?v8","codepoints":["1f523"]},"synagogue":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f54d.png?v8","codepoints":["1f54d"]},"syria":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fe.png?v8","codepoints":["1f1f8","1f1fe"]},"syringe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f489.png?v8","codepoints":["1f489"]},"t-rex":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f996.png?v8","codepoints":["1f996"]},"taco":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32e.png?v8","codepoints":["1f32e"]},"tada":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8","codepoints":["1f389"]},"taiwan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fc.png?v8","codepoints":["1f1f9","1f1fc"]},"tajikistan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ef.png?v8","codepoints":["1f1f9","1f1ef"]},"takeout_box":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f961.png?v8","codepoints":["1f961"]},"tanabata_tree":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f38b.png?v8","codepoints":["1f38b"]},"tangerine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8","codepoints":["1f34a"]},"tanzania":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ff.png?v8","codepoints":["1f1f9","1f1ff"]},"taurus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2649.png?v8","codepoints":["2649"]},"taxi":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f695.png?v8","codepoints":["1f695"]},"tea":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f375.png?v8","codepoints":["1f375"]},"teacher":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3eb.png?v8","codepoints":["1f9d1","1f3eb"]},"technologist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f4bb.png?v8","codepoints":["1f9d1","1f4bb"]},"teddy_bear":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f8.png?v8","codepoints":["1f9f8"]},"telephone":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/260e.png?v8","codepoints":["260e"]},"telephone_receiver":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4de.png?v8","codepoints":["1f4de"]},"telescope":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f52d.png?v8","codepoints":["1f52d"]},"tennis":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3be.png?v8","codepoints":["1f3be"]},"tent":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26fa.png?v8","codepoints":["26fa"]},"test_tube":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9ea.png?v8","codepoints":["1f9ea"]},"thailand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ed.png?v8","codepoints":["1f1f9","1f1ed"]},"thermometer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f321.png?v8","codepoints":["1f321"]},"thinking":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8","codepoints":["1f914"]},"thought_balloon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png?v8","codepoints":["1f4ad"]},"thread":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f5.png?v8","codepoints":["1f9f5"]},"three":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8","codepoints":["0033","20e3"]},"thumbsdown":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png?v8","codepoints":["1f44e"]},"thumbsup":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8","codepoints":["1f44d"]},"ticket":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ab.png?v8","codepoints":["1f3ab"]},"tickets":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f39f.png?v8","codepoints":["1f39f"]},"tiger":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f42f.png?v8","codepoints":["1f42f"]},"tiger2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f405.png?v8","codepoints":["1f405"]},"timer_clock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/23f2.png?v8","codepoints":["23f2"]},"timor_leste":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f1.png?v8","codepoints":["1f1f9","1f1f1"]},"tipping_hand_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481-2642.png?v8","codepoints":["1f481","2642"]},"tipping_hand_person":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481.png?v8","codepoints":["1f481"]},"tipping_hand_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f481-2640.png?v8","codepoints":["1f481","2640"]},"tired_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8","codepoints":["1f62b"]},"tm":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2122.png?v8","codepoints":["2122"]},"togo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ec.png?v8","codepoints":["1f1f9","1f1ec"]},"toilet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6bd.png?v8","codepoints":["1f6bd"]},"tokelau":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f0.png?v8","codepoints":["1f1f9","1f1f0"]},"tokyo_tower":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5fc.png?v8","codepoints":["1f5fc"]},"tomato":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f345.png?v8","codepoints":["1f345"]},"tonga":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f4.png?v8","codepoints":["1f1f9","1f1f4"]},"tongue":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f445.png?v8","codepoints":["1f445"]},"toolbox":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f0.png?v8","codepoints":["1f9f0"]},"tooth":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9b7.png?v8","codepoints":["1f9b7"]},"top":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51d.png?v8","codepoints":["1f51d"]},"tophat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3a9.png?v8","codepoints":["1f3a9"]},"tornado":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32a.png?v8","codepoints":["1f32a"]},"tr":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png?v8","codepoints":["1f1f9","1f1f7"]},"trackball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5b2.png?v8","codepoints":["1f5b2"]},"tractor":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69c.png?v8","codepoints":["1f69c"]},"traffic_light":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a5.png?v8","codepoints":["1f6a5"]},"train":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68b.png?v8","codepoints":["1f68b"]},"train2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f686.png?v8","codepoints":["1f686"]},"tram":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68a.png?v8","codepoints":["1f68a"]},"triangular_flag_on_post":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a9.png?v8","codepoints":["1f6a9"]},"triangular_ruler":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4d0.png?v8","codepoints":["1f4d0"]},"trident":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f531.png?v8","codepoints":["1f531"]},"trinidad_tobago":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f9.png?v8","codepoints":["1f1f9","1f1f9"]},"tristan_da_cunha":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e6.png?v8","codepoints":["1f1f9","1f1e6"]},"triumph":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8","codepoints":["1f624"]},"trolleybus":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f68e.png?v8","codepoints":["1f68e"]},"trollface":{"src":"https://github.githubassets.com/images/icons/emoji/trollface.png?v8"},"trophy":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png?v8","codepoints":["1f3c6"]},"tropical_drink":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f379.png?v8","codepoints":["1f379"]},"tropical_fish":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f420.png?v8","codepoints":["1f420"]},"truck":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f69a.png?v8","codepoints":["1f69a"]},"trumpet":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ba.png?v8","codepoints":["1f3ba"]},"tshirt":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f455.png?v8","codepoints":["1f455"]},"tulip":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f337.png?v8","codepoints":["1f337"]},"tumbler_glass":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f943.png?v8","codepoints":["1f943"]},"tunisia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f3.png?v8","codepoints":["1f1f9","1f1f3"]},"turkey":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f983.png?v8","codepoints":["1f983"]},"turkmenistan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f2.png?v8","codepoints":["1f1f9","1f1f2"]},"turks_caicos_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e8.png?v8","codepoints":["1f1f9","1f1e8"]},"turtle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f422.png?v8","codepoints":["1f422"]},"tuvalu":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fb.png?v8","codepoints":["1f1f9","1f1fb"]},"tv":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4fa.png?v8","codepoints":["1f4fa"]},"twisted_rightwards_arrows":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f500.png?v8","codepoints":["1f500"]},"two":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8","codepoints":["0032","20e3"]},"two_hearts":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f495.png?v8","codepoints":["1f495"]},"two_men_holding_hands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46c.png?v8","codepoints":["1f46c"]},"two_women_holding_hands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f46d.png?v8","codepoints":["1f46d"]},"u5272":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f239.png?v8","codepoints":["1f239"]},"u5408":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f234.png?v8","codepoints":["1f234"]},"u55b6":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f23a.png?v8","codepoints":["1f23a"]},"u6307":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f22f.png?v8","codepoints":["1f22f"]},"u6708":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f237.png?v8","codepoints":["1f237"]},"u6709":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f236.png?v8","codepoints":["1f236"]},"u6e80":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f235.png?v8","codepoints":["1f235"]},"u7121":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f21a.png?v8","codepoints":["1f21a"]},"u7533":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f238.png?v8","codepoints":["1f238"]},"u7981":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f232.png?v8","codepoints":["1f232"]},"u7a7a":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f233.png?v8","codepoints":["1f233"]},"uganda":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1ec.png?v8","codepoints":["1f1fa","1f1ec"]},"uk":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e7.png?v8","codepoints":["1f1ec","1f1e7"]},"ukraine":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1e6.png?v8","codepoints":["1f1fa","1f1e6"]},"umbrella":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2614.png?v8","codepoints":["2614"]},"unamused":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f612.png?v8","codepoints":["1f612"]},"underage":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f51e.png?v8","codepoints":["1f51e"]},"unicorn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f984.png?v8","codepoints":["1f984"]},"united_arab_emirates":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ea.png?v8","codepoints":["1f1e6","1f1ea"]},"united_nations":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f3.png?v8","codepoints":["1f1fa","1f1f3"]},"unlock":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f513.png?v8","codepoints":["1f513"]},"up":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f199.png?v8","codepoints":["1f199"]},"upside_down_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f643.png?v8","codepoints":["1f643"]},"uruguay":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1fe.png?v8","codepoints":["1f1fa","1f1fe"]},"us":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png?v8","codepoints":["1f1fa","1f1f8"]},"us_outlying_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f2.png?v8","codepoints":["1f1fa","1f1f2"]},"us_virgin_islands":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ee.png?v8","codepoints":["1f1fb","1f1ee"]},"uzbekistan":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1ff.png?v8","codepoints":["1f1fa","1f1ff"]},"v":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8","codepoints":["270c"]},"vampire":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9db.png?v8","codepoints":["1f9db"]},"vampire_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9db-2642.png?v8","codepoints":["1f9db","2642"]},"vampire_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9db-2640.png?v8","codepoints":["1f9db","2640"]},"vanuatu":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1fa.png?v8","codepoints":["1f1fb","1f1fa"]},"vatican_city":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1e6.png?v8","codepoints":["1f1fb","1f1e6"]},"venezuela":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ea.png?v8","codepoints":["1f1fb","1f1ea"]},"vertical_traffic_light":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6a6.png?v8","codepoints":["1f6a6"]},"vhs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4fc.png?v8","codepoints":["1f4fc"]},"vibration_mode":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f3.png?v8","codepoints":["1f4f3"]},"video_camera":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4f9.png?v8","codepoints":["1f4f9"]},"video_game":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png?v8","codepoints":["1f3ae"]},"vietnam":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1f3.png?v8","codepoints":["1f1fb","1f1f3"]},"violin":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3bb.png?v8","codepoints":["1f3bb"]},"virgo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/264d.png?v8","codepoints":["264d"]},"volcano":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f30b.png?v8","codepoints":["1f30b"]},"volleyball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3d0.png?v8","codepoints":["1f3d0"]},"vomiting_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92e.png?v8","codepoints":["1f92e"]},"vs":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f19a.png?v8","codepoints":["1f19a"]},"vulcan_salute":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f596.png?v8","codepoints":["1f596"]},"waffle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9c7.png?v8","codepoints":["1f9c7"]},"wales":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0077-e006c-e0073-e007f.png?v8","codepoints":["1f3f4","e0067","e0062","e0077","e006c","e0073","e007f"]},"walking":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b6.png?v8","codepoints":["1f6b6"]},"walking_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b6-2642.png?v8","codepoints":["1f6b6","2642"]},"walking_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6b6-2640.png?v8","codepoints":["1f6b6","2640"]},"wallis_futuna":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fc-1f1eb.png?v8","codepoints":["1f1fc","1f1eb"]},"waning_crescent_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f318.png?v8","codepoints":["1f318"]},"waning_gibbous_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f316.png?v8","codepoints":["1f316"]},"warning":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8","codepoints":["26a0"]},"wastebasket":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5d1.png?v8","codepoints":["1f5d1"]},"watch":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/231a.png?v8","codepoints":["231a"]},"water_buffalo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f403.png?v8","codepoints":["1f403"]},"water_polo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93d.png?v8","codepoints":["1f93d"]},"watermelon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f349.png?v8","codepoints":["1f349"]},"wave":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8","codepoints":["1f44b"]},"wavy_dash":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/3030.png?v8","codepoints":["3030"]},"waxing_crescent_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f312.png?v8","codepoints":["1f312"]},"waxing_gibbous_moon":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f314.png?v8","codepoints":["1f314"]},"wc":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6be.png?v8","codepoints":["1f6be"]},"weary":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8","codepoints":["1f629"]},"wedding":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f492.png?v8","codepoints":["1f492"]},"weight_lifting":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cb.png?v8","codepoints":["1f3cb"]},"weight_lifting_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cb-2642.png?v8","codepoints":["1f3cb","2642"]},"weight_lifting_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3cb-2640.png?v8","codepoints":["1f3cb","2640"]},"western_sahara":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ed.png?v8","codepoints":["1f1ea","1f1ed"]},"whale":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f433.png?v8","codepoints":["1f433"]},"whale2":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f40b.png?v8","codepoints":["1f40b"]},"wheel_of_dharma":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2638.png?v8","codepoints":["2638"]},"wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/267f.png?v8","codepoints":["267f"]},"white_check_mark":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8","codepoints":["2705"]},"white_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26aa.png?v8","codepoints":["26aa"]},"white_flag":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f3f3.png?v8","codepoints":["1f3f3"]},"white_flower":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4ae.png?v8","codepoints":["1f4ae"]},"white_haired_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b3.png?v8","codepoints":["1f468","1f9b3"]},"white_haired_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b3.png?v8","codepoints":["1f469","1f9b3"]},"white_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f90d.png?v8","codepoints":["1f90d"]},"white_large_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/2b1c.png?v8","codepoints":["2b1c"]},"white_medium_small_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25fd.png?v8","codepoints":["25fd"]},"white_medium_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25fb.png?v8","codepoints":["25fb"]},"white_small_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/25ab.png?v8","codepoints":["25ab"]},"white_square_button":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f533.png?v8","codepoints":["1f533"]},"wilted_flower":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f940.png?v8","codepoints":["1f940"]},"wind_chime":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f390.png?v8","codepoints":["1f390"]},"wind_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f32c.png?v8","codepoints":["1f32c"]},"wine_glass":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f377.png?v8","codepoints":["1f377"]},"wink":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8","codepoints":["1f609"]},"wolf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f43a.png?v8","codepoints":["1f43a"]},"woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469.png?v8","codepoints":["1f469"]},"woman_artist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a8.png?v8","codepoints":["1f469","1f3a8"]},"woman_astronaut":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f680.png?v8","codepoints":["1f469","1f680"]},"woman_cartwheeling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f938-2640.png?v8","codepoints":["1f938","2640"]},"woman_cook":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f373.png?v8","codepoints":["1f469","1f373"]},"woman_dancing":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f483.png?v8","codepoints":["1f483"]},"woman_facepalming":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f926-2640.png?v8","codepoints":["1f926","2640"]},"woman_factory_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3ed.png?v8","codepoints":["1f469","1f3ed"]},"woman_farmer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f33e.png?v8","codepoints":["1f469","1f33e"]},"woman_firefighter":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f692.png?v8","codepoints":["1f469","1f692"]},"woman_health_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2695.png?v8","codepoints":["1f469","2695"]},"woman_in_manual_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9bd.png?v8","codepoints":["1f469","1f9bd"]},"woman_in_motorized_wheelchair":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9bc.png?v8","codepoints":["1f469","1f9bc"]},"woman_judge":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2696.png?v8","codepoints":["1f469","2696"]},"woman_juggling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f939-2640.png?v8","codepoints":["1f939","2640"]},"woman_mechanic":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f527.png?v8","codepoints":["1f469","1f527"]},"woman_office_worker":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bc.png?v8","codepoints":["1f469","1f4bc"]},"woman_pilot":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-2708.png?v8","codepoints":["1f469","2708"]},"woman_playing_handball":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93e-2640.png?v8","codepoints":["1f93e","2640"]},"woman_playing_water_polo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93d-2640.png?v8","codepoints":["1f93d","2640"]},"woman_scientist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f52c.png?v8","codepoints":["1f469","1f52c"]},"woman_shrugging":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f937-2640.png?v8","codepoints":["1f937","2640"]},"woman_singer":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a4.png?v8","codepoints":["1f469","1f3a4"]},"woman_student":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f393.png?v8","codepoints":["1f469","1f393"]},"woman_teacher":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3eb.png?v8","codepoints":["1f469","1f3eb"]},"woman_technologist":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bb.png?v8","codepoints":["1f469","1f4bb"]},"woman_with_headscarf":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9d5.png?v8","codepoints":["1f9d5"]},"woman_with_probing_cane":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9af.png?v8","codepoints":["1f469","1f9af"]},"woman_with_turban":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f473-2640.png?v8","codepoints":["1f473","2640"]},"womans_clothes":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f45a.png?v8","codepoints":["1f45a"]},"womans_hat":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f452.png?v8","codepoints":["1f452"]},"women_wrestling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93c-2640.png?v8","codepoints":["1f93c","2640"]},"womens":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f6ba.png?v8","codepoints":["1f6ba"]},"woozy_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f974.png?v8","codepoints":["1f974"]},"world_map":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f5fa.png?v8","codepoints":["1f5fa"]},"worried":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f61f.png?v8","codepoints":["1f61f"]},"wrench":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8","codepoints":["1f527"]},"wrestling":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f93c.png?v8","codepoints":["1f93c"]},"writing_hand":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/270d.png?v8","codepoints":["270d"]},"x":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/274c.png?v8","codepoints":["274c"]},"yarn":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9f6.png?v8","codepoints":["1f9f6"]},"yawning_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f971.png?v8","codepoints":["1f971"]},"yellow_circle":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e1.png?v8","codepoints":["1f7e1"]},"yellow_heart":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png?v8","codepoints":["1f49b"]},"yellow_square":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f7e8.png?v8","codepoints":["1f7e8"]},"yemen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1fe-1f1ea.png?v8","codepoints":["1f1fe","1f1ea"]},"yen":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4b4.png?v8","codepoints":["1f4b4"]},"yin_yang":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/262f.png?v8","codepoints":["262f"]},"yo_yo":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1fa80.png?v8","codepoints":["1fa80"]},"yum":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8","codepoints":["1f60b"]},"zambia":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1f2.png?v8","codepoints":["1f1ff","1f1f2"]},"zany_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f92a.png?v8","codepoints":["1f92a"]},"zap":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/26a1.png?v8","codepoints":["26a1"]},"zebra":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f993.png?v8","codepoints":["1f993"]},"zero":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/0030-20e3.png?v8","codepoints":["0030","20e3"]},"zimbabwe":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1fc.png?v8","codepoints":["1f1ff","1f1fc"]},"zipper_mouth_face":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f910.png?v8","codepoints":["1f910"]},"zombie":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9df.png?v8","codepoints":["1f9df"]},"zombie_man":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9df-2642.png?v8","codepoints":["1f9df","2642"]},"zombie_woman":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f9df-2640.png?v8","codepoints":["1f9df","2640"]},"zzz":{"src":"https://github.githubassets.com/images/icons/emoji/unicode/1f4a4.png?v8","codepoints":["1f4a4"]}}]]></content>
      
    </entry>
    
    
  
</search>
